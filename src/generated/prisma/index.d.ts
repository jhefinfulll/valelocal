
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model cartoes
 * 
 */
export type cartoes = $Result.DefaultSelection<Prisma.$cartoesPayload>
/**
 * Model comissoes
 * 
 */
export type comissoes = $Result.DefaultSelection<Prisma.$comissoesPayload>
/**
 * Model configuracoes
 * 
 */
export type configuracoes = $Result.DefaultSelection<Prisma.$configuracoesPayload>
/**
 * Model configuracoes_sistema
 * 
 */
export type configuracoes_sistema = $Result.DefaultSelection<Prisma.$configuracoes_sistemaPayload>
/**
 * Model cobrancas
 * 
 */
export type cobrancas = $Result.DefaultSelection<Prisma.$cobrancasPayload>
/**
 * Model displays
 * 
 */
export type displays = $Result.DefaultSelection<Prisma.$displaysPayload>
/**
 * Model estabelecimento_coords
 * 
 */
export type estabelecimento_coords = $Result.DefaultSelection<Prisma.$estabelecimento_coordsPayload>
/**
 * Model estabelecimentos
 * 
 */
export type estabelecimentos = $Result.DefaultSelection<Prisma.$estabelecimentosPayload>
/**
 * Model franqueadoras
 * 
 */
export type franqueadoras = $Result.DefaultSelection<Prisma.$franqueadorasPayload>
/**
 * Model franqueados
 * 
 */
export type franqueados = $Result.DefaultSelection<Prisma.$franqueadosPayload>
/**
 * Model logs
 * 
 */
export type logs = $Result.DefaultSelection<Prisma.$logsPayload>
/**
 * Model refresh_tokens
 * 
 */
export type refresh_tokens = $Result.DefaultSelection<Prisma.$refresh_tokensPayload>
/**
 * Model solicitacoes_cartao
 * 
 */
export type solicitacoes_cartao = $Result.DefaultSelection<Prisma.$solicitacoes_cartaoPayload>
/**
 * Model transacoes
 * 
 */
export type transacoes = $Result.DefaultSelection<Prisma.$transacoesPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const CartaoStatus: {
  DISPONIVEL: 'DISPONIVEL',
  ATIVO: 'ATIVO',
  UTILIZADO: 'UTILIZADO',
  EXPIRADO: 'EXPIRADO'
};

export type CartaoStatus = (typeof CartaoStatus)[keyof typeof CartaoStatus]


export const CobrancaStatus: {
  PENDING: 'PENDING',
  PAID: 'PAID',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED'
};

export type CobrancaStatus = (typeof CobrancaStatus)[keyof typeof CobrancaStatus]


export const ComissaoStatus: {
  PENDENTE: 'PENDENTE',
  PAGA: 'PAGA',
  CANCELADA: 'CANCELADA'
};

export type ComissaoStatus = (typeof ComissaoStatus)[keyof typeof ComissaoStatus]


export const ConfigTipo: {
  TEXTO: 'TEXTO',
  NUMERO: 'NUMERO',
  BOOLEAN: 'BOOLEAN',
  JSON: 'JSON'
};

export type ConfigTipo = (typeof ConfigTipo)[keyof typeof ConfigTipo]


export const DisplayStatus: {
  DISPONIVEL: 'DISPONIVEL',
  INSTALADO: 'INSTALADO',
  MANUTENCAO: 'MANUTENCAO'
};

export type DisplayStatus = (typeof DisplayStatus)[keyof typeof DisplayStatus]


export const DisplayTipo: {
  BALCAO: 'BALCAO',
  PAREDE: 'PAREDE',
  MESA: 'MESA'
};

export type DisplayTipo = (typeof DisplayTipo)[keyof typeof DisplayTipo]


export const EstabelecimentoStatus: {
  RASCUNHO: 'RASCUNHO',
  PENDENTE_PAGAMENTO: 'PENDENTE_PAGAMENTO',
  ATIVO: 'ATIVO',
  SUSPENSO: 'SUSPENSO',
  CANCELADO: 'CANCELADO'
};

export type EstabelecimentoStatus = (typeof EstabelecimentoStatus)[keyof typeof EstabelecimentoStatus]


export const SolicitacaoStatus: {
  PENDENTE: 'PENDENTE',
  APROVADA: 'APROVADA',
  NEGADA: 'NEGADA',
  ENVIADA: 'ENVIADA',
  ENTREGUE: 'ENTREGUE'
};

export type SolicitacaoStatus = (typeof SolicitacaoStatus)[keyof typeof SolicitacaoStatus]


export const Status: {
  ATIVO: 'ATIVO',
  INATIVO: 'INATIVO'
};

export type Status = (typeof Status)[keyof typeof Status]


export const TipoCobranca: {
  ATIVACAO_ESTABELECIMENTO: 'ATIVACAO_ESTABELECIMENTO',
  REPOSICAO_CARTOES: 'REPOSICAO_CARTOES',
  TAXA_ESTABELECIMENTO: 'TAXA_ESTABELECIMENTO'
};

export type TipoCobranca = (typeof TipoCobranca)[keyof typeof TipoCobranca]


export const TransacaoStatus: {
  PENDENTE: 'PENDENTE',
  CONCLUIDA: 'CONCLUIDA',
  CANCELADA: 'CANCELADA'
};

export type TransacaoStatus = (typeof TransacaoStatus)[keyof typeof TransacaoStatus]


export const TransacaoTipo: {
  RECARGA: 'RECARGA',
  UTILIZACAO: 'UTILIZACAO'
};

export type TransacaoTipo = (typeof TransacaoTipo)[keyof typeof TransacaoTipo]


export const UserType: {
  FRANQUEADORA: 'FRANQUEADORA',
  FRANQUEADO: 'FRANQUEADO',
  ESTABELECIMENTO: 'ESTABELECIMENTO',
  USUARIO: 'USUARIO'
};

export type UserType = (typeof UserType)[keyof typeof UserType]

}

export type CartaoStatus = $Enums.CartaoStatus

export const CartaoStatus: typeof $Enums.CartaoStatus

export type CobrancaStatus = $Enums.CobrancaStatus

export const CobrancaStatus: typeof $Enums.CobrancaStatus

export type ComissaoStatus = $Enums.ComissaoStatus

export const ComissaoStatus: typeof $Enums.ComissaoStatus

export type ConfigTipo = $Enums.ConfigTipo

export const ConfigTipo: typeof $Enums.ConfigTipo

export type DisplayStatus = $Enums.DisplayStatus

export const DisplayStatus: typeof $Enums.DisplayStatus

export type DisplayTipo = $Enums.DisplayTipo

export const DisplayTipo: typeof $Enums.DisplayTipo

export type EstabelecimentoStatus = $Enums.EstabelecimentoStatus

export const EstabelecimentoStatus: typeof $Enums.EstabelecimentoStatus

export type SolicitacaoStatus = $Enums.SolicitacaoStatus

export const SolicitacaoStatus: typeof $Enums.SolicitacaoStatus

export type Status = $Enums.Status

export const Status: typeof $Enums.Status

export type TipoCobranca = $Enums.TipoCobranca

export const TipoCobranca: typeof $Enums.TipoCobranca

export type TransacaoStatus = $Enums.TransacaoStatus

export const TransacaoStatus: typeof $Enums.TransacaoStatus

export type TransacaoTipo = $Enums.TransacaoTipo

export const TransacaoTipo: typeof $Enums.TransacaoTipo

export type UserType = $Enums.UserType

export const UserType: typeof $Enums.UserType

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Cartoes
 * const cartoes = await prisma.cartoes.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Cartoes
   * const cartoes = await prisma.cartoes.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.cartoes`: Exposes CRUD operations for the **cartoes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cartoes
    * const cartoes = await prisma.cartoes.findMany()
    * ```
    */
  get cartoes(): Prisma.cartoesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comissoes`: Exposes CRUD operations for the **comissoes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comissoes
    * const comissoes = await prisma.comissoes.findMany()
    * ```
    */
  get comissoes(): Prisma.comissoesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.configuracoes`: Exposes CRUD operations for the **configuracoes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Configuracoes
    * const configuracoes = await prisma.configuracoes.findMany()
    * ```
    */
  get configuracoes(): Prisma.configuracoesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.configuracoes_sistema`: Exposes CRUD operations for the **configuracoes_sistema** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Configuracoes_sistemas
    * const configuracoes_sistemas = await prisma.configuracoes_sistema.findMany()
    * ```
    */
  get configuracoes_sistema(): Prisma.configuracoes_sistemaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cobrancas`: Exposes CRUD operations for the **cobrancas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cobrancas
    * const cobrancas = await prisma.cobrancas.findMany()
    * ```
    */
  get cobrancas(): Prisma.cobrancasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.displays`: Exposes CRUD operations for the **displays** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Displays
    * const displays = await prisma.displays.findMany()
    * ```
    */
  get displays(): Prisma.displaysDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estabelecimento_coords`: Exposes CRUD operations for the **estabelecimento_coords** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estabelecimento_coords
    * const estabelecimento_coords = await prisma.estabelecimento_coords.findMany()
    * ```
    */
  get estabelecimento_coords(): Prisma.estabelecimento_coordsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estabelecimentos`: Exposes CRUD operations for the **estabelecimentos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estabelecimentos
    * const estabelecimentos = await prisma.estabelecimentos.findMany()
    * ```
    */
  get estabelecimentos(): Prisma.estabelecimentosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.franqueadoras`: Exposes CRUD operations for the **franqueadoras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Franqueadoras
    * const franqueadoras = await prisma.franqueadoras.findMany()
    * ```
    */
  get franqueadoras(): Prisma.franqueadorasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.franqueados`: Exposes CRUD operations for the **franqueados** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Franqueados
    * const franqueados = await prisma.franqueados.findMany()
    * ```
    */
  get franqueados(): Prisma.franqueadosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.logs`: Exposes CRUD operations for the **logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Logs
    * const logs = await prisma.logs.findMany()
    * ```
    */
  get logs(): Prisma.logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.refresh_tokens`: Exposes CRUD operations for the **refresh_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Refresh_tokens
    * const refresh_tokens = await prisma.refresh_tokens.findMany()
    * ```
    */
  get refresh_tokens(): Prisma.refresh_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.solicitacoes_cartao`: Exposes CRUD operations for the **solicitacoes_cartao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Solicitacoes_cartaos
    * const solicitacoes_cartaos = await prisma.solicitacoes_cartao.findMany()
    * ```
    */
  get solicitacoes_cartao(): Prisma.solicitacoes_cartaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transacoes`: Exposes CRUD operations for the **transacoes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transacoes
    * const transacoes = await prisma.transacoes.findMany()
    * ```
    */
  get transacoes(): Prisma.transacoesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.15.0
   * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    cartoes: 'cartoes',
    comissoes: 'comissoes',
    configuracoes: 'configuracoes',
    configuracoes_sistema: 'configuracoes_sistema',
    cobrancas: 'cobrancas',
    displays: 'displays',
    estabelecimento_coords: 'estabelecimento_coords',
    estabelecimentos: 'estabelecimentos',
    franqueadoras: 'franqueadoras',
    franqueados: 'franqueados',
    logs: 'logs',
    refresh_tokens: 'refresh_tokens',
    solicitacoes_cartao: 'solicitacoes_cartao',
    transacoes: 'transacoes',
    users: 'users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "cartoes" | "comissoes" | "configuracoes" | "configuracoes_sistema" | "cobrancas" | "displays" | "estabelecimento_coords" | "estabelecimentos" | "franqueadoras" | "franqueados" | "logs" | "refresh_tokens" | "solicitacoes_cartao" | "transacoes" | "users"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      cartoes: {
        payload: Prisma.$cartoesPayload<ExtArgs>
        fields: Prisma.cartoesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cartoesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartoesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cartoesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartoesPayload>
          }
          findFirst: {
            args: Prisma.cartoesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartoesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cartoesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartoesPayload>
          }
          findMany: {
            args: Prisma.cartoesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartoesPayload>[]
          }
          create: {
            args: Prisma.cartoesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartoesPayload>
          }
          createMany: {
            args: Prisma.cartoesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cartoesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartoesPayload>[]
          }
          delete: {
            args: Prisma.cartoesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartoesPayload>
          }
          update: {
            args: Prisma.cartoesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartoesPayload>
          }
          deleteMany: {
            args: Prisma.cartoesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cartoesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cartoesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartoesPayload>[]
          }
          upsert: {
            args: Prisma.cartoesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartoesPayload>
          }
          aggregate: {
            args: Prisma.CartoesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCartoes>
          }
          groupBy: {
            args: Prisma.cartoesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CartoesGroupByOutputType>[]
          }
          count: {
            args: Prisma.cartoesCountArgs<ExtArgs>
            result: $Utils.Optional<CartoesCountAggregateOutputType> | number
          }
        }
      }
      comissoes: {
        payload: Prisma.$comissoesPayload<ExtArgs>
        fields: Prisma.comissoesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.comissoesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comissoesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.comissoesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comissoesPayload>
          }
          findFirst: {
            args: Prisma.comissoesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comissoesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.comissoesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comissoesPayload>
          }
          findMany: {
            args: Prisma.comissoesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comissoesPayload>[]
          }
          create: {
            args: Prisma.comissoesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comissoesPayload>
          }
          createMany: {
            args: Prisma.comissoesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.comissoesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comissoesPayload>[]
          }
          delete: {
            args: Prisma.comissoesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comissoesPayload>
          }
          update: {
            args: Prisma.comissoesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comissoesPayload>
          }
          deleteMany: {
            args: Prisma.comissoesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.comissoesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.comissoesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comissoesPayload>[]
          }
          upsert: {
            args: Prisma.comissoesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comissoesPayload>
          }
          aggregate: {
            args: Prisma.ComissoesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComissoes>
          }
          groupBy: {
            args: Prisma.comissoesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComissoesGroupByOutputType>[]
          }
          count: {
            args: Prisma.comissoesCountArgs<ExtArgs>
            result: $Utils.Optional<ComissoesCountAggregateOutputType> | number
          }
        }
      }
      configuracoes: {
        payload: Prisma.$configuracoesPayload<ExtArgs>
        fields: Prisma.configuracoesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.configuracoesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.configuracoesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          findFirst: {
            args: Prisma.configuracoesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.configuracoesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          findMany: {
            args: Prisma.configuracoesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>[]
          }
          create: {
            args: Prisma.configuracoesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          createMany: {
            args: Prisma.configuracoesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.configuracoesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>[]
          }
          delete: {
            args: Prisma.configuracoesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          update: {
            args: Prisma.configuracoesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          deleteMany: {
            args: Prisma.configuracoesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.configuracoesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.configuracoesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>[]
          }
          upsert: {
            args: Prisma.configuracoesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          aggregate: {
            args: Prisma.ConfiguracoesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfiguracoes>
          }
          groupBy: {
            args: Prisma.configuracoesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracoesGroupByOutputType>[]
          }
          count: {
            args: Prisma.configuracoesCountArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracoesCountAggregateOutputType> | number
          }
        }
      }
      configuracoes_sistema: {
        payload: Prisma.$configuracoes_sistemaPayload<ExtArgs>
        fields: Prisma.configuracoes_sistemaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.configuracoes_sistemaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoes_sistemaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.configuracoes_sistemaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoes_sistemaPayload>
          }
          findFirst: {
            args: Prisma.configuracoes_sistemaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoes_sistemaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.configuracoes_sistemaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoes_sistemaPayload>
          }
          findMany: {
            args: Prisma.configuracoes_sistemaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoes_sistemaPayload>[]
          }
          create: {
            args: Prisma.configuracoes_sistemaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoes_sistemaPayload>
          }
          createMany: {
            args: Prisma.configuracoes_sistemaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.configuracoes_sistemaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoes_sistemaPayload>[]
          }
          delete: {
            args: Prisma.configuracoes_sistemaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoes_sistemaPayload>
          }
          update: {
            args: Prisma.configuracoes_sistemaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoes_sistemaPayload>
          }
          deleteMany: {
            args: Prisma.configuracoes_sistemaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.configuracoes_sistemaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.configuracoes_sistemaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoes_sistemaPayload>[]
          }
          upsert: {
            args: Prisma.configuracoes_sistemaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracoes_sistemaPayload>
          }
          aggregate: {
            args: Prisma.Configuracoes_sistemaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfiguracoes_sistema>
          }
          groupBy: {
            args: Prisma.configuracoes_sistemaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Configuracoes_sistemaGroupByOutputType>[]
          }
          count: {
            args: Prisma.configuracoes_sistemaCountArgs<ExtArgs>
            result: $Utils.Optional<Configuracoes_sistemaCountAggregateOutputType> | number
          }
        }
      }
      cobrancas: {
        payload: Prisma.$cobrancasPayload<ExtArgs>
        fields: Prisma.cobrancasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cobrancasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrancasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cobrancasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrancasPayload>
          }
          findFirst: {
            args: Prisma.cobrancasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrancasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cobrancasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrancasPayload>
          }
          findMany: {
            args: Prisma.cobrancasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrancasPayload>[]
          }
          create: {
            args: Prisma.cobrancasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrancasPayload>
          }
          createMany: {
            args: Prisma.cobrancasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cobrancasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrancasPayload>[]
          }
          delete: {
            args: Prisma.cobrancasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrancasPayload>
          }
          update: {
            args: Prisma.cobrancasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrancasPayload>
          }
          deleteMany: {
            args: Prisma.cobrancasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cobrancasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cobrancasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrancasPayload>[]
          }
          upsert: {
            args: Prisma.cobrancasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cobrancasPayload>
          }
          aggregate: {
            args: Prisma.CobrancasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCobrancas>
          }
          groupBy: {
            args: Prisma.cobrancasGroupByArgs<ExtArgs>
            result: $Utils.Optional<CobrancasGroupByOutputType>[]
          }
          count: {
            args: Prisma.cobrancasCountArgs<ExtArgs>
            result: $Utils.Optional<CobrancasCountAggregateOutputType> | number
          }
        }
      }
      displays: {
        payload: Prisma.$displaysPayload<ExtArgs>
        fields: Prisma.displaysFieldRefs
        operations: {
          findUnique: {
            args: Prisma.displaysFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$displaysPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.displaysFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$displaysPayload>
          }
          findFirst: {
            args: Prisma.displaysFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$displaysPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.displaysFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$displaysPayload>
          }
          findMany: {
            args: Prisma.displaysFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$displaysPayload>[]
          }
          create: {
            args: Prisma.displaysCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$displaysPayload>
          }
          createMany: {
            args: Prisma.displaysCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.displaysCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$displaysPayload>[]
          }
          delete: {
            args: Prisma.displaysDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$displaysPayload>
          }
          update: {
            args: Prisma.displaysUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$displaysPayload>
          }
          deleteMany: {
            args: Prisma.displaysDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.displaysUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.displaysUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$displaysPayload>[]
          }
          upsert: {
            args: Prisma.displaysUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$displaysPayload>
          }
          aggregate: {
            args: Prisma.DisplaysAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDisplays>
          }
          groupBy: {
            args: Prisma.displaysGroupByArgs<ExtArgs>
            result: $Utils.Optional<DisplaysGroupByOutputType>[]
          }
          count: {
            args: Prisma.displaysCountArgs<ExtArgs>
            result: $Utils.Optional<DisplaysCountAggregateOutputType> | number
          }
        }
      }
      estabelecimento_coords: {
        payload: Prisma.$estabelecimento_coordsPayload<ExtArgs>
        fields: Prisma.estabelecimento_coordsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.estabelecimento_coordsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimento_coordsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.estabelecimento_coordsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimento_coordsPayload>
          }
          findFirst: {
            args: Prisma.estabelecimento_coordsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimento_coordsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.estabelecimento_coordsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimento_coordsPayload>
          }
          findMany: {
            args: Prisma.estabelecimento_coordsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimento_coordsPayload>[]
          }
          create: {
            args: Prisma.estabelecimento_coordsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimento_coordsPayload>
          }
          createMany: {
            args: Prisma.estabelecimento_coordsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.estabelecimento_coordsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimento_coordsPayload>[]
          }
          delete: {
            args: Prisma.estabelecimento_coordsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimento_coordsPayload>
          }
          update: {
            args: Prisma.estabelecimento_coordsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimento_coordsPayload>
          }
          deleteMany: {
            args: Prisma.estabelecimento_coordsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.estabelecimento_coordsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.estabelecimento_coordsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimento_coordsPayload>[]
          }
          upsert: {
            args: Prisma.estabelecimento_coordsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimento_coordsPayload>
          }
          aggregate: {
            args: Prisma.Estabelecimento_coordsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstabelecimento_coords>
          }
          groupBy: {
            args: Prisma.estabelecimento_coordsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Estabelecimento_coordsGroupByOutputType>[]
          }
          count: {
            args: Prisma.estabelecimento_coordsCountArgs<ExtArgs>
            result: $Utils.Optional<Estabelecimento_coordsCountAggregateOutputType> | number
          }
        }
      }
      estabelecimentos: {
        payload: Prisma.$estabelecimentosPayload<ExtArgs>
        fields: Prisma.estabelecimentosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.estabelecimentosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimentosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.estabelecimentosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimentosPayload>
          }
          findFirst: {
            args: Prisma.estabelecimentosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimentosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.estabelecimentosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimentosPayload>
          }
          findMany: {
            args: Prisma.estabelecimentosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimentosPayload>[]
          }
          create: {
            args: Prisma.estabelecimentosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimentosPayload>
          }
          createMany: {
            args: Prisma.estabelecimentosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.estabelecimentosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimentosPayload>[]
          }
          delete: {
            args: Prisma.estabelecimentosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimentosPayload>
          }
          update: {
            args: Prisma.estabelecimentosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimentosPayload>
          }
          deleteMany: {
            args: Prisma.estabelecimentosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.estabelecimentosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.estabelecimentosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimentosPayload>[]
          }
          upsert: {
            args: Prisma.estabelecimentosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estabelecimentosPayload>
          }
          aggregate: {
            args: Prisma.EstabelecimentosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstabelecimentos>
          }
          groupBy: {
            args: Prisma.estabelecimentosGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstabelecimentosGroupByOutputType>[]
          }
          count: {
            args: Prisma.estabelecimentosCountArgs<ExtArgs>
            result: $Utils.Optional<EstabelecimentosCountAggregateOutputType> | number
          }
        }
      }
      franqueadoras: {
        payload: Prisma.$franqueadorasPayload<ExtArgs>
        fields: Prisma.franqueadorasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.franqueadorasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadorasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.franqueadorasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadorasPayload>
          }
          findFirst: {
            args: Prisma.franqueadorasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadorasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.franqueadorasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadorasPayload>
          }
          findMany: {
            args: Prisma.franqueadorasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadorasPayload>[]
          }
          create: {
            args: Prisma.franqueadorasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadorasPayload>
          }
          createMany: {
            args: Prisma.franqueadorasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.franqueadorasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadorasPayload>[]
          }
          delete: {
            args: Prisma.franqueadorasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadorasPayload>
          }
          update: {
            args: Prisma.franqueadorasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadorasPayload>
          }
          deleteMany: {
            args: Prisma.franqueadorasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.franqueadorasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.franqueadorasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadorasPayload>[]
          }
          upsert: {
            args: Prisma.franqueadorasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadorasPayload>
          }
          aggregate: {
            args: Prisma.FranqueadorasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFranqueadoras>
          }
          groupBy: {
            args: Prisma.franqueadorasGroupByArgs<ExtArgs>
            result: $Utils.Optional<FranqueadorasGroupByOutputType>[]
          }
          count: {
            args: Prisma.franqueadorasCountArgs<ExtArgs>
            result: $Utils.Optional<FranqueadorasCountAggregateOutputType> | number
          }
        }
      }
      franqueados: {
        payload: Prisma.$franqueadosPayload<ExtArgs>
        fields: Prisma.franqueadosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.franqueadosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.franqueadosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadosPayload>
          }
          findFirst: {
            args: Prisma.franqueadosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.franqueadosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadosPayload>
          }
          findMany: {
            args: Prisma.franqueadosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadosPayload>[]
          }
          create: {
            args: Prisma.franqueadosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadosPayload>
          }
          createMany: {
            args: Prisma.franqueadosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.franqueadosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadosPayload>[]
          }
          delete: {
            args: Prisma.franqueadosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadosPayload>
          }
          update: {
            args: Prisma.franqueadosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadosPayload>
          }
          deleteMany: {
            args: Prisma.franqueadosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.franqueadosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.franqueadosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadosPayload>[]
          }
          upsert: {
            args: Prisma.franqueadosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$franqueadosPayload>
          }
          aggregate: {
            args: Prisma.FranqueadosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFranqueados>
          }
          groupBy: {
            args: Prisma.franqueadosGroupByArgs<ExtArgs>
            result: $Utils.Optional<FranqueadosGroupByOutputType>[]
          }
          count: {
            args: Prisma.franqueadosCountArgs<ExtArgs>
            result: $Utils.Optional<FranqueadosCountAggregateOutputType> | number
          }
        }
      }
      logs: {
        payload: Prisma.$logsPayload<ExtArgs>
        fields: Prisma.logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logsPayload>
          }
          findFirst: {
            args: Prisma.logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logsPayload>
          }
          findMany: {
            args: Prisma.logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logsPayload>[]
          }
          create: {
            args: Prisma.logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logsPayload>
          }
          createMany: {
            args: Prisma.logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logsPayload>[]
          }
          delete: {
            args: Prisma.logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logsPayload>
          }
          update: {
            args: Prisma.logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logsPayload>
          }
          deleteMany: {
            args: Prisma.logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logsPayload>[]
          }
          upsert: {
            args: Prisma.logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$logsPayload>
          }
          aggregate: {
            args: Prisma.LogsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLogs>
          }
          groupBy: {
            args: Prisma.logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<LogsGroupByOutputType>[]
          }
          count: {
            args: Prisma.logsCountArgs<ExtArgs>
            result: $Utils.Optional<LogsCountAggregateOutputType> | number
          }
        }
      }
      refresh_tokens: {
        payload: Prisma.$refresh_tokensPayload<ExtArgs>
        fields: Prisma.refresh_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.refresh_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.refresh_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          findFirst: {
            args: Prisma.refresh_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.refresh_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          findMany: {
            args: Prisma.refresh_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>[]
          }
          create: {
            args: Prisma.refresh_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          createMany: {
            args: Prisma.refresh_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.refresh_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>[]
          }
          delete: {
            args: Prisma.refresh_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          update: {
            args: Prisma.refresh_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          deleteMany: {
            args: Prisma.refresh_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.refresh_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.refresh_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>[]
          }
          upsert: {
            args: Prisma.refresh_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          aggregate: {
            args: Prisma.Refresh_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefresh_tokens>
          }
          groupBy: {
            args: Prisma.refresh_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Refresh_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.refresh_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Refresh_tokensCountAggregateOutputType> | number
          }
        }
      }
      solicitacoes_cartao: {
        payload: Prisma.$solicitacoes_cartaoPayload<ExtArgs>
        fields: Prisma.solicitacoes_cartaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.solicitacoes_cartaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacoes_cartaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.solicitacoes_cartaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacoes_cartaoPayload>
          }
          findFirst: {
            args: Prisma.solicitacoes_cartaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacoes_cartaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.solicitacoes_cartaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacoes_cartaoPayload>
          }
          findMany: {
            args: Prisma.solicitacoes_cartaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacoes_cartaoPayload>[]
          }
          create: {
            args: Prisma.solicitacoes_cartaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacoes_cartaoPayload>
          }
          createMany: {
            args: Prisma.solicitacoes_cartaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.solicitacoes_cartaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacoes_cartaoPayload>[]
          }
          delete: {
            args: Prisma.solicitacoes_cartaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacoes_cartaoPayload>
          }
          update: {
            args: Prisma.solicitacoes_cartaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacoes_cartaoPayload>
          }
          deleteMany: {
            args: Prisma.solicitacoes_cartaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.solicitacoes_cartaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.solicitacoes_cartaoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacoes_cartaoPayload>[]
          }
          upsert: {
            args: Prisma.solicitacoes_cartaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$solicitacoes_cartaoPayload>
          }
          aggregate: {
            args: Prisma.Solicitacoes_cartaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSolicitacoes_cartao>
          }
          groupBy: {
            args: Prisma.solicitacoes_cartaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Solicitacoes_cartaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.solicitacoes_cartaoCountArgs<ExtArgs>
            result: $Utils.Optional<Solicitacoes_cartaoCountAggregateOutputType> | number
          }
        }
      }
      transacoes: {
        payload: Prisma.$transacoesPayload<ExtArgs>
        fields: Prisma.transacoesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.transacoesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transacoesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.transacoesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transacoesPayload>
          }
          findFirst: {
            args: Prisma.transacoesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transacoesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.transacoesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transacoesPayload>
          }
          findMany: {
            args: Prisma.transacoesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transacoesPayload>[]
          }
          create: {
            args: Prisma.transacoesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transacoesPayload>
          }
          createMany: {
            args: Prisma.transacoesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.transacoesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transacoesPayload>[]
          }
          delete: {
            args: Prisma.transacoesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transacoesPayload>
          }
          update: {
            args: Prisma.transacoesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transacoesPayload>
          }
          deleteMany: {
            args: Prisma.transacoesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.transacoesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.transacoesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transacoesPayload>[]
          }
          upsert: {
            args: Prisma.transacoesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transacoesPayload>
          }
          aggregate: {
            args: Prisma.TransacoesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransacoes>
          }
          groupBy: {
            args: Prisma.transacoesGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransacoesGroupByOutputType>[]
          }
          count: {
            args: Prisma.transacoesCountArgs<ExtArgs>
            result: $Utils.Optional<TransacoesCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    cartoes?: cartoesOmit
    comissoes?: comissoesOmit
    configuracoes?: configuracoesOmit
    configuracoes_sistema?: configuracoes_sistemaOmit
    cobrancas?: cobrancasOmit
    displays?: displaysOmit
    estabelecimento_coords?: estabelecimento_coordsOmit
    estabelecimentos?: estabelecimentosOmit
    franqueadoras?: franqueadorasOmit
    franqueados?: franqueadosOmit
    logs?: logsOmit
    refresh_tokens?: refresh_tokensOmit
    solicitacoes_cartao?: solicitacoes_cartaoOmit
    transacoes?: transacoesOmit
    users?: usersOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CartoesCountOutputType
   */

  export type CartoesCountOutputType = {
    logs: number
    transacoes: number
  }

  export type CartoesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logs?: boolean | CartoesCountOutputTypeCountLogsArgs
    transacoes?: boolean | CartoesCountOutputTypeCountTransacoesArgs
  }

  // Custom InputTypes
  /**
   * CartoesCountOutputType without action
   */
  export type CartoesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartoesCountOutputType
     */
    select?: CartoesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CartoesCountOutputType without action
   */
  export type CartoesCountOutputTypeCountLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logsWhereInput
  }

  /**
   * CartoesCountOutputType without action
   */
  export type CartoesCountOutputTypeCountTransacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transacoesWhereInput
  }


  /**
   * Count Type ComissoesCountOutputType
   */

  export type ComissoesCountOutputType = {
    logs: number
  }

  export type ComissoesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logs?: boolean | ComissoesCountOutputTypeCountLogsArgs
  }

  // Custom InputTypes
  /**
   * ComissoesCountOutputType without action
   */
  export type ComissoesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComissoesCountOutputType
     */
    select?: ComissoesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ComissoesCountOutputType without action
   */
  export type ComissoesCountOutputTypeCountLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logsWhereInput
  }


  /**
   * Count Type DisplaysCountOutputType
   */

  export type DisplaysCountOutputType = {
    logs: number
  }

  export type DisplaysCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logs?: boolean | DisplaysCountOutputTypeCountLogsArgs
  }

  // Custom InputTypes
  /**
   * DisplaysCountOutputType without action
   */
  export type DisplaysCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DisplaysCountOutputType
     */
    select?: DisplaysCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DisplaysCountOutputType without action
   */
  export type DisplaysCountOutputTypeCountLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logsWhereInput
  }


  /**
   * Count Type EstabelecimentosCountOutputType
   */

  export type EstabelecimentosCountOutputType = {
    cartoes: number
    comissoes: number
    cobrancas: number
    displays: number
    logs: number
    solicitacoes_cartao: number
    transacoes: number
    users: number
  }

  export type EstabelecimentosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cartoes?: boolean | EstabelecimentosCountOutputTypeCountCartoesArgs
    comissoes?: boolean | EstabelecimentosCountOutputTypeCountComissoesArgs
    cobrancas?: boolean | EstabelecimentosCountOutputTypeCountCobrancasArgs
    displays?: boolean | EstabelecimentosCountOutputTypeCountDisplaysArgs
    logs?: boolean | EstabelecimentosCountOutputTypeCountLogsArgs
    solicitacoes_cartao?: boolean | EstabelecimentosCountOutputTypeCountSolicitacoes_cartaoArgs
    transacoes?: boolean | EstabelecimentosCountOutputTypeCountTransacoesArgs
    users?: boolean | EstabelecimentosCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * EstabelecimentosCountOutputType without action
   */
  export type EstabelecimentosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstabelecimentosCountOutputType
     */
    select?: EstabelecimentosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstabelecimentosCountOutputType without action
   */
  export type EstabelecimentosCountOutputTypeCountCartoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cartoesWhereInput
  }

  /**
   * EstabelecimentosCountOutputType without action
   */
  export type EstabelecimentosCountOutputTypeCountComissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comissoesWhereInput
  }

  /**
   * EstabelecimentosCountOutputType without action
   */
  export type EstabelecimentosCountOutputTypeCountCobrancasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cobrancasWhereInput
  }

  /**
   * EstabelecimentosCountOutputType without action
   */
  export type EstabelecimentosCountOutputTypeCountDisplaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: displaysWhereInput
  }

  /**
   * EstabelecimentosCountOutputType without action
   */
  export type EstabelecimentosCountOutputTypeCountLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logsWhereInput
  }

  /**
   * EstabelecimentosCountOutputType without action
   */
  export type EstabelecimentosCountOutputTypeCountSolicitacoes_cartaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: solicitacoes_cartaoWhereInput
  }

  /**
   * EstabelecimentosCountOutputType without action
   */
  export type EstabelecimentosCountOutputTypeCountTransacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transacoesWhereInput
  }

  /**
   * EstabelecimentosCountOutputType without action
   */
  export type EstabelecimentosCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
  }


  /**
   * Count Type FranqueadorasCountOutputType
   */

  export type FranqueadorasCountOutputType = {
    franqueados: number
    logs: number
    users: number
  }

  export type FranqueadorasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    franqueados?: boolean | FranqueadorasCountOutputTypeCountFranqueadosArgs
    logs?: boolean | FranqueadorasCountOutputTypeCountLogsArgs
    users?: boolean | FranqueadorasCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * FranqueadorasCountOutputType without action
   */
  export type FranqueadorasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FranqueadorasCountOutputType
     */
    select?: FranqueadorasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FranqueadorasCountOutputType without action
   */
  export type FranqueadorasCountOutputTypeCountFranqueadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: franqueadosWhereInput
  }

  /**
   * FranqueadorasCountOutputType without action
   */
  export type FranqueadorasCountOutputTypeCountLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logsWhereInput
  }

  /**
   * FranqueadorasCountOutputType without action
   */
  export type FranqueadorasCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
  }


  /**
   * Count Type FranqueadosCountOutputType
   */

  export type FranqueadosCountOutputType = {
    cartoes: number
    comissoes: number
    cobrancas: number
    displays: number
    estabelecimentos: number
    logs: number
    solicitacoes_cartao: number
    users: number
  }

  export type FranqueadosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cartoes?: boolean | FranqueadosCountOutputTypeCountCartoesArgs
    comissoes?: boolean | FranqueadosCountOutputTypeCountComissoesArgs
    cobrancas?: boolean | FranqueadosCountOutputTypeCountCobrancasArgs
    displays?: boolean | FranqueadosCountOutputTypeCountDisplaysArgs
    estabelecimentos?: boolean | FranqueadosCountOutputTypeCountEstabelecimentosArgs
    logs?: boolean | FranqueadosCountOutputTypeCountLogsArgs
    solicitacoes_cartao?: boolean | FranqueadosCountOutputTypeCountSolicitacoes_cartaoArgs
    users?: boolean | FranqueadosCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * FranqueadosCountOutputType without action
   */
  export type FranqueadosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FranqueadosCountOutputType
     */
    select?: FranqueadosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FranqueadosCountOutputType without action
   */
  export type FranqueadosCountOutputTypeCountCartoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cartoesWhereInput
  }

  /**
   * FranqueadosCountOutputType without action
   */
  export type FranqueadosCountOutputTypeCountComissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comissoesWhereInput
  }

  /**
   * FranqueadosCountOutputType without action
   */
  export type FranqueadosCountOutputTypeCountCobrancasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cobrancasWhereInput
  }

  /**
   * FranqueadosCountOutputType without action
   */
  export type FranqueadosCountOutputTypeCountDisplaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: displaysWhereInput
  }

  /**
   * FranqueadosCountOutputType without action
   */
  export type FranqueadosCountOutputTypeCountEstabelecimentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estabelecimentosWhereInput
  }

  /**
   * FranqueadosCountOutputType without action
   */
  export type FranqueadosCountOutputTypeCountLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logsWhereInput
  }

  /**
   * FranqueadosCountOutputType without action
   */
  export type FranqueadosCountOutputTypeCountSolicitacoes_cartaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: solicitacoes_cartaoWhereInput
  }

  /**
   * FranqueadosCountOutputType without action
   */
  export type FranqueadosCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
  }


  /**
   * Count Type Solicitacoes_cartaoCountOutputType
   */

  export type Solicitacoes_cartaoCountOutputType = {
    logs: number
  }

  export type Solicitacoes_cartaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logs?: boolean | Solicitacoes_cartaoCountOutputTypeCountLogsArgs
  }

  // Custom InputTypes
  /**
   * Solicitacoes_cartaoCountOutputType without action
   */
  export type Solicitacoes_cartaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Solicitacoes_cartaoCountOutputType
     */
    select?: Solicitacoes_cartaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Solicitacoes_cartaoCountOutputType without action
   */
  export type Solicitacoes_cartaoCountOutputTypeCountLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logsWhereInput
  }


  /**
   * Count Type TransacoesCountOutputType
   */

  export type TransacoesCountOutputType = {
    comissoes: number
    logs: number
  }

  export type TransacoesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comissoes?: boolean | TransacoesCountOutputTypeCountComissoesArgs
    logs?: boolean | TransacoesCountOutputTypeCountLogsArgs
  }

  // Custom InputTypes
  /**
   * TransacoesCountOutputType without action
   */
  export type TransacoesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransacoesCountOutputType
     */
    select?: TransacoesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TransacoesCountOutputType without action
   */
  export type TransacoesCountOutputTypeCountComissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comissoesWhereInput
  }

  /**
   * TransacoesCountOutputType without action
   */
  export type TransacoesCountOutputTypeCountLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logsWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    logs: number
    refresh_tokens: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logs?: boolean | UsersCountOutputTypeCountLogsArgs
    refresh_tokens?: boolean | UsersCountOutputTypeCountRefresh_tokensArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountRefresh_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refresh_tokensWhereInput
  }


  /**
   * Models
   */

  /**
   * Model cartoes
   */

  export type AggregateCartoes = {
    _count: CartoesCountAggregateOutputType | null
    _avg: CartoesAvgAggregateOutputType | null
    _sum: CartoesSumAggregateOutputType | null
    _min: CartoesMinAggregateOutputType | null
    _max: CartoesMaxAggregateOutputType | null
  }

  export type CartoesAvgAggregateOutputType = {
    valor: number | null
  }

  export type CartoesSumAggregateOutputType = {
    valor: number | null
  }

  export type CartoesMinAggregateOutputType = {
    id: string | null
    codigo: string | null
    qrCode: string | null
    valor: number | null
    status: $Enums.CartaoStatus | null
    dataAtivacao: Date | null
    dataUtilizacao: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoId: string | null
    estabelecimentoId: string | null
    usuarioId: string | null
  }

  export type CartoesMaxAggregateOutputType = {
    id: string | null
    codigo: string | null
    qrCode: string | null
    valor: number | null
    status: $Enums.CartaoStatus | null
    dataAtivacao: Date | null
    dataUtilizacao: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoId: string | null
    estabelecimentoId: string | null
    usuarioId: string | null
  }

  export type CartoesCountAggregateOutputType = {
    id: number
    codigo: number
    qrCode: number
    valor: number
    status: number
    dataAtivacao: number
    dataUtilizacao: number
    createdAt: number
    updatedAt: number
    franqueadoId: number
    estabelecimentoId: number
    usuarioId: number
    _all: number
  }


  export type CartoesAvgAggregateInputType = {
    valor?: true
  }

  export type CartoesSumAggregateInputType = {
    valor?: true
  }

  export type CartoesMinAggregateInputType = {
    id?: true
    codigo?: true
    qrCode?: true
    valor?: true
    status?: true
    dataAtivacao?: true
    dataUtilizacao?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
    estabelecimentoId?: true
    usuarioId?: true
  }

  export type CartoesMaxAggregateInputType = {
    id?: true
    codigo?: true
    qrCode?: true
    valor?: true
    status?: true
    dataAtivacao?: true
    dataUtilizacao?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
    estabelecimentoId?: true
    usuarioId?: true
  }

  export type CartoesCountAggregateInputType = {
    id?: true
    codigo?: true
    qrCode?: true
    valor?: true
    status?: true
    dataAtivacao?: true
    dataUtilizacao?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
    estabelecimentoId?: true
    usuarioId?: true
    _all?: true
  }

  export type CartoesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cartoes to aggregate.
     */
    where?: cartoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cartoes to fetch.
     */
    orderBy?: cartoesOrderByWithRelationInput | cartoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cartoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cartoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cartoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cartoes
    **/
    _count?: true | CartoesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CartoesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CartoesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CartoesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CartoesMaxAggregateInputType
  }

  export type GetCartoesAggregateType<T extends CartoesAggregateArgs> = {
        [P in keyof T & keyof AggregateCartoes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCartoes[P]>
      : GetScalarType<T[P], AggregateCartoes[P]>
  }




  export type cartoesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cartoesWhereInput
    orderBy?: cartoesOrderByWithAggregationInput | cartoesOrderByWithAggregationInput[]
    by: CartoesScalarFieldEnum[] | CartoesScalarFieldEnum
    having?: cartoesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CartoesCountAggregateInputType | true
    _avg?: CartoesAvgAggregateInputType
    _sum?: CartoesSumAggregateInputType
    _min?: CartoesMinAggregateInputType
    _max?: CartoesMaxAggregateInputType
  }

  export type CartoesGroupByOutputType = {
    id: string
    codigo: string
    qrCode: string
    valor: number
    status: $Enums.CartaoStatus
    dataAtivacao: Date | null
    dataUtilizacao: Date | null
    createdAt: Date
    updatedAt: Date
    franqueadoId: string
    estabelecimentoId: string | null
    usuarioId: string | null
    _count: CartoesCountAggregateOutputType | null
    _avg: CartoesAvgAggregateOutputType | null
    _sum: CartoesSumAggregateOutputType | null
    _min: CartoesMinAggregateOutputType | null
    _max: CartoesMaxAggregateOutputType | null
  }

  type GetCartoesGroupByPayload<T extends cartoesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CartoesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CartoesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CartoesGroupByOutputType[P]>
            : GetScalarType<T[P], CartoesGroupByOutputType[P]>
        }
      >
    >


  export type cartoesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    qrCode?: boolean
    valor?: boolean
    status?: boolean
    dataAtivacao?: boolean
    dataUtilizacao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    usuarioId?: boolean
    estabelecimentos?: boolean | cartoes$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    logs?: boolean | cartoes$logsArgs<ExtArgs>
    transacoes?: boolean | cartoes$transacoesArgs<ExtArgs>
    _count?: boolean | CartoesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cartoes"]>

  export type cartoesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    qrCode?: boolean
    valor?: boolean
    status?: boolean
    dataAtivacao?: boolean
    dataUtilizacao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    usuarioId?: boolean
    estabelecimentos?: boolean | cartoes$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cartoes"]>

  export type cartoesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    qrCode?: boolean
    valor?: boolean
    status?: boolean
    dataAtivacao?: boolean
    dataUtilizacao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    usuarioId?: boolean
    estabelecimentos?: boolean | cartoes$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cartoes"]>

  export type cartoesSelectScalar = {
    id?: boolean
    codigo?: boolean
    qrCode?: boolean
    valor?: boolean
    status?: boolean
    dataAtivacao?: boolean
    dataUtilizacao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    usuarioId?: boolean
  }

  export type cartoesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "codigo" | "qrCode" | "valor" | "status" | "dataAtivacao" | "dataUtilizacao" | "createdAt" | "updatedAt" | "franqueadoId" | "estabelecimentoId" | "usuarioId", ExtArgs["result"]["cartoes"]>
  export type cartoesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | cartoes$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    logs?: boolean | cartoes$logsArgs<ExtArgs>
    transacoes?: boolean | cartoes$transacoesArgs<ExtArgs>
    _count?: boolean | CartoesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type cartoesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | cartoes$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }
  export type cartoesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | cartoes$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }

  export type $cartoesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cartoes"
    objects: {
      estabelecimentos: Prisma.$estabelecimentosPayload<ExtArgs> | null
      franqueados: Prisma.$franqueadosPayload<ExtArgs>
      logs: Prisma.$logsPayload<ExtArgs>[]
      transacoes: Prisma.$transacoesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      codigo: string
      qrCode: string
      valor: number
      status: $Enums.CartaoStatus
      dataAtivacao: Date | null
      dataUtilizacao: Date | null
      createdAt: Date
      updatedAt: Date
      franqueadoId: string
      estabelecimentoId: string | null
      usuarioId: string | null
    }, ExtArgs["result"]["cartoes"]>
    composites: {}
  }

  type cartoesGetPayload<S extends boolean | null | undefined | cartoesDefaultArgs> = $Result.GetResult<Prisma.$cartoesPayload, S>

  type cartoesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cartoesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CartoesCountAggregateInputType | true
    }

  export interface cartoesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cartoes'], meta: { name: 'cartoes' } }
    /**
     * Find zero or one Cartoes that matches the filter.
     * @param {cartoesFindUniqueArgs} args - Arguments to find a Cartoes
     * @example
     * // Get one Cartoes
     * const cartoes = await prisma.cartoes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cartoesFindUniqueArgs>(args: SelectSubset<T, cartoesFindUniqueArgs<ExtArgs>>): Prisma__cartoesClient<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cartoes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cartoesFindUniqueOrThrowArgs} args - Arguments to find a Cartoes
     * @example
     * // Get one Cartoes
     * const cartoes = await prisma.cartoes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cartoesFindUniqueOrThrowArgs>(args: SelectSubset<T, cartoesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cartoesClient<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cartoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartoesFindFirstArgs} args - Arguments to find a Cartoes
     * @example
     * // Get one Cartoes
     * const cartoes = await prisma.cartoes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cartoesFindFirstArgs>(args?: SelectSubset<T, cartoesFindFirstArgs<ExtArgs>>): Prisma__cartoesClient<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cartoes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartoesFindFirstOrThrowArgs} args - Arguments to find a Cartoes
     * @example
     * // Get one Cartoes
     * const cartoes = await prisma.cartoes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cartoesFindFirstOrThrowArgs>(args?: SelectSubset<T, cartoesFindFirstOrThrowArgs<ExtArgs>>): Prisma__cartoesClient<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cartoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartoesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cartoes
     * const cartoes = await prisma.cartoes.findMany()
     * 
     * // Get first 10 Cartoes
     * const cartoes = await prisma.cartoes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cartoesWithIdOnly = await prisma.cartoes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cartoesFindManyArgs>(args?: SelectSubset<T, cartoesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cartoes.
     * @param {cartoesCreateArgs} args - Arguments to create a Cartoes.
     * @example
     * // Create one Cartoes
     * const Cartoes = await prisma.cartoes.create({
     *   data: {
     *     // ... data to create a Cartoes
     *   }
     * })
     * 
     */
    create<T extends cartoesCreateArgs>(args: SelectSubset<T, cartoesCreateArgs<ExtArgs>>): Prisma__cartoesClient<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cartoes.
     * @param {cartoesCreateManyArgs} args - Arguments to create many Cartoes.
     * @example
     * // Create many Cartoes
     * const cartoes = await prisma.cartoes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cartoesCreateManyArgs>(args?: SelectSubset<T, cartoesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cartoes and returns the data saved in the database.
     * @param {cartoesCreateManyAndReturnArgs} args - Arguments to create many Cartoes.
     * @example
     * // Create many Cartoes
     * const cartoes = await prisma.cartoes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cartoes and only return the `id`
     * const cartoesWithIdOnly = await prisma.cartoes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cartoesCreateManyAndReturnArgs>(args?: SelectSubset<T, cartoesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cartoes.
     * @param {cartoesDeleteArgs} args - Arguments to delete one Cartoes.
     * @example
     * // Delete one Cartoes
     * const Cartoes = await prisma.cartoes.delete({
     *   where: {
     *     // ... filter to delete one Cartoes
     *   }
     * })
     * 
     */
    delete<T extends cartoesDeleteArgs>(args: SelectSubset<T, cartoesDeleteArgs<ExtArgs>>): Prisma__cartoesClient<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cartoes.
     * @param {cartoesUpdateArgs} args - Arguments to update one Cartoes.
     * @example
     * // Update one Cartoes
     * const cartoes = await prisma.cartoes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cartoesUpdateArgs>(args: SelectSubset<T, cartoesUpdateArgs<ExtArgs>>): Prisma__cartoesClient<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cartoes.
     * @param {cartoesDeleteManyArgs} args - Arguments to filter Cartoes to delete.
     * @example
     * // Delete a few Cartoes
     * const { count } = await prisma.cartoes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cartoesDeleteManyArgs>(args?: SelectSubset<T, cartoesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cartoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartoesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cartoes
     * const cartoes = await prisma.cartoes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cartoesUpdateManyArgs>(args: SelectSubset<T, cartoesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cartoes and returns the data updated in the database.
     * @param {cartoesUpdateManyAndReturnArgs} args - Arguments to update many Cartoes.
     * @example
     * // Update many Cartoes
     * const cartoes = await prisma.cartoes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cartoes and only return the `id`
     * const cartoesWithIdOnly = await prisma.cartoes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cartoesUpdateManyAndReturnArgs>(args: SelectSubset<T, cartoesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cartoes.
     * @param {cartoesUpsertArgs} args - Arguments to update or create a Cartoes.
     * @example
     * // Update or create a Cartoes
     * const cartoes = await prisma.cartoes.upsert({
     *   create: {
     *     // ... data to create a Cartoes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cartoes we want to update
     *   }
     * })
     */
    upsert<T extends cartoesUpsertArgs>(args: SelectSubset<T, cartoesUpsertArgs<ExtArgs>>): Prisma__cartoesClient<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cartoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartoesCountArgs} args - Arguments to filter Cartoes to count.
     * @example
     * // Count the number of Cartoes
     * const count = await prisma.cartoes.count({
     *   where: {
     *     // ... the filter for the Cartoes we want to count
     *   }
     * })
    **/
    count<T extends cartoesCountArgs>(
      args?: Subset<T, cartoesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CartoesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cartoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CartoesAggregateArgs>(args: Subset<T, CartoesAggregateArgs>): Prisma.PrismaPromise<GetCartoesAggregateType<T>>

    /**
     * Group by Cartoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartoesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cartoesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cartoesGroupByArgs['orderBy'] }
        : { orderBy?: cartoesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cartoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCartoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cartoes model
   */
  readonly fields: cartoesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cartoes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cartoesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    estabelecimentos<T extends cartoes$estabelecimentosArgs<ExtArgs> = {}>(args?: Subset<T, cartoes$estabelecimentosArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    franqueados<T extends franqueadosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, franqueadosDefaultArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    logs<T extends cartoes$logsArgs<ExtArgs> = {}>(args?: Subset<T, cartoes$logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transacoes<T extends cartoes$transacoesArgs<ExtArgs> = {}>(args?: Subset<T, cartoes$transacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cartoes model
   */
  interface cartoesFieldRefs {
    readonly id: FieldRef<"cartoes", 'String'>
    readonly codigo: FieldRef<"cartoes", 'String'>
    readonly qrCode: FieldRef<"cartoes", 'String'>
    readonly valor: FieldRef<"cartoes", 'Float'>
    readonly status: FieldRef<"cartoes", 'CartaoStatus'>
    readonly dataAtivacao: FieldRef<"cartoes", 'DateTime'>
    readonly dataUtilizacao: FieldRef<"cartoes", 'DateTime'>
    readonly createdAt: FieldRef<"cartoes", 'DateTime'>
    readonly updatedAt: FieldRef<"cartoes", 'DateTime'>
    readonly franqueadoId: FieldRef<"cartoes", 'String'>
    readonly estabelecimentoId: FieldRef<"cartoes", 'String'>
    readonly usuarioId: FieldRef<"cartoes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cartoes findUnique
   */
  export type cartoesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    /**
     * Filter, which cartoes to fetch.
     */
    where: cartoesWhereUniqueInput
  }

  /**
   * cartoes findUniqueOrThrow
   */
  export type cartoesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    /**
     * Filter, which cartoes to fetch.
     */
    where: cartoesWhereUniqueInput
  }

  /**
   * cartoes findFirst
   */
  export type cartoesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    /**
     * Filter, which cartoes to fetch.
     */
    where?: cartoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cartoes to fetch.
     */
    orderBy?: cartoesOrderByWithRelationInput | cartoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cartoes.
     */
    cursor?: cartoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cartoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cartoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cartoes.
     */
    distinct?: CartoesScalarFieldEnum | CartoesScalarFieldEnum[]
  }

  /**
   * cartoes findFirstOrThrow
   */
  export type cartoesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    /**
     * Filter, which cartoes to fetch.
     */
    where?: cartoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cartoes to fetch.
     */
    orderBy?: cartoesOrderByWithRelationInput | cartoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cartoes.
     */
    cursor?: cartoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cartoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cartoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cartoes.
     */
    distinct?: CartoesScalarFieldEnum | CartoesScalarFieldEnum[]
  }

  /**
   * cartoes findMany
   */
  export type cartoesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    /**
     * Filter, which cartoes to fetch.
     */
    where?: cartoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cartoes to fetch.
     */
    orderBy?: cartoesOrderByWithRelationInput | cartoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cartoes.
     */
    cursor?: cartoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cartoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cartoes.
     */
    skip?: number
    distinct?: CartoesScalarFieldEnum | CartoesScalarFieldEnum[]
  }

  /**
   * cartoes create
   */
  export type cartoesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    /**
     * The data needed to create a cartoes.
     */
    data: XOR<cartoesCreateInput, cartoesUncheckedCreateInput>
  }

  /**
   * cartoes createMany
   */
  export type cartoesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cartoes.
     */
    data: cartoesCreateManyInput | cartoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cartoes createManyAndReturn
   */
  export type cartoesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * The data used to create many cartoes.
     */
    data: cartoesCreateManyInput | cartoesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cartoes update
   */
  export type cartoesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    /**
     * The data needed to update a cartoes.
     */
    data: XOR<cartoesUpdateInput, cartoesUncheckedUpdateInput>
    /**
     * Choose, which cartoes to update.
     */
    where: cartoesWhereUniqueInput
  }

  /**
   * cartoes updateMany
   */
  export type cartoesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cartoes.
     */
    data: XOR<cartoesUpdateManyMutationInput, cartoesUncheckedUpdateManyInput>
    /**
     * Filter which cartoes to update
     */
    where?: cartoesWhereInput
    /**
     * Limit how many cartoes to update.
     */
    limit?: number
  }

  /**
   * cartoes updateManyAndReturn
   */
  export type cartoesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * The data used to update cartoes.
     */
    data: XOR<cartoesUpdateManyMutationInput, cartoesUncheckedUpdateManyInput>
    /**
     * Filter which cartoes to update
     */
    where?: cartoesWhereInput
    /**
     * Limit how many cartoes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cartoes upsert
   */
  export type cartoesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    /**
     * The filter to search for the cartoes to update in case it exists.
     */
    where: cartoesWhereUniqueInput
    /**
     * In case the cartoes found by the `where` argument doesn't exist, create a new cartoes with this data.
     */
    create: XOR<cartoesCreateInput, cartoesUncheckedCreateInput>
    /**
     * In case the cartoes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cartoesUpdateInput, cartoesUncheckedUpdateInput>
  }

  /**
   * cartoes delete
   */
  export type cartoesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    /**
     * Filter which cartoes to delete.
     */
    where: cartoesWhereUniqueInput
  }

  /**
   * cartoes deleteMany
   */
  export type cartoesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cartoes to delete
     */
    where?: cartoesWhereInput
    /**
     * Limit how many cartoes to delete.
     */
    limit?: number
  }

  /**
   * cartoes.estabelecimentos
   */
  export type cartoes$estabelecimentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    where?: estabelecimentosWhereInput
  }

  /**
   * cartoes.logs
   */
  export type cartoes$logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    where?: logsWhereInput
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    cursor?: logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * cartoes.transacoes
   */
  export type cartoes$transacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    where?: transacoesWhereInput
    orderBy?: transacoesOrderByWithRelationInput | transacoesOrderByWithRelationInput[]
    cursor?: transacoesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransacoesScalarFieldEnum | TransacoesScalarFieldEnum[]
  }

  /**
   * cartoes without action
   */
  export type cartoesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
  }


  /**
   * Model comissoes
   */

  export type AggregateComissoes = {
    _count: ComissoesCountAggregateOutputType | null
    _avg: ComissoesAvgAggregateOutputType | null
    _sum: ComissoesSumAggregateOutputType | null
    _min: ComissoesMinAggregateOutputType | null
    _max: ComissoesMaxAggregateOutputType | null
  }

  export type ComissoesAvgAggregateOutputType = {
    valor: number | null
    percentual: number | null
  }

  export type ComissoesSumAggregateOutputType = {
    valor: number | null
    percentual: number | null
  }

  export type ComissoesMinAggregateOutputType = {
    id: string | null
    valor: number | null
    percentual: number | null
    status: $Enums.ComissaoStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoId: string | null
    estabelecimentoId: string | null
    transacaoId: string | null
  }

  export type ComissoesMaxAggregateOutputType = {
    id: string | null
    valor: number | null
    percentual: number | null
    status: $Enums.ComissaoStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoId: string | null
    estabelecimentoId: string | null
    transacaoId: string | null
  }

  export type ComissoesCountAggregateOutputType = {
    id: number
    valor: number
    percentual: number
    status: number
    createdAt: number
    updatedAt: number
    franqueadoId: number
    estabelecimentoId: number
    transacaoId: number
    _all: number
  }


  export type ComissoesAvgAggregateInputType = {
    valor?: true
    percentual?: true
  }

  export type ComissoesSumAggregateInputType = {
    valor?: true
    percentual?: true
  }

  export type ComissoesMinAggregateInputType = {
    id?: true
    valor?: true
    percentual?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
    estabelecimentoId?: true
    transacaoId?: true
  }

  export type ComissoesMaxAggregateInputType = {
    id?: true
    valor?: true
    percentual?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
    estabelecimentoId?: true
    transacaoId?: true
  }

  export type ComissoesCountAggregateInputType = {
    id?: true
    valor?: true
    percentual?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
    estabelecimentoId?: true
    transacaoId?: true
    _all?: true
  }

  export type ComissoesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comissoes to aggregate.
     */
    where?: comissoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comissoes to fetch.
     */
    orderBy?: comissoesOrderByWithRelationInput | comissoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: comissoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comissoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comissoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned comissoes
    **/
    _count?: true | ComissoesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComissoesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComissoesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComissoesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComissoesMaxAggregateInputType
  }

  export type GetComissoesAggregateType<T extends ComissoesAggregateArgs> = {
        [P in keyof T & keyof AggregateComissoes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComissoes[P]>
      : GetScalarType<T[P], AggregateComissoes[P]>
  }




  export type comissoesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comissoesWhereInput
    orderBy?: comissoesOrderByWithAggregationInput | comissoesOrderByWithAggregationInput[]
    by: ComissoesScalarFieldEnum[] | ComissoesScalarFieldEnum
    having?: comissoesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComissoesCountAggregateInputType | true
    _avg?: ComissoesAvgAggregateInputType
    _sum?: ComissoesSumAggregateInputType
    _min?: ComissoesMinAggregateInputType
    _max?: ComissoesMaxAggregateInputType
  }

  export type ComissoesGroupByOutputType = {
    id: string
    valor: number
    percentual: number
    status: $Enums.ComissaoStatus
    createdAt: Date
    updatedAt: Date
    franqueadoId: string
    estabelecimentoId: string
    transacaoId: string
    _count: ComissoesCountAggregateOutputType | null
    _avg: ComissoesAvgAggregateOutputType | null
    _sum: ComissoesSumAggregateOutputType | null
    _min: ComissoesMinAggregateOutputType | null
    _max: ComissoesMaxAggregateOutputType | null
  }

  type GetComissoesGroupByPayload<T extends comissoesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComissoesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComissoesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComissoesGroupByOutputType[P]>
            : GetScalarType<T[P], ComissoesGroupByOutputType[P]>
        }
      >
    >


  export type comissoesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    valor?: boolean
    percentual?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    transacaoId?: boolean
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    transacoes?: boolean | transacoesDefaultArgs<ExtArgs>
    logs?: boolean | comissoes$logsArgs<ExtArgs>
    _count?: boolean | ComissoesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comissoes"]>

  export type comissoesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    valor?: boolean
    percentual?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    transacaoId?: boolean
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    transacoes?: boolean | transacoesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comissoes"]>

  export type comissoesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    valor?: boolean
    percentual?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    transacaoId?: boolean
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    transacoes?: boolean | transacoesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comissoes"]>

  export type comissoesSelectScalar = {
    id?: boolean
    valor?: boolean
    percentual?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    transacaoId?: boolean
  }

  export type comissoesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "valor" | "percentual" | "status" | "createdAt" | "updatedAt" | "franqueadoId" | "estabelecimentoId" | "transacaoId", ExtArgs["result"]["comissoes"]>
  export type comissoesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    transacoes?: boolean | transacoesDefaultArgs<ExtArgs>
    logs?: boolean | comissoes$logsArgs<ExtArgs>
    _count?: boolean | ComissoesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type comissoesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    transacoes?: boolean | transacoesDefaultArgs<ExtArgs>
  }
  export type comissoesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    transacoes?: boolean | transacoesDefaultArgs<ExtArgs>
  }

  export type $comissoesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "comissoes"
    objects: {
      estabelecimentos: Prisma.$estabelecimentosPayload<ExtArgs>
      franqueados: Prisma.$franqueadosPayload<ExtArgs>
      transacoes: Prisma.$transacoesPayload<ExtArgs>
      logs: Prisma.$logsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      valor: number
      percentual: number
      status: $Enums.ComissaoStatus
      createdAt: Date
      updatedAt: Date
      franqueadoId: string
      estabelecimentoId: string
      transacaoId: string
    }, ExtArgs["result"]["comissoes"]>
    composites: {}
  }

  type comissoesGetPayload<S extends boolean | null | undefined | comissoesDefaultArgs> = $Result.GetResult<Prisma.$comissoesPayload, S>

  type comissoesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<comissoesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ComissoesCountAggregateInputType | true
    }

  export interface comissoesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['comissoes'], meta: { name: 'comissoes' } }
    /**
     * Find zero or one Comissoes that matches the filter.
     * @param {comissoesFindUniqueArgs} args - Arguments to find a Comissoes
     * @example
     * // Get one Comissoes
     * const comissoes = await prisma.comissoes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends comissoesFindUniqueArgs>(args: SelectSubset<T, comissoesFindUniqueArgs<ExtArgs>>): Prisma__comissoesClient<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comissoes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {comissoesFindUniqueOrThrowArgs} args - Arguments to find a Comissoes
     * @example
     * // Get one Comissoes
     * const comissoes = await prisma.comissoes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends comissoesFindUniqueOrThrowArgs>(args: SelectSubset<T, comissoesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__comissoesClient<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comissoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comissoesFindFirstArgs} args - Arguments to find a Comissoes
     * @example
     * // Get one Comissoes
     * const comissoes = await prisma.comissoes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends comissoesFindFirstArgs>(args?: SelectSubset<T, comissoesFindFirstArgs<ExtArgs>>): Prisma__comissoesClient<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comissoes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comissoesFindFirstOrThrowArgs} args - Arguments to find a Comissoes
     * @example
     * // Get one Comissoes
     * const comissoes = await prisma.comissoes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends comissoesFindFirstOrThrowArgs>(args?: SelectSubset<T, comissoesFindFirstOrThrowArgs<ExtArgs>>): Prisma__comissoesClient<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comissoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comissoesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comissoes
     * const comissoes = await prisma.comissoes.findMany()
     * 
     * // Get first 10 Comissoes
     * const comissoes = await prisma.comissoes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const comissoesWithIdOnly = await prisma.comissoes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends comissoesFindManyArgs>(args?: SelectSubset<T, comissoesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comissoes.
     * @param {comissoesCreateArgs} args - Arguments to create a Comissoes.
     * @example
     * // Create one Comissoes
     * const Comissoes = await prisma.comissoes.create({
     *   data: {
     *     // ... data to create a Comissoes
     *   }
     * })
     * 
     */
    create<T extends comissoesCreateArgs>(args: SelectSubset<T, comissoesCreateArgs<ExtArgs>>): Prisma__comissoesClient<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comissoes.
     * @param {comissoesCreateManyArgs} args - Arguments to create many Comissoes.
     * @example
     * // Create many Comissoes
     * const comissoes = await prisma.comissoes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends comissoesCreateManyArgs>(args?: SelectSubset<T, comissoesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Comissoes and returns the data saved in the database.
     * @param {comissoesCreateManyAndReturnArgs} args - Arguments to create many Comissoes.
     * @example
     * // Create many Comissoes
     * const comissoes = await prisma.comissoes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Comissoes and only return the `id`
     * const comissoesWithIdOnly = await prisma.comissoes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends comissoesCreateManyAndReturnArgs>(args?: SelectSubset<T, comissoesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Comissoes.
     * @param {comissoesDeleteArgs} args - Arguments to delete one Comissoes.
     * @example
     * // Delete one Comissoes
     * const Comissoes = await prisma.comissoes.delete({
     *   where: {
     *     // ... filter to delete one Comissoes
     *   }
     * })
     * 
     */
    delete<T extends comissoesDeleteArgs>(args: SelectSubset<T, comissoesDeleteArgs<ExtArgs>>): Prisma__comissoesClient<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comissoes.
     * @param {comissoesUpdateArgs} args - Arguments to update one Comissoes.
     * @example
     * // Update one Comissoes
     * const comissoes = await prisma.comissoes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends comissoesUpdateArgs>(args: SelectSubset<T, comissoesUpdateArgs<ExtArgs>>): Prisma__comissoesClient<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comissoes.
     * @param {comissoesDeleteManyArgs} args - Arguments to filter Comissoes to delete.
     * @example
     * // Delete a few Comissoes
     * const { count } = await prisma.comissoes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends comissoesDeleteManyArgs>(args?: SelectSubset<T, comissoesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comissoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comissoesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comissoes
     * const comissoes = await prisma.comissoes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends comissoesUpdateManyArgs>(args: SelectSubset<T, comissoesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comissoes and returns the data updated in the database.
     * @param {comissoesUpdateManyAndReturnArgs} args - Arguments to update many Comissoes.
     * @example
     * // Update many Comissoes
     * const comissoes = await prisma.comissoes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Comissoes and only return the `id`
     * const comissoesWithIdOnly = await prisma.comissoes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends comissoesUpdateManyAndReturnArgs>(args: SelectSubset<T, comissoesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Comissoes.
     * @param {comissoesUpsertArgs} args - Arguments to update or create a Comissoes.
     * @example
     * // Update or create a Comissoes
     * const comissoes = await prisma.comissoes.upsert({
     *   create: {
     *     // ... data to create a Comissoes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comissoes we want to update
     *   }
     * })
     */
    upsert<T extends comissoesUpsertArgs>(args: SelectSubset<T, comissoesUpsertArgs<ExtArgs>>): Prisma__comissoesClient<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comissoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comissoesCountArgs} args - Arguments to filter Comissoes to count.
     * @example
     * // Count the number of Comissoes
     * const count = await prisma.comissoes.count({
     *   where: {
     *     // ... the filter for the Comissoes we want to count
     *   }
     * })
    **/
    count<T extends comissoesCountArgs>(
      args?: Subset<T, comissoesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComissoesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comissoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComissoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComissoesAggregateArgs>(args: Subset<T, ComissoesAggregateArgs>): Prisma.PrismaPromise<GetComissoesAggregateType<T>>

    /**
     * Group by Comissoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comissoesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends comissoesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: comissoesGroupByArgs['orderBy'] }
        : { orderBy?: comissoesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, comissoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComissoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the comissoes model
   */
  readonly fields: comissoesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for comissoes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__comissoesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    estabelecimentos<T extends estabelecimentosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentosDefaultArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    franqueados<T extends franqueadosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, franqueadosDefaultArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    transacoes<T extends transacoesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, transacoesDefaultArgs<ExtArgs>>): Prisma__transacoesClient<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    logs<T extends comissoes$logsArgs<ExtArgs> = {}>(args?: Subset<T, comissoes$logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the comissoes model
   */
  interface comissoesFieldRefs {
    readonly id: FieldRef<"comissoes", 'String'>
    readonly valor: FieldRef<"comissoes", 'Float'>
    readonly percentual: FieldRef<"comissoes", 'Float'>
    readonly status: FieldRef<"comissoes", 'ComissaoStatus'>
    readonly createdAt: FieldRef<"comissoes", 'DateTime'>
    readonly updatedAt: FieldRef<"comissoes", 'DateTime'>
    readonly franqueadoId: FieldRef<"comissoes", 'String'>
    readonly estabelecimentoId: FieldRef<"comissoes", 'String'>
    readonly transacaoId: FieldRef<"comissoes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * comissoes findUnique
   */
  export type comissoesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    /**
     * Filter, which comissoes to fetch.
     */
    where: comissoesWhereUniqueInput
  }

  /**
   * comissoes findUniqueOrThrow
   */
  export type comissoesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    /**
     * Filter, which comissoes to fetch.
     */
    where: comissoesWhereUniqueInput
  }

  /**
   * comissoes findFirst
   */
  export type comissoesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    /**
     * Filter, which comissoes to fetch.
     */
    where?: comissoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comissoes to fetch.
     */
    orderBy?: comissoesOrderByWithRelationInput | comissoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comissoes.
     */
    cursor?: comissoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comissoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comissoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comissoes.
     */
    distinct?: ComissoesScalarFieldEnum | ComissoesScalarFieldEnum[]
  }

  /**
   * comissoes findFirstOrThrow
   */
  export type comissoesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    /**
     * Filter, which comissoes to fetch.
     */
    where?: comissoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comissoes to fetch.
     */
    orderBy?: comissoesOrderByWithRelationInput | comissoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comissoes.
     */
    cursor?: comissoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comissoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comissoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comissoes.
     */
    distinct?: ComissoesScalarFieldEnum | ComissoesScalarFieldEnum[]
  }

  /**
   * comissoes findMany
   */
  export type comissoesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    /**
     * Filter, which comissoes to fetch.
     */
    where?: comissoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comissoes to fetch.
     */
    orderBy?: comissoesOrderByWithRelationInput | comissoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing comissoes.
     */
    cursor?: comissoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comissoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comissoes.
     */
    skip?: number
    distinct?: ComissoesScalarFieldEnum | ComissoesScalarFieldEnum[]
  }

  /**
   * comissoes create
   */
  export type comissoesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    /**
     * The data needed to create a comissoes.
     */
    data: XOR<comissoesCreateInput, comissoesUncheckedCreateInput>
  }

  /**
   * comissoes createMany
   */
  export type comissoesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many comissoes.
     */
    data: comissoesCreateManyInput | comissoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * comissoes createManyAndReturn
   */
  export type comissoesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * The data used to create many comissoes.
     */
    data: comissoesCreateManyInput | comissoesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * comissoes update
   */
  export type comissoesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    /**
     * The data needed to update a comissoes.
     */
    data: XOR<comissoesUpdateInput, comissoesUncheckedUpdateInput>
    /**
     * Choose, which comissoes to update.
     */
    where: comissoesWhereUniqueInput
  }

  /**
   * comissoes updateMany
   */
  export type comissoesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update comissoes.
     */
    data: XOR<comissoesUpdateManyMutationInput, comissoesUncheckedUpdateManyInput>
    /**
     * Filter which comissoes to update
     */
    where?: comissoesWhereInput
    /**
     * Limit how many comissoes to update.
     */
    limit?: number
  }

  /**
   * comissoes updateManyAndReturn
   */
  export type comissoesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * The data used to update comissoes.
     */
    data: XOR<comissoesUpdateManyMutationInput, comissoesUncheckedUpdateManyInput>
    /**
     * Filter which comissoes to update
     */
    where?: comissoesWhereInput
    /**
     * Limit how many comissoes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * comissoes upsert
   */
  export type comissoesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    /**
     * The filter to search for the comissoes to update in case it exists.
     */
    where: comissoesWhereUniqueInput
    /**
     * In case the comissoes found by the `where` argument doesn't exist, create a new comissoes with this data.
     */
    create: XOR<comissoesCreateInput, comissoesUncheckedCreateInput>
    /**
     * In case the comissoes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<comissoesUpdateInput, comissoesUncheckedUpdateInput>
  }

  /**
   * comissoes delete
   */
  export type comissoesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    /**
     * Filter which comissoes to delete.
     */
    where: comissoesWhereUniqueInput
  }

  /**
   * comissoes deleteMany
   */
  export type comissoesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comissoes to delete
     */
    where?: comissoesWhereInput
    /**
     * Limit how many comissoes to delete.
     */
    limit?: number
  }

  /**
   * comissoes.logs
   */
  export type comissoes$logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    where?: logsWhereInput
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    cursor?: logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * comissoes without action
   */
  export type comissoesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
  }


  /**
   * Model configuracoes
   */

  export type AggregateConfiguracoes = {
    _count: ConfiguracoesCountAggregateOutputType | null
    _min: ConfiguracoesMinAggregateOutputType | null
    _max: ConfiguracoesMaxAggregateOutputType | null
  }

  export type ConfiguracoesMinAggregateOutputType = {
    id: string | null
    chave: string | null
    valor: string | null
    descricao: string | null
    tipo: $Enums.ConfigTipo | null
    updatedAt: Date | null
  }

  export type ConfiguracoesMaxAggregateOutputType = {
    id: string | null
    chave: string | null
    valor: string | null
    descricao: string | null
    tipo: $Enums.ConfigTipo | null
    updatedAt: Date | null
  }

  export type ConfiguracoesCountAggregateOutputType = {
    id: number
    chave: number
    valor: number
    descricao: number
    tipo: number
    updatedAt: number
    _all: number
  }


  export type ConfiguracoesMinAggregateInputType = {
    id?: true
    chave?: true
    valor?: true
    descricao?: true
    tipo?: true
    updatedAt?: true
  }

  export type ConfiguracoesMaxAggregateInputType = {
    id?: true
    chave?: true
    valor?: true
    descricao?: true
    tipo?: true
    updatedAt?: true
  }

  export type ConfiguracoesCountAggregateInputType = {
    id?: true
    chave?: true
    valor?: true
    descricao?: true
    tipo?: true
    updatedAt?: true
    _all?: true
  }

  export type ConfiguracoesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configuracoes to aggregate.
     */
    where?: configuracoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes to fetch.
     */
    orderBy?: configuracoesOrderByWithRelationInput | configuracoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: configuracoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned configuracoes
    **/
    _count?: true | ConfiguracoesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfiguracoesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfiguracoesMaxAggregateInputType
  }

  export type GetConfiguracoesAggregateType<T extends ConfiguracoesAggregateArgs> = {
        [P in keyof T & keyof AggregateConfiguracoes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfiguracoes[P]>
      : GetScalarType<T[P], AggregateConfiguracoes[P]>
  }




  export type configuracoesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: configuracoesWhereInput
    orderBy?: configuracoesOrderByWithAggregationInput | configuracoesOrderByWithAggregationInput[]
    by: ConfiguracoesScalarFieldEnum[] | ConfiguracoesScalarFieldEnum
    having?: configuracoesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfiguracoesCountAggregateInputType | true
    _min?: ConfiguracoesMinAggregateInputType
    _max?: ConfiguracoesMaxAggregateInputType
  }

  export type ConfiguracoesGroupByOutputType = {
    id: string
    chave: string
    valor: string
    descricao: string | null
    tipo: $Enums.ConfigTipo
    updatedAt: Date
    _count: ConfiguracoesCountAggregateOutputType | null
    _min: ConfiguracoesMinAggregateOutputType | null
    _max: ConfiguracoesMaxAggregateOutputType | null
  }

  type GetConfiguracoesGroupByPayload<T extends configuracoesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfiguracoesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfiguracoesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfiguracoesGroupByOutputType[P]>
            : GetScalarType<T[P], ConfiguracoesGroupByOutputType[P]>
        }
      >
    >


  export type configuracoesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chave?: boolean
    valor?: boolean
    descricao?: boolean
    tipo?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["configuracoes"]>

  export type configuracoesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chave?: boolean
    valor?: boolean
    descricao?: boolean
    tipo?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["configuracoes"]>

  export type configuracoesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chave?: boolean
    valor?: boolean
    descricao?: boolean
    tipo?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["configuracoes"]>

  export type configuracoesSelectScalar = {
    id?: boolean
    chave?: boolean
    valor?: boolean
    descricao?: boolean
    tipo?: boolean
    updatedAt?: boolean
  }

  export type configuracoesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "chave" | "valor" | "descricao" | "tipo" | "updatedAt", ExtArgs["result"]["configuracoes"]>

  export type $configuracoesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "configuracoes"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      chave: string
      valor: string
      descricao: string | null
      tipo: $Enums.ConfigTipo
      updatedAt: Date
    }, ExtArgs["result"]["configuracoes"]>
    composites: {}
  }

  type configuracoesGetPayload<S extends boolean | null | undefined | configuracoesDefaultArgs> = $Result.GetResult<Prisma.$configuracoesPayload, S>

  type configuracoesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<configuracoesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConfiguracoesCountAggregateInputType | true
    }

  export interface configuracoesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['configuracoes'], meta: { name: 'configuracoes' } }
    /**
     * Find zero or one Configuracoes that matches the filter.
     * @param {configuracoesFindUniqueArgs} args - Arguments to find a Configuracoes
     * @example
     * // Get one Configuracoes
     * const configuracoes = await prisma.configuracoes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends configuracoesFindUniqueArgs>(args: SelectSubset<T, configuracoesFindUniqueArgs<ExtArgs>>): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Configuracoes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {configuracoesFindUniqueOrThrowArgs} args - Arguments to find a Configuracoes
     * @example
     * // Get one Configuracoes
     * const configuracoes = await prisma.configuracoes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends configuracoesFindUniqueOrThrowArgs>(args: SelectSubset<T, configuracoesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configuracoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesFindFirstArgs} args - Arguments to find a Configuracoes
     * @example
     * // Get one Configuracoes
     * const configuracoes = await prisma.configuracoes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends configuracoesFindFirstArgs>(args?: SelectSubset<T, configuracoesFindFirstArgs<ExtArgs>>): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configuracoes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesFindFirstOrThrowArgs} args - Arguments to find a Configuracoes
     * @example
     * // Get one Configuracoes
     * const configuracoes = await prisma.configuracoes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends configuracoesFindFirstOrThrowArgs>(args?: SelectSubset<T, configuracoesFindFirstOrThrowArgs<ExtArgs>>): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Configuracoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Configuracoes
     * const configuracoes = await prisma.configuracoes.findMany()
     * 
     * // Get first 10 Configuracoes
     * const configuracoes = await prisma.configuracoes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configuracoesWithIdOnly = await prisma.configuracoes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends configuracoesFindManyArgs>(args?: SelectSubset<T, configuracoesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Configuracoes.
     * @param {configuracoesCreateArgs} args - Arguments to create a Configuracoes.
     * @example
     * // Create one Configuracoes
     * const Configuracoes = await prisma.configuracoes.create({
     *   data: {
     *     // ... data to create a Configuracoes
     *   }
     * })
     * 
     */
    create<T extends configuracoesCreateArgs>(args: SelectSubset<T, configuracoesCreateArgs<ExtArgs>>): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Configuracoes.
     * @param {configuracoesCreateManyArgs} args - Arguments to create many Configuracoes.
     * @example
     * // Create many Configuracoes
     * const configuracoes = await prisma.configuracoes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends configuracoesCreateManyArgs>(args?: SelectSubset<T, configuracoesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Configuracoes and returns the data saved in the database.
     * @param {configuracoesCreateManyAndReturnArgs} args - Arguments to create many Configuracoes.
     * @example
     * // Create many Configuracoes
     * const configuracoes = await prisma.configuracoes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Configuracoes and only return the `id`
     * const configuracoesWithIdOnly = await prisma.configuracoes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends configuracoesCreateManyAndReturnArgs>(args?: SelectSubset<T, configuracoesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Configuracoes.
     * @param {configuracoesDeleteArgs} args - Arguments to delete one Configuracoes.
     * @example
     * // Delete one Configuracoes
     * const Configuracoes = await prisma.configuracoes.delete({
     *   where: {
     *     // ... filter to delete one Configuracoes
     *   }
     * })
     * 
     */
    delete<T extends configuracoesDeleteArgs>(args: SelectSubset<T, configuracoesDeleteArgs<ExtArgs>>): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Configuracoes.
     * @param {configuracoesUpdateArgs} args - Arguments to update one Configuracoes.
     * @example
     * // Update one Configuracoes
     * const configuracoes = await prisma.configuracoes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends configuracoesUpdateArgs>(args: SelectSubset<T, configuracoesUpdateArgs<ExtArgs>>): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Configuracoes.
     * @param {configuracoesDeleteManyArgs} args - Arguments to filter Configuracoes to delete.
     * @example
     * // Delete a few Configuracoes
     * const { count } = await prisma.configuracoes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends configuracoesDeleteManyArgs>(args?: SelectSubset<T, configuracoesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configuracoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Configuracoes
     * const configuracoes = await prisma.configuracoes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends configuracoesUpdateManyArgs>(args: SelectSubset<T, configuracoesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configuracoes and returns the data updated in the database.
     * @param {configuracoesUpdateManyAndReturnArgs} args - Arguments to update many Configuracoes.
     * @example
     * // Update many Configuracoes
     * const configuracoes = await prisma.configuracoes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Configuracoes and only return the `id`
     * const configuracoesWithIdOnly = await prisma.configuracoes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends configuracoesUpdateManyAndReturnArgs>(args: SelectSubset<T, configuracoesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Configuracoes.
     * @param {configuracoesUpsertArgs} args - Arguments to update or create a Configuracoes.
     * @example
     * // Update or create a Configuracoes
     * const configuracoes = await prisma.configuracoes.upsert({
     *   create: {
     *     // ... data to create a Configuracoes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Configuracoes we want to update
     *   }
     * })
     */
    upsert<T extends configuracoesUpsertArgs>(args: SelectSubset<T, configuracoesUpsertArgs<ExtArgs>>): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Configuracoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesCountArgs} args - Arguments to filter Configuracoes to count.
     * @example
     * // Count the number of Configuracoes
     * const count = await prisma.configuracoes.count({
     *   where: {
     *     // ... the filter for the Configuracoes we want to count
     *   }
     * })
    **/
    count<T extends configuracoesCountArgs>(
      args?: Subset<T, configuracoesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfiguracoesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Configuracoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfiguracoesAggregateArgs>(args: Subset<T, ConfiguracoesAggregateArgs>): Prisma.PrismaPromise<GetConfiguracoesAggregateType<T>>

    /**
     * Group by Configuracoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends configuracoesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: configuracoesGroupByArgs['orderBy'] }
        : { orderBy?: configuracoesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, configuracoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfiguracoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the configuracoes model
   */
  readonly fields: configuracoesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for configuracoes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__configuracoesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the configuracoes model
   */
  interface configuracoesFieldRefs {
    readonly id: FieldRef<"configuracoes", 'String'>
    readonly chave: FieldRef<"configuracoes", 'String'>
    readonly valor: FieldRef<"configuracoes", 'String'>
    readonly descricao: FieldRef<"configuracoes", 'String'>
    readonly tipo: FieldRef<"configuracoes", 'ConfigTipo'>
    readonly updatedAt: FieldRef<"configuracoes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * configuracoes findUnique
   */
  export type configuracoesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
    /**
     * Filter, which configuracoes to fetch.
     */
    where: configuracoesWhereUniqueInput
  }

  /**
   * configuracoes findUniqueOrThrow
   */
  export type configuracoesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
    /**
     * Filter, which configuracoes to fetch.
     */
    where: configuracoesWhereUniqueInput
  }

  /**
   * configuracoes findFirst
   */
  export type configuracoesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
    /**
     * Filter, which configuracoes to fetch.
     */
    where?: configuracoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes to fetch.
     */
    orderBy?: configuracoesOrderByWithRelationInput | configuracoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configuracoes.
     */
    cursor?: configuracoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configuracoes.
     */
    distinct?: ConfiguracoesScalarFieldEnum | ConfiguracoesScalarFieldEnum[]
  }

  /**
   * configuracoes findFirstOrThrow
   */
  export type configuracoesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
    /**
     * Filter, which configuracoes to fetch.
     */
    where?: configuracoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes to fetch.
     */
    orderBy?: configuracoesOrderByWithRelationInput | configuracoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configuracoes.
     */
    cursor?: configuracoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configuracoes.
     */
    distinct?: ConfiguracoesScalarFieldEnum | ConfiguracoesScalarFieldEnum[]
  }

  /**
   * configuracoes findMany
   */
  export type configuracoesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
    /**
     * Filter, which configuracoes to fetch.
     */
    where?: configuracoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes to fetch.
     */
    orderBy?: configuracoesOrderByWithRelationInput | configuracoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing configuracoes.
     */
    cursor?: configuracoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes.
     */
    skip?: number
    distinct?: ConfiguracoesScalarFieldEnum | ConfiguracoesScalarFieldEnum[]
  }

  /**
   * configuracoes create
   */
  export type configuracoesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
    /**
     * The data needed to create a configuracoes.
     */
    data: XOR<configuracoesCreateInput, configuracoesUncheckedCreateInput>
  }

  /**
   * configuracoes createMany
   */
  export type configuracoesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many configuracoes.
     */
    data: configuracoesCreateManyInput | configuracoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * configuracoes createManyAndReturn
   */
  export type configuracoesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
    /**
     * The data used to create many configuracoes.
     */
    data: configuracoesCreateManyInput | configuracoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * configuracoes update
   */
  export type configuracoesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
    /**
     * The data needed to update a configuracoes.
     */
    data: XOR<configuracoesUpdateInput, configuracoesUncheckedUpdateInput>
    /**
     * Choose, which configuracoes to update.
     */
    where: configuracoesWhereUniqueInput
  }

  /**
   * configuracoes updateMany
   */
  export type configuracoesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update configuracoes.
     */
    data: XOR<configuracoesUpdateManyMutationInput, configuracoesUncheckedUpdateManyInput>
    /**
     * Filter which configuracoes to update
     */
    where?: configuracoesWhereInput
    /**
     * Limit how many configuracoes to update.
     */
    limit?: number
  }

  /**
   * configuracoes updateManyAndReturn
   */
  export type configuracoesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
    /**
     * The data used to update configuracoes.
     */
    data: XOR<configuracoesUpdateManyMutationInput, configuracoesUncheckedUpdateManyInput>
    /**
     * Filter which configuracoes to update
     */
    where?: configuracoesWhereInput
    /**
     * Limit how many configuracoes to update.
     */
    limit?: number
  }

  /**
   * configuracoes upsert
   */
  export type configuracoesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
    /**
     * The filter to search for the configuracoes to update in case it exists.
     */
    where: configuracoesWhereUniqueInput
    /**
     * In case the configuracoes found by the `where` argument doesn't exist, create a new configuracoes with this data.
     */
    create: XOR<configuracoesCreateInput, configuracoesUncheckedCreateInput>
    /**
     * In case the configuracoes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<configuracoesUpdateInput, configuracoesUncheckedUpdateInput>
  }

  /**
   * configuracoes delete
   */
  export type configuracoesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
    /**
     * Filter which configuracoes to delete.
     */
    where: configuracoesWhereUniqueInput
  }

  /**
   * configuracoes deleteMany
   */
  export type configuracoesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configuracoes to delete
     */
    where?: configuracoesWhereInput
    /**
     * Limit how many configuracoes to delete.
     */
    limit?: number
  }

  /**
   * configuracoes without action
   */
  export type configuracoesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes
     */
    omit?: configuracoesOmit<ExtArgs> | null
  }


  /**
   * Model configuracoes_sistema
   */

  export type AggregateConfiguracoes_sistema = {
    _count: Configuracoes_sistemaCountAggregateOutputType | null
    _min: Configuracoes_sistemaMinAggregateOutputType | null
    _max: Configuracoes_sistemaMaxAggregateOutputType | null
  }

  export type Configuracoes_sistemaMinAggregateOutputType = {
    id: string | null
    chave: string | null
    valor: string | null
    tipo: string | null
  }

  export type Configuracoes_sistemaMaxAggregateOutputType = {
    id: string | null
    chave: string | null
    valor: string | null
    tipo: string | null
  }

  export type Configuracoes_sistemaCountAggregateOutputType = {
    id: number
    chave: number
    valor: number
    tipo: number
    _all: number
  }


  export type Configuracoes_sistemaMinAggregateInputType = {
    id?: true
    chave?: true
    valor?: true
    tipo?: true
  }

  export type Configuracoes_sistemaMaxAggregateInputType = {
    id?: true
    chave?: true
    valor?: true
    tipo?: true
  }

  export type Configuracoes_sistemaCountAggregateInputType = {
    id?: true
    chave?: true
    valor?: true
    tipo?: true
    _all?: true
  }

  export type Configuracoes_sistemaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configuracoes_sistema to aggregate.
     */
    where?: configuracoes_sistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes_sistemas to fetch.
     */
    orderBy?: configuracoes_sistemaOrderByWithRelationInput | configuracoes_sistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: configuracoes_sistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes_sistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes_sistemas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned configuracoes_sistemas
    **/
    _count?: true | Configuracoes_sistemaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Configuracoes_sistemaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Configuracoes_sistemaMaxAggregateInputType
  }

  export type GetConfiguracoes_sistemaAggregateType<T extends Configuracoes_sistemaAggregateArgs> = {
        [P in keyof T & keyof AggregateConfiguracoes_sistema]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfiguracoes_sistema[P]>
      : GetScalarType<T[P], AggregateConfiguracoes_sistema[P]>
  }




  export type configuracoes_sistemaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: configuracoes_sistemaWhereInput
    orderBy?: configuracoes_sistemaOrderByWithAggregationInput | configuracoes_sistemaOrderByWithAggregationInput[]
    by: Configuracoes_sistemaScalarFieldEnum[] | Configuracoes_sistemaScalarFieldEnum
    having?: configuracoes_sistemaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Configuracoes_sistemaCountAggregateInputType | true
    _min?: Configuracoes_sistemaMinAggregateInputType
    _max?: Configuracoes_sistemaMaxAggregateInputType
  }

  export type Configuracoes_sistemaGroupByOutputType = {
    id: string
    chave: string
    valor: string
    tipo: string
    _count: Configuracoes_sistemaCountAggregateOutputType | null
    _min: Configuracoes_sistemaMinAggregateOutputType | null
    _max: Configuracoes_sistemaMaxAggregateOutputType | null
  }

  type GetConfiguracoes_sistemaGroupByPayload<T extends configuracoes_sistemaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Configuracoes_sistemaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Configuracoes_sistemaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Configuracoes_sistemaGroupByOutputType[P]>
            : GetScalarType<T[P], Configuracoes_sistemaGroupByOutputType[P]>
        }
      >
    >


  export type configuracoes_sistemaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chave?: boolean
    valor?: boolean
    tipo?: boolean
  }, ExtArgs["result"]["configuracoes_sistema"]>

  export type configuracoes_sistemaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chave?: boolean
    valor?: boolean
    tipo?: boolean
  }, ExtArgs["result"]["configuracoes_sistema"]>

  export type configuracoes_sistemaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chave?: boolean
    valor?: boolean
    tipo?: boolean
  }, ExtArgs["result"]["configuracoes_sistema"]>

  export type configuracoes_sistemaSelectScalar = {
    id?: boolean
    chave?: boolean
    valor?: boolean
    tipo?: boolean
  }

  export type configuracoes_sistemaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "chave" | "valor" | "tipo", ExtArgs["result"]["configuracoes_sistema"]>

  export type $configuracoes_sistemaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "configuracoes_sistema"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      chave: string
      valor: string
      tipo: string
    }, ExtArgs["result"]["configuracoes_sistema"]>
    composites: {}
  }

  type configuracoes_sistemaGetPayload<S extends boolean | null | undefined | configuracoes_sistemaDefaultArgs> = $Result.GetResult<Prisma.$configuracoes_sistemaPayload, S>

  type configuracoes_sistemaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<configuracoes_sistemaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Configuracoes_sistemaCountAggregateInputType | true
    }

  export interface configuracoes_sistemaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['configuracoes_sistema'], meta: { name: 'configuracoes_sistema' } }
    /**
     * Find zero or one Configuracoes_sistema that matches the filter.
     * @param {configuracoes_sistemaFindUniqueArgs} args - Arguments to find a Configuracoes_sistema
     * @example
     * // Get one Configuracoes_sistema
     * const configuracoes_sistema = await prisma.configuracoes_sistema.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends configuracoes_sistemaFindUniqueArgs>(args: SelectSubset<T, configuracoes_sistemaFindUniqueArgs<ExtArgs>>): Prisma__configuracoes_sistemaClient<$Result.GetResult<Prisma.$configuracoes_sistemaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Configuracoes_sistema that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {configuracoes_sistemaFindUniqueOrThrowArgs} args - Arguments to find a Configuracoes_sistema
     * @example
     * // Get one Configuracoes_sistema
     * const configuracoes_sistema = await prisma.configuracoes_sistema.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends configuracoes_sistemaFindUniqueOrThrowArgs>(args: SelectSubset<T, configuracoes_sistemaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__configuracoes_sistemaClient<$Result.GetResult<Prisma.$configuracoes_sistemaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configuracoes_sistema that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoes_sistemaFindFirstArgs} args - Arguments to find a Configuracoes_sistema
     * @example
     * // Get one Configuracoes_sistema
     * const configuracoes_sistema = await prisma.configuracoes_sistema.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends configuracoes_sistemaFindFirstArgs>(args?: SelectSubset<T, configuracoes_sistemaFindFirstArgs<ExtArgs>>): Prisma__configuracoes_sistemaClient<$Result.GetResult<Prisma.$configuracoes_sistemaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configuracoes_sistema that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoes_sistemaFindFirstOrThrowArgs} args - Arguments to find a Configuracoes_sistema
     * @example
     * // Get one Configuracoes_sistema
     * const configuracoes_sistema = await prisma.configuracoes_sistema.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends configuracoes_sistemaFindFirstOrThrowArgs>(args?: SelectSubset<T, configuracoes_sistemaFindFirstOrThrowArgs<ExtArgs>>): Prisma__configuracoes_sistemaClient<$Result.GetResult<Prisma.$configuracoes_sistemaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Configuracoes_sistemas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoes_sistemaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Configuracoes_sistemas
     * const configuracoes_sistemas = await prisma.configuracoes_sistema.findMany()
     * 
     * // Get first 10 Configuracoes_sistemas
     * const configuracoes_sistemas = await prisma.configuracoes_sistema.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configuracoes_sistemaWithIdOnly = await prisma.configuracoes_sistema.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends configuracoes_sistemaFindManyArgs>(args?: SelectSubset<T, configuracoes_sistemaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracoes_sistemaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Configuracoes_sistema.
     * @param {configuracoes_sistemaCreateArgs} args - Arguments to create a Configuracoes_sistema.
     * @example
     * // Create one Configuracoes_sistema
     * const Configuracoes_sistema = await prisma.configuracoes_sistema.create({
     *   data: {
     *     // ... data to create a Configuracoes_sistema
     *   }
     * })
     * 
     */
    create<T extends configuracoes_sistemaCreateArgs>(args: SelectSubset<T, configuracoes_sistemaCreateArgs<ExtArgs>>): Prisma__configuracoes_sistemaClient<$Result.GetResult<Prisma.$configuracoes_sistemaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Configuracoes_sistemas.
     * @param {configuracoes_sistemaCreateManyArgs} args - Arguments to create many Configuracoes_sistemas.
     * @example
     * // Create many Configuracoes_sistemas
     * const configuracoes_sistema = await prisma.configuracoes_sistema.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends configuracoes_sistemaCreateManyArgs>(args?: SelectSubset<T, configuracoes_sistemaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Configuracoes_sistemas and returns the data saved in the database.
     * @param {configuracoes_sistemaCreateManyAndReturnArgs} args - Arguments to create many Configuracoes_sistemas.
     * @example
     * // Create many Configuracoes_sistemas
     * const configuracoes_sistema = await prisma.configuracoes_sistema.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Configuracoes_sistemas and only return the `id`
     * const configuracoes_sistemaWithIdOnly = await prisma.configuracoes_sistema.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends configuracoes_sistemaCreateManyAndReturnArgs>(args?: SelectSubset<T, configuracoes_sistemaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracoes_sistemaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Configuracoes_sistema.
     * @param {configuracoes_sistemaDeleteArgs} args - Arguments to delete one Configuracoes_sistema.
     * @example
     * // Delete one Configuracoes_sistema
     * const Configuracoes_sistema = await prisma.configuracoes_sistema.delete({
     *   where: {
     *     // ... filter to delete one Configuracoes_sistema
     *   }
     * })
     * 
     */
    delete<T extends configuracoes_sistemaDeleteArgs>(args: SelectSubset<T, configuracoes_sistemaDeleteArgs<ExtArgs>>): Prisma__configuracoes_sistemaClient<$Result.GetResult<Prisma.$configuracoes_sistemaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Configuracoes_sistema.
     * @param {configuracoes_sistemaUpdateArgs} args - Arguments to update one Configuracoes_sistema.
     * @example
     * // Update one Configuracoes_sistema
     * const configuracoes_sistema = await prisma.configuracoes_sistema.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends configuracoes_sistemaUpdateArgs>(args: SelectSubset<T, configuracoes_sistemaUpdateArgs<ExtArgs>>): Prisma__configuracoes_sistemaClient<$Result.GetResult<Prisma.$configuracoes_sistemaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Configuracoes_sistemas.
     * @param {configuracoes_sistemaDeleteManyArgs} args - Arguments to filter Configuracoes_sistemas to delete.
     * @example
     * // Delete a few Configuracoes_sistemas
     * const { count } = await prisma.configuracoes_sistema.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends configuracoes_sistemaDeleteManyArgs>(args?: SelectSubset<T, configuracoes_sistemaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configuracoes_sistemas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoes_sistemaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Configuracoes_sistemas
     * const configuracoes_sistema = await prisma.configuracoes_sistema.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends configuracoes_sistemaUpdateManyArgs>(args: SelectSubset<T, configuracoes_sistemaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configuracoes_sistemas and returns the data updated in the database.
     * @param {configuracoes_sistemaUpdateManyAndReturnArgs} args - Arguments to update many Configuracoes_sistemas.
     * @example
     * // Update many Configuracoes_sistemas
     * const configuracoes_sistema = await prisma.configuracoes_sistema.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Configuracoes_sistemas and only return the `id`
     * const configuracoes_sistemaWithIdOnly = await prisma.configuracoes_sistema.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends configuracoes_sistemaUpdateManyAndReturnArgs>(args: SelectSubset<T, configuracoes_sistemaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracoes_sistemaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Configuracoes_sistema.
     * @param {configuracoes_sistemaUpsertArgs} args - Arguments to update or create a Configuracoes_sistema.
     * @example
     * // Update or create a Configuracoes_sistema
     * const configuracoes_sistema = await prisma.configuracoes_sistema.upsert({
     *   create: {
     *     // ... data to create a Configuracoes_sistema
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Configuracoes_sistema we want to update
     *   }
     * })
     */
    upsert<T extends configuracoes_sistemaUpsertArgs>(args: SelectSubset<T, configuracoes_sistemaUpsertArgs<ExtArgs>>): Prisma__configuracoes_sistemaClient<$Result.GetResult<Prisma.$configuracoes_sistemaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Configuracoes_sistemas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoes_sistemaCountArgs} args - Arguments to filter Configuracoes_sistemas to count.
     * @example
     * // Count the number of Configuracoes_sistemas
     * const count = await prisma.configuracoes_sistema.count({
     *   where: {
     *     // ... the filter for the Configuracoes_sistemas we want to count
     *   }
     * })
    **/
    count<T extends configuracoes_sistemaCountArgs>(
      args?: Subset<T, configuracoes_sistemaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Configuracoes_sistemaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Configuracoes_sistema.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Configuracoes_sistemaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Configuracoes_sistemaAggregateArgs>(args: Subset<T, Configuracoes_sistemaAggregateArgs>): Prisma.PrismaPromise<GetConfiguracoes_sistemaAggregateType<T>>

    /**
     * Group by Configuracoes_sistema.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoes_sistemaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends configuracoes_sistemaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: configuracoes_sistemaGroupByArgs['orderBy'] }
        : { orderBy?: configuracoes_sistemaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, configuracoes_sistemaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfiguracoes_sistemaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the configuracoes_sistema model
   */
  readonly fields: configuracoes_sistemaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for configuracoes_sistema.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__configuracoes_sistemaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the configuracoes_sistema model
   */
  interface configuracoes_sistemaFieldRefs {
    readonly id: FieldRef<"configuracoes_sistema", 'String'>
    readonly chave: FieldRef<"configuracoes_sistema", 'String'>
    readonly valor: FieldRef<"configuracoes_sistema", 'String'>
    readonly tipo: FieldRef<"configuracoes_sistema", 'String'>
  }
    

  // Custom InputTypes
  /**
   * configuracoes_sistema findUnique
   */
  export type configuracoes_sistemaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
    /**
     * Filter, which configuracoes_sistema to fetch.
     */
    where: configuracoes_sistemaWhereUniqueInput
  }

  /**
   * configuracoes_sistema findUniqueOrThrow
   */
  export type configuracoes_sistemaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
    /**
     * Filter, which configuracoes_sistema to fetch.
     */
    where: configuracoes_sistemaWhereUniqueInput
  }

  /**
   * configuracoes_sistema findFirst
   */
  export type configuracoes_sistemaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
    /**
     * Filter, which configuracoes_sistema to fetch.
     */
    where?: configuracoes_sistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes_sistemas to fetch.
     */
    orderBy?: configuracoes_sistemaOrderByWithRelationInput | configuracoes_sistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configuracoes_sistemas.
     */
    cursor?: configuracoes_sistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes_sistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes_sistemas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configuracoes_sistemas.
     */
    distinct?: Configuracoes_sistemaScalarFieldEnum | Configuracoes_sistemaScalarFieldEnum[]
  }

  /**
   * configuracoes_sistema findFirstOrThrow
   */
  export type configuracoes_sistemaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
    /**
     * Filter, which configuracoes_sistema to fetch.
     */
    where?: configuracoes_sistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes_sistemas to fetch.
     */
    orderBy?: configuracoes_sistemaOrderByWithRelationInput | configuracoes_sistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configuracoes_sistemas.
     */
    cursor?: configuracoes_sistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes_sistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes_sistemas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configuracoes_sistemas.
     */
    distinct?: Configuracoes_sistemaScalarFieldEnum | Configuracoes_sistemaScalarFieldEnum[]
  }

  /**
   * configuracoes_sistema findMany
   */
  export type configuracoes_sistemaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
    /**
     * Filter, which configuracoes_sistemas to fetch.
     */
    where?: configuracoes_sistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes_sistemas to fetch.
     */
    orderBy?: configuracoes_sistemaOrderByWithRelationInput | configuracoes_sistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing configuracoes_sistemas.
     */
    cursor?: configuracoes_sistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes_sistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes_sistemas.
     */
    skip?: number
    distinct?: Configuracoes_sistemaScalarFieldEnum | Configuracoes_sistemaScalarFieldEnum[]
  }

  /**
   * configuracoes_sistema create
   */
  export type configuracoes_sistemaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
    /**
     * The data needed to create a configuracoes_sistema.
     */
    data: XOR<configuracoes_sistemaCreateInput, configuracoes_sistemaUncheckedCreateInput>
  }

  /**
   * configuracoes_sistema createMany
   */
  export type configuracoes_sistemaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many configuracoes_sistemas.
     */
    data: configuracoes_sistemaCreateManyInput | configuracoes_sistemaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * configuracoes_sistema createManyAndReturn
   */
  export type configuracoes_sistemaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
    /**
     * The data used to create many configuracoes_sistemas.
     */
    data: configuracoes_sistemaCreateManyInput | configuracoes_sistemaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * configuracoes_sistema update
   */
  export type configuracoes_sistemaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
    /**
     * The data needed to update a configuracoes_sistema.
     */
    data: XOR<configuracoes_sistemaUpdateInput, configuracoes_sistemaUncheckedUpdateInput>
    /**
     * Choose, which configuracoes_sistema to update.
     */
    where: configuracoes_sistemaWhereUniqueInput
  }

  /**
   * configuracoes_sistema updateMany
   */
  export type configuracoes_sistemaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update configuracoes_sistemas.
     */
    data: XOR<configuracoes_sistemaUpdateManyMutationInput, configuracoes_sistemaUncheckedUpdateManyInput>
    /**
     * Filter which configuracoes_sistemas to update
     */
    where?: configuracoes_sistemaWhereInput
    /**
     * Limit how many configuracoes_sistemas to update.
     */
    limit?: number
  }

  /**
   * configuracoes_sistema updateManyAndReturn
   */
  export type configuracoes_sistemaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
    /**
     * The data used to update configuracoes_sistemas.
     */
    data: XOR<configuracoes_sistemaUpdateManyMutationInput, configuracoes_sistemaUncheckedUpdateManyInput>
    /**
     * Filter which configuracoes_sistemas to update
     */
    where?: configuracoes_sistemaWhereInput
    /**
     * Limit how many configuracoes_sistemas to update.
     */
    limit?: number
  }

  /**
   * configuracoes_sistema upsert
   */
  export type configuracoes_sistemaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
    /**
     * The filter to search for the configuracoes_sistema to update in case it exists.
     */
    where: configuracoes_sistemaWhereUniqueInput
    /**
     * In case the configuracoes_sistema found by the `where` argument doesn't exist, create a new configuracoes_sistema with this data.
     */
    create: XOR<configuracoes_sistemaCreateInput, configuracoes_sistemaUncheckedCreateInput>
    /**
     * In case the configuracoes_sistema was found with the provided `where` argument, update it with this data.
     */
    update: XOR<configuracoes_sistemaUpdateInput, configuracoes_sistemaUncheckedUpdateInput>
  }

  /**
   * configuracoes_sistema delete
   */
  export type configuracoes_sistemaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
    /**
     * Filter which configuracoes_sistema to delete.
     */
    where: configuracoes_sistemaWhereUniqueInput
  }

  /**
   * configuracoes_sistema deleteMany
   */
  export type configuracoes_sistemaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configuracoes_sistemas to delete
     */
    where?: configuracoes_sistemaWhereInput
    /**
     * Limit how many configuracoes_sistemas to delete.
     */
    limit?: number
  }

  /**
   * configuracoes_sistema without action
   */
  export type configuracoes_sistemaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes_sistema
     */
    select?: configuracoes_sistemaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracoes_sistema
     */
    omit?: configuracoes_sistemaOmit<ExtArgs> | null
  }


  /**
   * Model cobrancas
   */

  export type AggregateCobrancas = {
    _count: CobrancasCountAggregateOutputType | null
    _avg: CobrancasAvgAggregateOutputType | null
    _sum: CobrancasSumAggregateOutputType | null
    _min: CobrancasMinAggregateOutputType | null
    _max: CobrancasMaxAggregateOutputType | null
  }

  export type CobrancasAvgAggregateOutputType = {
    valor: Decimal | null
  }

  export type CobrancasSumAggregateOutputType = {
    valor: Decimal | null
  }

  export type CobrancasMinAggregateOutputType = {
    id: string | null
    estabelecimentoId: string | null
    franqueadoId: string | null
    asaasChargeId: string | null
    valor: Decimal | null
    status: $Enums.CobrancaStatus | null
    tipo: $Enums.TipoCobranca | null
    vencimento: Date | null
    urlPagamento: string | null
    pixQrCode: string | null
    createdAt: Date | null
    updatedAt: Date | null
    paidAt: Date | null
  }

  export type CobrancasMaxAggregateOutputType = {
    id: string | null
    estabelecimentoId: string | null
    franqueadoId: string | null
    asaasChargeId: string | null
    valor: Decimal | null
    status: $Enums.CobrancaStatus | null
    tipo: $Enums.TipoCobranca | null
    vencimento: Date | null
    urlPagamento: string | null
    pixQrCode: string | null
    createdAt: Date | null
    updatedAt: Date | null
    paidAt: Date | null
  }

  export type CobrancasCountAggregateOutputType = {
    id: number
    estabelecimentoId: number
    franqueadoId: number
    asaasChargeId: number
    valor: number
    status: number
    tipo: number
    vencimento: number
    urlPagamento: number
    pixQrCode: number
    createdAt: number
    updatedAt: number
    paidAt: number
    _all: number
  }


  export type CobrancasAvgAggregateInputType = {
    valor?: true
  }

  export type CobrancasSumAggregateInputType = {
    valor?: true
  }

  export type CobrancasMinAggregateInputType = {
    id?: true
    estabelecimentoId?: true
    franqueadoId?: true
    asaasChargeId?: true
    valor?: true
    status?: true
    tipo?: true
    vencimento?: true
    urlPagamento?: true
    pixQrCode?: true
    createdAt?: true
    updatedAt?: true
    paidAt?: true
  }

  export type CobrancasMaxAggregateInputType = {
    id?: true
    estabelecimentoId?: true
    franqueadoId?: true
    asaasChargeId?: true
    valor?: true
    status?: true
    tipo?: true
    vencimento?: true
    urlPagamento?: true
    pixQrCode?: true
    createdAt?: true
    updatedAt?: true
    paidAt?: true
  }

  export type CobrancasCountAggregateInputType = {
    id?: true
    estabelecimentoId?: true
    franqueadoId?: true
    asaasChargeId?: true
    valor?: true
    status?: true
    tipo?: true
    vencimento?: true
    urlPagamento?: true
    pixQrCode?: true
    createdAt?: true
    updatedAt?: true
    paidAt?: true
    _all?: true
  }

  export type CobrancasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cobrancas to aggregate.
     */
    where?: cobrancasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobrancas to fetch.
     */
    orderBy?: cobrancasOrderByWithRelationInput | cobrancasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cobrancasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobrancas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobrancas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cobrancas
    **/
    _count?: true | CobrancasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CobrancasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CobrancasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CobrancasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CobrancasMaxAggregateInputType
  }

  export type GetCobrancasAggregateType<T extends CobrancasAggregateArgs> = {
        [P in keyof T & keyof AggregateCobrancas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCobrancas[P]>
      : GetScalarType<T[P], AggregateCobrancas[P]>
  }




  export type cobrancasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cobrancasWhereInput
    orderBy?: cobrancasOrderByWithAggregationInput | cobrancasOrderByWithAggregationInput[]
    by: CobrancasScalarFieldEnum[] | CobrancasScalarFieldEnum
    having?: cobrancasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CobrancasCountAggregateInputType | true
    _avg?: CobrancasAvgAggregateInputType
    _sum?: CobrancasSumAggregateInputType
    _min?: CobrancasMinAggregateInputType
    _max?: CobrancasMaxAggregateInputType
  }

  export type CobrancasGroupByOutputType = {
    id: string
    estabelecimentoId: string
    franqueadoId: string
    asaasChargeId: string | null
    valor: Decimal
    status: $Enums.CobrancaStatus
    tipo: $Enums.TipoCobranca
    vencimento: Date
    urlPagamento: string | null
    pixQrCode: string | null
    createdAt: Date
    updatedAt: Date
    paidAt: Date | null
    _count: CobrancasCountAggregateOutputType | null
    _avg: CobrancasAvgAggregateOutputType | null
    _sum: CobrancasSumAggregateOutputType | null
    _min: CobrancasMinAggregateOutputType | null
    _max: CobrancasMaxAggregateOutputType | null
  }

  type GetCobrancasGroupByPayload<T extends cobrancasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CobrancasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CobrancasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CobrancasGroupByOutputType[P]>
            : GetScalarType<T[P], CobrancasGroupByOutputType[P]>
        }
      >
    >


  export type cobrancasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estabelecimentoId?: boolean
    franqueadoId?: boolean
    asaasChargeId?: boolean
    valor?: boolean
    status?: boolean
    tipo?: boolean
    vencimento?: boolean
    urlPagamento?: boolean
    pixQrCode?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    paidAt?: boolean
    estabelecimento?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueado?: boolean | franqueadosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobrancas"]>

  export type cobrancasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estabelecimentoId?: boolean
    franqueadoId?: boolean
    asaasChargeId?: boolean
    valor?: boolean
    status?: boolean
    tipo?: boolean
    vencimento?: boolean
    urlPagamento?: boolean
    pixQrCode?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    paidAt?: boolean
    estabelecimento?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueado?: boolean | franqueadosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobrancas"]>

  export type cobrancasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estabelecimentoId?: boolean
    franqueadoId?: boolean
    asaasChargeId?: boolean
    valor?: boolean
    status?: boolean
    tipo?: boolean
    vencimento?: boolean
    urlPagamento?: boolean
    pixQrCode?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    paidAt?: boolean
    estabelecimento?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueado?: boolean | franqueadosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobrancas"]>

  export type cobrancasSelectScalar = {
    id?: boolean
    estabelecimentoId?: boolean
    franqueadoId?: boolean
    asaasChargeId?: boolean
    valor?: boolean
    status?: boolean
    tipo?: boolean
    vencimento?: boolean
    urlPagamento?: boolean
    pixQrCode?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    paidAt?: boolean
  }

  export type cobrancasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "estabelecimentoId" | "franqueadoId" | "asaasChargeId" | "valor" | "status" | "tipo" | "vencimento" | "urlPagamento" | "pixQrCode" | "createdAt" | "updatedAt" | "paidAt", ExtArgs["result"]["cobrancas"]>
  export type cobrancasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimento?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueado?: boolean | franqueadosDefaultArgs<ExtArgs>
  }
  export type cobrancasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimento?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueado?: boolean | franqueadosDefaultArgs<ExtArgs>
  }
  export type cobrancasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimento?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueado?: boolean | franqueadosDefaultArgs<ExtArgs>
  }

  export type $cobrancasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cobrancas"
    objects: {
      estabelecimento: Prisma.$estabelecimentosPayload<ExtArgs>
      franqueado: Prisma.$franqueadosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      estabelecimentoId: string
      franqueadoId: string
      asaasChargeId: string | null
      valor: Prisma.Decimal
      status: $Enums.CobrancaStatus
      tipo: $Enums.TipoCobranca
      vencimento: Date
      urlPagamento: string | null
      pixQrCode: string | null
      createdAt: Date
      updatedAt: Date
      paidAt: Date | null
    }, ExtArgs["result"]["cobrancas"]>
    composites: {}
  }

  type cobrancasGetPayload<S extends boolean | null | undefined | cobrancasDefaultArgs> = $Result.GetResult<Prisma.$cobrancasPayload, S>

  type cobrancasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cobrancasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CobrancasCountAggregateInputType | true
    }

  export interface cobrancasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cobrancas'], meta: { name: 'cobrancas' } }
    /**
     * Find zero or one Cobrancas that matches the filter.
     * @param {cobrancasFindUniqueArgs} args - Arguments to find a Cobrancas
     * @example
     * // Get one Cobrancas
     * const cobrancas = await prisma.cobrancas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cobrancasFindUniqueArgs>(args: SelectSubset<T, cobrancasFindUniqueArgs<ExtArgs>>): Prisma__cobrancasClient<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cobrancas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cobrancasFindUniqueOrThrowArgs} args - Arguments to find a Cobrancas
     * @example
     * // Get one Cobrancas
     * const cobrancas = await prisma.cobrancas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cobrancasFindUniqueOrThrowArgs>(args: SelectSubset<T, cobrancasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cobrancasClient<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cobrancas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrancasFindFirstArgs} args - Arguments to find a Cobrancas
     * @example
     * // Get one Cobrancas
     * const cobrancas = await prisma.cobrancas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cobrancasFindFirstArgs>(args?: SelectSubset<T, cobrancasFindFirstArgs<ExtArgs>>): Prisma__cobrancasClient<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cobrancas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrancasFindFirstOrThrowArgs} args - Arguments to find a Cobrancas
     * @example
     * // Get one Cobrancas
     * const cobrancas = await prisma.cobrancas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cobrancasFindFirstOrThrowArgs>(args?: SelectSubset<T, cobrancasFindFirstOrThrowArgs<ExtArgs>>): Prisma__cobrancasClient<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cobrancas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrancasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cobrancas
     * const cobrancas = await prisma.cobrancas.findMany()
     * 
     * // Get first 10 Cobrancas
     * const cobrancas = await prisma.cobrancas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cobrancasWithIdOnly = await prisma.cobrancas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cobrancasFindManyArgs>(args?: SelectSubset<T, cobrancasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cobrancas.
     * @param {cobrancasCreateArgs} args - Arguments to create a Cobrancas.
     * @example
     * // Create one Cobrancas
     * const Cobrancas = await prisma.cobrancas.create({
     *   data: {
     *     // ... data to create a Cobrancas
     *   }
     * })
     * 
     */
    create<T extends cobrancasCreateArgs>(args: SelectSubset<T, cobrancasCreateArgs<ExtArgs>>): Prisma__cobrancasClient<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cobrancas.
     * @param {cobrancasCreateManyArgs} args - Arguments to create many Cobrancas.
     * @example
     * // Create many Cobrancas
     * const cobrancas = await prisma.cobrancas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cobrancasCreateManyArgs>(args?: SelectSubset<T, cobrancasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cobrancas and returns the data saved in the database.
     * @param {cobrancasCreateManyAndReturnArgs} args - Arguments to create many Cobrancas.
     * @example
     * // Create many Cobrancas
     * const cobrancas = await prisma.cobrancas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cobrancas and only return the `id`
     * const cobrancasWithIdOnly = await prisma.cobrancas.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cobrancasCreateManyAndReturnArgs>(args?: SelectSubset<T, cobrancasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cobrancas.
     * @param {cobrancasDeleteArgs} args - Arguments to delete one Cobrancas.
     * @example
     * // Delete one Cobrancas
     * const Cobrancas = await prisma.cobrancas.delete({
     *   where: {
     *     // ... filter to delete one Cobrancas
     *   }
     * })
     * 
     */
    delete<T extends cobrancasDeleteArgs>(args: SelectSubset<T, cobrancasDeleteArgs<ExtArgs>>): Prisma__cobrancasClient<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cobrancas.
     * @param {cobrancasUpdateArgs} args - Arguments to update one Cobrancas.
     * @example
     * // Update one Cobrancas
     * const cobrancas = await prisma.cobrancas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cobrancasUpdateArgs>(args: SelectSubset<T, cobrancasUpdateArgs<ExtArgs>>): Prisma__cobrancasClient<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cobrancas.
     * @param {cobrancasDeleteManyArgs} args - Arguments to filter Cobrancas to delete.
     * @example
     * // Delete a few Cobrancas
     * const { count } = await prisma.cobrancas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cobrancasDeleteManyArgs>(args?: SelectSubset<T, cobrancasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cobrancas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrancasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cobrancas
     * const cobrancas = await prisma.cobrancas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cobrancasUpdateManyArgs>(args: SelectSubset<T, cobrancasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cobrancas and returns the data updated in the database.
     * @param {cobrancasUpdateManyAndReturnArgs} args - Arguments to update many Cobrancas.
     * @example
     * // Update many Cobrancas
     * const cobrancas = await prisma.cobrancas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cobrancas and only return the `id`
     * const cobrancasWithIdOnly = await prisma.cobrancas.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cobrancasUpdateManyAndReturnArgs>(args: SelectSubset<T, cobrancasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cobrancas.
     * @param {cobrancasUpsertArgs} args - Arguments to update or create a Cobrancas.
     * @example
     * // Update or create a Cobrancas
     * const cobrancas = await prisma.cobrancas.upsert({
     *   create: {
     *     // ... data to create a Cobrancas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cobrancas we want to update
     *   }
     * })
     */
    upsert<T extends cobrancasUpsertArgs>(args: SelectSubset<T, cobrancasUpsertArgs<ExtArgs>>): Prisma__cobrancasClient<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cobrancas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrancasCountArgs} args - Arguments to filter Cobrancas to count.
     * @example
     * // Count the number of Cobrancas
     * const count = await prisma.cobrancas.count({
     *   where: {
     *     // ... the filter for the Cobrancas we want to count
     *   }
     * })
    **/
    count<T extends cobrancasCountArgs>(
      args?: Subset<T, cobrancasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CobrancasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cobrancas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobrancasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CobrancasAggregateArgs>(args: Subset<T, CobrancasAggregateArgs>): Prisma.PrismaPromise<GetCobrancasAggregateType<T>>

    /**
     * Group by Cobrancas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cobrancasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cobrancasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cobrancasGroupByArgs['orderBy'] }
        : { orderBy?: cobrancasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cobrancasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCobrancasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cobrancas model
   */
  readonly fields: cobrancasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cobrancas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cobrancasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    estabelecimento<T extends estabelecimentosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentosDefaultArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    franqueado<T extends franqueadosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, franqueadosDefaultArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cobrancas model
   */
  interface cobrancasFieldRefs {
    readonly id: FieldRef<"cobrancas", 'String'>
    readonly estabelecimentoId: FieldRef<"cobrancas", 'String'>
    readonly franqueadoId: FieldRef<"cobrancas", 'String'>
    readonly asaasChargeId: FieldRef<"cobrancas", 'String'>
    readonly valor: FieldRef<"cobrancas", 'Decimal'>
    readonly status: FieldRef<"cobrancas", 'CobrancaStatus'>
    readonly tipo: FieldRef<"cobrancas", 'TipoCobranca'>
    readonly vencimento: FieldRef<"cobrancas", 'DateTime'>
    readonly urlPagamento: FieldRef<"cobrancas", 'String'>
    readonly pixQrCode: FieldRef<"cobrancas", 'String'>
    readonly createdAt: FieldRef<"cobrancas", 'DateTime'>
    readonly updatedAt: FieldRef<"cobrancas", 'DateTime'>
    readonly paidAt: FieldRef<"cobrancas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * cobrancas findUnique
   */
  export type cobrancasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
    /**
     * Filter, which cobrancas to fetch.
     */
    where: cobrancasWhereUniqueInput
  }

  /**
   * cobrancas findUniqueOrThrow
   */
  export type cobrancasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
    /**
     * Filter, which cobrancas to fetch.
     */
    where: cobrancasWhereUniqueInput
  }

  /**
   * cobrancas findFirst
   */
  export type cobrancasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
    /**
     * Filter, which cobrancas to fetch.
     */
    where?: cobrancasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobrancas to fetch.
     */
    orderBy?: cobrancasOrderByWithRelationInput | cobrancasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cobrancas.
     */
    cursor?: cobrancasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobrancas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobrancas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cobrancas.
     */
    distinct?: CobrancasScalarFieldEnum | CobrancasScalarFieldEnum[]
  }

  /**
   * cobrancas findFirstOrThrow
   */
  export type cobrancasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
    /**
     * Filter, which cobrancas to fetch.
     */
    where?: cobrancasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobrancas to fetch.
     */
    orderBy?: cobrancasOrderByWithRelationInput | cobrancasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cobrancas.
     */
    cursor?: cobrancasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobrancas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobrancas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cobrancas.
     */
    distinct?: CobrancasScalarFieldEnum | CobrancasScalarFieldEnum[]
  }

  /**
   * cobrancas findMany
   */
  export type cobrancasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
    /**
     * Filter, which cobrancas to fetch.
     */
    where?: cobrancasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cobrancas to fetch.
     */
    orderBy?: cobrancasOrderByWithRelationInput | cobrancasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cobrancas.
     */
    cursor?: cobrancasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cobrancas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cobrancas.
     */
    skip?: number
    distinct?: CobrancasScalarFieldEnum | CobrancasScalarFieldEnum[]
  }

  /**
   * cobrancas create
   */
  export type cobrancasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
    /**
     * The data needed to create a cobrancas.
     */
    data: XOR<cobrancasCreateInput, cobrancasUncheckedCreateInput>
  }

  /**
   * cobrancas createMany
   */
  export type cobrancasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cobrancas.
     */
    data: cobrancasCreateManyInput | cobrancasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cobrancas createManyAndReturn
   */
  export type cobrancasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * The data used to create many cobrancas.
     */
    data: cobrancasCreateManyInput | cobrancasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cobrancas update
   */
  export type cobrancasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
    /**
     * The data needed to update a cobrancas.
     */
    data: XOR<cobrancasUpdateInput, cobrancasUncheckedUpdateInput>
    /**
     * Choose, which cobrancas to update.
     */
    where: cobrancasWhereUniqueInput
  }

  /**
   * cobrancas updateMany
   */
  export type cobrancasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cobrancas.
     */
    data: XOR<cobrancasUpdateManyMutationInput, cobrancasUncheckedUpdateManyInput>
    /**
     * Filter which cobrancas to update
     */
    where?: cobrancasWhereInput
    /**
     * Limit how many cobrancas to update.
     */
    limit?: number
  }

  /**
   * cobrancas updateManyAndReturn
   */
  export type cobrancasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * The data used to update cobrancas.
     */
    data: XOR<cobrancasUpdateManyMutationInput, cobrancasUncheckedUpdateManyInput>
    /**
     * Filter which cobrancas to update
     */
    where?: cobrancasWhereInput
    /**
     * Limit how many cobrancas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cobrancas upsert
   */
  export type cobrancasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
    /**
     * The filter to search for the cobrancas to update in case it exists.
     */
    where: cobrancasWhereUniqueInput
    /**
     * In case the cobrancas found by the `where` argument doesn't exist, create a new cobrancas with this data.
     */
    create: XOR<cobrancasCreateInput, cobrancasUncheckedCreateInput>
    /**
     * In case the cobrancas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cobrancasUpdateInput, cobrancasUncheckedUpdateInput>
  }

  /**
   * cobrancas delete
   */
  export type cobrancasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
    /**
     * Filter which cobrancas to delete.
     */
    where: cobrancasWhereUniqueInput
  }

  /**
   * cobrancas deleteMany
   */
  export type cobrancasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cobrancas to delete
     */
    where?: cobrancasWhereInput
    /**
     * Limit how many cobrancas to delete.
     */
    limit?: number
  }

  /**
   * cobrancas without action
   */
  export type cobrancasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
  }


  /**
   * Model displays
   */

  export type AggregateDisplays = {
    _count: DisplaysCountAggregateOutputType | null
    _min: DisplaysMinAggregateOutputType | null
    _max: DisplaysMaxAggregateOutputType | null
  }

  export type DisplaysMinAggregateOutputType = {
    id: string | null
    tipo: $Enums.DisplayTipo | null
    status: $Enums.DisplayStatus | null
    dataInstalacao: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoId: string | null
    estabelecimentoId: string | null
  }

  export type DisplaysMaxAggregateOutputType = {
    id: string | null
    tipo: $Enums.DisplayTipo | null
    status: $Enums.DisplayStatus | null
    dataInstalacao: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoId: string | null
    estabelecimentoId: string | null
  }

  export type DisplaysCountAggregateOutputType = {
    id: number
    tipo: number
    status: number
    dataInstalacao: number
    createdAt: number
    updatedAt: number
    franqueadoId: number
    estabelecimentoId: number
    _all: number
  }


  export type DisplaysMinAggregateInputType = {
    id?: true
    tipo?: true
    status?: true
    dataInstalacao?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
    estabelecimentoId?: true
  }

  export type DisplaysMaxAggregateInputType = {
    id?: true
    tipo?: true
    status?: true
    dataInstalacao?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
    estabelecimentoId?: true
  }

  export type DisplaysCountAggregateInputType = {
    id?: true
    tipo?: true
    status?: true
    dataInstalacao?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
    estabelecimentoId?: true
    _all?: true
  }

  export type DisplaysAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which displays to aggregate.
     */
    where?: displaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of displays to fetch.
     */
    orderBy?: displaysOrderByWithRelationInput | displaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: displaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` displays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` displays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned displays
    **/
    _count?: true | DisplaysCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DisplaysMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DisplaysMaxAggregateInputType
  }

  export type GetDisplaysAggregateType<T extends DisplaysAggregateArgs> = {
        [P in keyof T & keyof AggregateDisplays]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisplays[P]>
      : GetScalarType<T[P], AggregateDisplays[P]>
  }




  export type displaysGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: displaysWhereInput
    orderBy?: displaysOrderByWithAggregationInput | displaysOrderByWithAggregationInput[]
    by: DisplaysScalarFieldEnum[] | DisplaysScalarFieldEnum
    having?: displaysScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DisplaysCountAggregateInputType | true
    _min?: DisplaysMinAggregateInputType
    _max?: DisplaysMaxAggregateInputType
  }

  export type DisplaysGroupByOutputType = {
    id: string
    tipo: $Enums.DisplayTipo
    status: $Enums.DisplayStatus
    dataInstalacao: Date | null
    createdAt: Date
    updatedAt: Date
    franqueadoId: string
    estabelecimentoId: string | null
    _count: DisplaysCountAggregateOutputType | null
    _min: DisplaysMinAggregateOutputType | null
    _max: DisplaysMaxAggregateOutputType | null
  }

  type GetDisplaysGroupByPayload<T extends displaysGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DisplaysGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DisplaysGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DisplaysGroupByOutputType[P]>
            : GetScalarType<T[P], DisplaysGroupByOutputType[P]>
        }
      >
    >


  export type displaysSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    status?: boolean
    dataInstalacao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    estabelecimentos?: boolean | displays$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    logs?: boolean | displays$logsArgs<ExtArgs>
    _count?: boolean | DisplaysCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["displays"]>

  export type displaysSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    status?: boolean
    dataInstalacao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    estabelecimentos?: boolean | displays$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["displays"]>

  export type displaysSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    status?: boolean
    dataInstalacao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    estabelecimentos?: boolean | displays$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["displays"]>

  export type displaysSelectScalar = {
    id?: boolean
    tipo?: boolean
    status?: boolean
    dataInstalacao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
  }

  export type displaysOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tipo" | "status" | "dataInstalacao" | "createdAt" | "updatedAt" | "franqueadoId" | "estabelecimentoId", ExtArgs["result"]["displays"]>
  export type displaysInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | displays$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    logs?: boolean | displays$logsArgs<ExtArgs>
    _count?: boolean | DisplaysCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type displaysIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | displays$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }
  export type displaysIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | displays$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }

  export type $displaysPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "displays"
    objects: {
      estabelecimentos: Prisma.$estabelecimentosPayload<ExtArgs> | null
      franqueados: Prisma.$franqueadosPayload<ExtArgs>
      logs: Prisma.$logsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tipo: $Enums.DisplayTipo
      status: $Enums.DisplayStatus
      dataInstalacao: Date | null
      createdAt: Date
      updatedAt: Date
      franqueadoId: string
      estabelecimentoId: string | null
    }, ExtArgs["result"]["displays"]>
    composites: {}
  }

  type displaysGetPayload<S extends boolean | null | undefined | displaysDefaultArgs> = $Result.GetResult<Prisma.$displaysPayload, S>

  type displaysCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<displaysFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DisplaysCountAggregateInputType | true
    }

  export interface displaysDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['displays'], meta: { name: 'displays' } }
    /**
     * Find zero or one Displays that matches the filter.
     * @param {displaysFindUniqueArgs} args - Arguments to find a Displays
     * @example
     * // Get one Displays
     * const displays = await prisma.displays.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends displaysFindUniqueArgs>(args: SelectSubset<T, displaysFindUniqueArgs<ExtArgs>>): Prisma__displaysClient<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Displays that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {displaysFindUniqueOrThrowArgs} args - Arguments to find a Displays
     * @example
     * // Get one Displays
     * const displays = await prisma.displays.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends displaysFindUniqueOrThrowArgs>(args: SelectSubset<T, displaysFindUniqueOrThrowArgs<ExtArgs>>): Prisma__displaysClient<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Displays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {displaysFindFirstArgs} args - Arguments to find a Displays
     * @example
     * // Get one Displays
     * const displays = await prisma.displays.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends displaysFindFirstArgs>(args?: SelectSubset<T, displaysFindFirstArgs<ExtArgs>>): Prisma__displaysClient<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Displays that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {displaysFindFirstOrThrowArgs} args - Arguments to find a Displays
     * @example
     * // Get one Displays
     * const displays = await prisma.displays.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends displaysFindFirstOrThrowArgs>(args?: SelectSubset<T, displaysFindFirstOrThrowArgs<ExtArgs>>): Prisma__displaysClient<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Displays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {displaysFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Displays
     * const displays = await prisma.displays.findMany()
     * 
     * // Get first 10 Displays
     * const displays = await prisma.displays.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const displaysWithIdOnly = await prisma.displays.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends displaysFindManyArgs>(args?: SelectSubset<T, displaysFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Displays.
     * @param {displaysCreateArgs} args - Arguments to create a Displays.
     * @example
     * // Create one Displays
     * const Displays = await prisma.displays.create({
     *   data: {
     *     // ... data to create a Displays
     *   }
     * })
     * 
     */
    create<T extends displaysCreateArgs>(args: SelectSubset<T, displaysCreateArgs<ExtArgs>>): Prisma__displaysClient<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Displays.
     * @param {displaysCreateManyArgs} args - Arguments to create many Displays.
     * @example
     * // Create many Displays
     * const displays = await prisma.displays.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends displaysCreateManyArgs>(args?: SelectSubset<T, displaysCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Displays and returns the data saved in the database.
     * @param {displaysCreateManyAndReturnArgs} args - Arguments to create many Displays.
     * @example
     * // Create many Displays
     * const displays = await prisma.displays.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Displays and only return the `id`
     * const displaysWithIdOnly = await prisma.displays.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends displaysCreateManyAndReturnArgs>(args?: SelectSubset<T, displaysCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Displays.
     * @param {displaysDeleteArgs} args - Arguments to delete one Displays.
     * @example
     * // Delete one Displays
     * const Displays = await prisma.displays.delete({
     *   where: {
     *     // ... filter to delete one Displays
     *   }
     * })
     * 
     */
    delete<T extends displaysDeleteArgs>(args: SelectSubset<T, displaysDeleteArgs<ExtArgs>>): Prisma__displaysClient<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Displays.
     * @param {displaysUpdateArgs} args - Arguments to update one Displays.
     * @example
     * // Update one Displays
     * const displays = await prisma.displays.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends displaysUpdateArgs>(args: SelectSubset<T, displaysUpdateArgs<ExtArgs>>): Prisma__displaysClient<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Displays.
     * @param {displaysDeleteManyArgs} args - Arguments to filter Displays to delete.
     * @example
     * // Delete a few Displays
     * const { count } = await prisma.displays.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends displaysDeleteManyArgs>(args?: SelectSubset<T, displaysDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Displays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {displaysUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Displays
     * const displays = await prisma.displays.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends displaysUpdateManyArgs>(args: SelectSubset<T, displaysUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Displays and returns the data updated in the database.
     * @param {displaysUpdateManyAndReturnArgs} args - Arguments to update many Displays.
     * @example
     * // Update many Displays
     * const displays = await prisma.displays.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Displays and only return the `id`
     * const displaysWithIdOnly = await prisma.displays.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends displaysUpdateManyAndReturnArgs>(args: SelectSubset<T, displaysUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Displays.
     * @param {displaysUpsertArgs} args - Arguments to update or create a Displays.
     * @example
     * // Update or create a Displays
     * const displays = await prisma.displays.upsert({
     *   create: {
     *     // ... data to create a Displays
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Displays we want to update
     *   }
     * })
     */
    upsert<T extends displaysUpsertArgs>(args: SelectSubset<T, displaysUpsertArgs<ExtArgs>>): Prisma__displaysClient<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Displays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {displaysCountArgs} args - Arguments to filter Displays to count.
     * @example
     * // Count the number of Displays
     * const count = await prisma.displays.count({
     *   where: {
     *     // ... the filter for the Displays we want to count
     *   }
     * })
    **/
    count<T extends displaysCountArgs>(
      args?: Subset<T, displaysCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DisplaysCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Displays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisplaysAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DisplaysAggregateArgs>(args: Subset<T, DisplaysAggregateArgs>): Prisma.PrismaPromise<GetDisplaysAggregateType<T>>

    /**
     * Group by Displays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {displaysGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends displaysGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: displaysGroupByArgs['orderBy'] }
        : { orderBy?: displaysGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, displaysGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisplaysGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the displays model
   */
  readonly fields: displaysFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for displays.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__displaysClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    estabelecimentos<T extends displays$estabelecimentosArgs<ExtArgs> = {}>(args?: Subset<T, displays$estabelecimentosArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    franqueados<T extends franqueadosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, franqueadosDefaultArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    logs<T extends displays$logsArgs<ExtArgs> = {}>(args?: Subset<T, displays$logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the displays model
   */
  interface displaysFieldRefs {
    readonly id: FieldRef<"displays", 'String'>
    readonly tipo: FieldRef<"displays", 'DisplayTipo'>
    readonly status: FieldRef<"displays", 'DisplayStatus'>
    readonly dataInstalacao: FieldRef<"displays", 'DateTime'>
    readonly createdAt: FieldRef<"displays", 'DateTime'>
    readonly updatedAt: FieldRef<"displays", 'DateTime'>
    readonly franqueadoId: FieldRef<"displays", 'String'>
    readonly estabelecimentoId: FieldRef<"displays", 'String'>
  }
    

  // Custom InputTypes
  /**
   * displays findUnique
   */
  export type displaysFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    /**
     * Filter, which displays to fetch.
     */
    where: displaysWhereUniqueInput
  }

  /**
   * displays findUniqueOrThrow
   */
  export type displaysFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    /**
     * Filter, which displays to fetch.
     */
    where: displaysWhereUniqueInput
  }

  /**
   * displays findFirst
   */
  export type displaysFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    /**
     * Filter, which displays to fetch.
     */
    where?: displaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of displays to fetch.
     */
    orderBy?: displaysOrderByWithRelationInput | displaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for displays.
     */
    cursor?: displaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` displays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` displays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of displays.
     */
    distinct?: DisplaysScalarFieldEnum | DisplaysScalarFieldEnum[]
  }

  /**
   * displays findFirstOrThrow
   */
  export type displaysFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    /**
     * Filter, which displays to fetch.
     */
    where?: displaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of displays to fetch.
     */
    orderBy?: displaysOrderByWithRelationInput | displaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for displays.
     */
    cursor?: displaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` displays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` displays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of displays.
     */
    distinct?: DisplaysScalarFieldEnum | DisplaysScalarFieldEnum[]
  }

  /**
   * displays findMany
   */
  export type displaysFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    /**
     * Filter, which displays to fetch.
     */
    where?: displaysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of displays to fetch.
     */
    orderBy?: displaysOrderByWithRelationInput | displaysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing displays.
     */
    cursor?: displaysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` displays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` displays.
     */
    skip?: number
    distinct?: DisplaysScalarFieldEnum | DisplaysScalarFieldEnum[]
  }

  /**
   * displays create
   */
  export type displaysCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    /**
     * The data needed to create a displays.
     */
    data: XOR<displaysCreateInput, displaysUncheckedCreateInput>
  }

  /**
   * displays createMany
   */
  export type displaysCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many displays.
     */
    data: displaysCreateManyInput | displaysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * displays createManyAndReturn
   */
  export type displaysCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * The data used to create many displays.
     */
    data: displaysCreateManyInput | displaysCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * displays update
   */
  export type displaysUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    /**
     * The data needed to update a displays.
     */
    data: XOR<displaysUpdateInput, displaysUncheckedUpdateInput>
    /**
     * Choose, which displays to update.
     */
    where: displaysWhereUniqueInput
  }

  /**
   * displays updateMany
   */
  export type displaysUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update displays.
     */
    data: XOR<displaysUpdateManyMutationInput, displaysUncheckedUpdateManyInput>
    /**
     * Filter which displays to update
     */
    where?: displaysWhereInput
    /**
     * Limit how many displays to update.
     */
    limit?: number
  }

  /**
   * displays updateManyAndReturn
   */
  export type displaysUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * The data used to update displays.
     */
    data: XOR<displaysUpdateManyMutationInput, displaysUncheckedUpdateManyInput>
    /**
     * Filter which displays to update
     */
    where?: displaysWhereInput
    /**
     * Limit how many displays to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * displays upsert
   */
  export type displaysUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    /**
     * The filter to search for the displays to update in case it exists.
     */
    where: displaysWhereUniqueInput
    /**
     * In case the displays found by the `where` argument doesn't exist, create a new displays with this data.
     */
    create: XOR<displaysCreateInput, displaysUncheckedCreateInput>
    /**
     * In case the displays was found with the provided `where` argument, update it with this data.
     */
    update: XOR<displaysUpdateInput, displaysUncheckedUpdateInput>
  }

  /**
   * displays delete
   */
  export type displaysDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    /**
     * Filter which displays to delete.
     */
    where: displaysWhereUniqueInput
  }

  /**
   * displays deleteMany
   */
  export type displaysDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which displays to delete
     */
    where?: displaysWhereInput
    /**
     * Limit how many displays to delete.
     */
    limit?: number
  }

  /**
   * displays.estabelecimentos
   */
  export type displays$estabelecimentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    where?: estabelecimentosWhereInput
  }

  /**
   * displays.logs
   */
  export type displays$logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    where?: logsWhereInput
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    cursor?: logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * displays without action
   */
  export type displaysDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
  }


  /**
   * Model estabelecimento_coords
   */

  export type AggregateEstabelecimento_coords = {
    _count: Estabelecimento_coordsCountAggregateOutputType | null
    _avg: Estabelecimento_coordsAvgAggregateOutputType | null
    _sum: Estabelecimento_coordsSumAggregateOutputType | null
    _min: Estabelecimento_coordsMinAggregateOutputType | null
    _max: Estabelecimento_coordsMaxAggregateOutputType | null
  }

  export type Estabelecimento_coordsAvgAggregateOutputType = {
    lat: number | null
    lng: number | null
  }

  export type Estabelecimento_coordsSumAggregateOutputType = {
    lat: number | null
    lng: number | null
  }

  export type Estabelecimento_coordsMinAggregateOutputType = {
    id: string | null
    lat: number | null
    lng: number | null
    estabelecimentoId: string | null
  }

  export type Estabelecimento_coordsMaxAggregateOutputType = {
    id: string | null
    lat: number | null
    lng: number | null
    estabelecimentoId: string | null
  }

  export type Estabelecimento_coordsCountAggregateOutputType = {
    id: number
    lat: number
    lng: number
    estabelecimentoId: number
    _all: number
  }


  export type Estabelecimento_coordsAvgAggregateInputType = {
    lat?: true
    lng?: true
  }

  export type Estabelecimento_coordsSumAggregateInputType = {
    lat?: true
    lng?: true
  }

  export type Estabelecimento_coordsMinAggregateInputType = {
    id?: true
    lat?: true
    lng?: true
    estabelecimentoId?: true
  }

  export type Estabelecimento_coordsMaxAggregateInputType = {
    id?: true
    lat?: true
    lng?: true
    estabelecimentoId?: true
  }

  export type Estabelecimento_coordsCountAggregateInputType = {
    id?: true
    lat?: true
    lng?: true
    estabelecimentoId?: true
    _all?: true
  }

  export type Estabelecimento_coordsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estabelecimento_coords to aggregate.
     */
    where?: estabelecimento_coordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabelecimento_coords to fetch.
     */
    orderBy?: estabelecimento_coordsOrderByWithRelationInput | estabelecimento_coordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: estabelecimento_coordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabelecimento_coords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabelecimento_coords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned estabelecimento_coords
    **/
    _count?: true | Estabelecimento_coordsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Estabelecimento_coordsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Estabelecimento_coordsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Estabelecimento_coordsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Estabelecimento_coordsMaxAggregateInputType
  }

  export type GetEstabelecimento_coordsAggregateType<T extends Estabelecimento_coordsAggregateArgs> = {
        [P in keyof T & keyof AggregateEstabelecimento_coords]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstabelecimento_coords[P]>
      : GetScalarType<T[P], AggregateEstabelecimento_coords[P]>
  }




  export type estabelecimento_coordsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estabelecimento_coordsWhereInput
    orderBy?: estabelecimento_coordsOrderByWithAggregationInput | estabelecimento_coordsOrderByWithAggregationInput[]
    by: Estabelecimento_coordsScalarFieldEnum[] | Estabelecimento_coordsScalarFieldEnum
    having?: estabelecimento_coordsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Estabelecimento_coordsCountAggregateInputType | true
    _avg?: Estabelecimento_coordsAvgAggregateInputType
    _sum?: Estabelecimento_coordsSumAggregateInputType
    _min?: Estabelecimento_coordsMinAggregateInputType
    _max?: Estabelecimento_coordsMaxAggregateInputType
  }

  export type Estabelecimento_coordsGroupByOutputType = {
    id: string
    lat: number
    lng: number
    estabelecimentoId: string
    _count: Estabelecimento_coordsCountAggregateOutputType | null
    _avg: Estabelecimento_coordsAvgAggregateOutputType | null
    _sum: Estabelecimento_coordsSumAggregateOutputType | null
    _min: Estabelecimento_coordsMinAggregateOutputType | null
    _max: Estabelecimento_coordsMaxAggregateOutputType | null
  }

  type GetEstabelecimento_coordsGroupByPayload<T extends estabelecimento_coordsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Estabelecimento_coordsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Estabelecimento_coordsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Estabelecimento_coordsGroupByOutputType[P]>
            : GetScalarType<T[P], Estabelecimento_coordsGroupByOutputType[P]>
        }
      >
    >


  export type estabelecimento_coordsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lat?: boolean
    lng?: boolean
    estabelecimentoId?: boolean
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estabelecimento_coords"]>

  export type estabelecimento_coordsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lat?: boolean
    lng?: boolean
    estabelecimentoId?: boolean
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estabelecimento_coords"]>

  export type estabelecimento_coordsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lat?: boolean
    lng?: boolean
    estabelecimentoId?: boolean
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estabelecimento_coords"]>

  export type estabelecimento_coordsSelectScalar = {
    id?: boolean
    lat?: boolean
    lng?: boolean
    estabelecimentoId?: boolean
  }

  export type estabelecimento_coordsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "lat" | "lng" | "estabelecimentoId", ExtArgs["result"]["estabelecimento_coords"]>
  export type estabelecimento_coordsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
  }
  export type estabelecimento_coordsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
  }
  export type estabelecimento_coordsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
  }

  export type $estabelecimento_coordsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "estabelecimento_coords"
    objects: {
      estabelecimentos: Prisma.$estabelecimentosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      lat: number
      lng: number
      estabelecimentoId: string
    }, ExtArgs["result"]["estabelecimento_coords"]>
    composites: {}
  }

  type estabelecimento_coordsGetPayload<S extends boolean | null | undefined | estabelecimento_coordsDefaultArgs> = $Result.GetResult<Prisma.$estabelecimento_coordsPayload, S>

  type estabelecimento_coordsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<estabelecimento_coordsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Estabelecimento_coordsCountAggregateInputType | true
    }

  export interface estabelecimento_coordsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['estabelecimento_coords'], meta: { name: 'estabelecimento_coords' } }
    /**
     * Find zero or one Estabelecimento_coords that matches the filter.
     * @param {estabelecimento_coordsFindUniqueArgs} args - Arguments to find a Estabelecimento_coords
     * @example
     * // Get one Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends estabelecimento_coordsFindUniqueArgs>(args: SelectSubset<T, estabelecimento_coordsFindUniqueArgs<ExtArgs>>): Prisma__estabelecimento_coordsClient<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Estabelecimento_coords that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {estabelecimento_coordsFindUniqueOrThrowArgs} args - Arguments to find a Estabelecimento_coords
     * @example
     * // Get one Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends estabelecimento_coordsFindUniqueOrThrowArgs>(args: SelectSubset<T, estabelecimento_coordsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__estabelecimento_coordsClient<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estabelecimento_coords that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimento_coordsFindFirstArgs} args - Arguments to find a Estabelecimento_coords
     * @example
     * // Get one Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends estabelecimento_coordsFindFirstArgs>(args?: SelectSubset<T, estabelecimento_coordsFindFirstArgs<ExtArgs>>): Prisma__estabelecimento_coordsClient<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estabelecimento_coords that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimento_coordsFindFirstOrThrowArgs} args - Arguments to find a Estabelecimento_coords
     * @example
     * // Get one Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends estabelecimento_coordsFindFirstOrThrowArgs>(args?: SelectSubset<T, estabelecimento_coordsFindFirstOrThrowArgs<ExtArgs>>): Prisma__estabelecimento_coordsClient<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Estabelecimento_coords that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimento_coordsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.findMany()
     * 
     * // Get first 10 Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estabelecimento_coordsWithIdOnly = await prisma.estabelecimento_coords.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends estabelecimento_coordsFindManyArgs>(args?: SelectSubset<T, estabelecimento_coordsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Estabelecimento_coords.
     * @param {estabelecimento_coordsCreateArgs} args - Arguments to create a Estabelecimento_coords.
     * @example
     * // Create one Estabelecimento_coords
     * const Estabelecimento_coords = await prisma.estabelecimento_coords.create({
     *   data: {
     *     // ... data to create a Estabelecimento_coords
     *   }
     * })
     * 
     */
    create<T extends estabelecimento_coordsCreateArgs>(args: SelectSubset<T, estabelecimento_coordsCreateArgs<ExtArgs>>): Prisma__estabelecimento_coordsClient<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Estabelecimento_coords.
     * @param {estabelecimento_coordsCreateManyArgs} args - Arguments to create many Estabelecimento_coords.
     * @example
     * // Create many Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends estabelecimento_coordsCreateManyArgs>(args?: SelectSubset<T, estabelecimento_coordsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estabelecimento_coords and returns the data saved in the database.
     * @param {estabelecimento_coordsCreateManyAndReturnArgs} args - Arguments to create many Estabelecimento_coords.
     * @example
     * // Create many Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estabelecimento_coords and only return the `id`
     * const estabelecimento_coordsWithIdOnly = await prisma.estabelecimento_coords.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends estabelecimento_coordsCreateManyAndReturnArgs>(args?: SelectSubset<T, estabelecimento_coordsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Estabelecimento_coords.
     * @param {estabelecimento_coordsDeleteArgs} args - Arguments to delete one Estabelecimento_coords.
     * @example
     * // Delete one Estabelecimento_coords
     * const Estabelecimento_coords = await prisma.estabelecimento_coords.delete({
     *   where: {
     *     // ... filter to delete one Estabelecimento_coords
     *   }
     * })
     * 
     */
    delete<T extends estabelecimento_coordsDeleteArgs>(args: SelectSubset<T, estabelecimento_coordsDeleteArgs<ExtArgs>>): Prisma__estabelecimento_coordsClient<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Estabelecimento_coords.
     * @param {estabelecimento_coordsUpdateArgs} args - Arguments to update one Estabelecimento_coords.
     * @example
     * // Update one Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends estabelecimento_coordsUpdateArgs>(args: SelectSubset<T, estabelecimento_coordsUpdateArgs<ExtArgs>>): Prisma__estabelecimento_coordsClient<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Estabelecimento_coords.
     * @param {estabelecimento_coordsDeleteManyArgs} args - Arguments to filter Estabelecimento_coords to delete.
     * @example
     * // Delete a few Estabelecimento_coords
     * const { count } = await prisma.estabelecimento_coords.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends estabelecimento_coordsDeleteManyArgs>(args?: SelectSubset<T, estabelecimento_coordsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estabelecimento_coords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimento_coordsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends estabelecimento_coordsUpdateManyArgs>(args: SelectSubset<T, estabelecimento_coordsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estabelecimento_coords and returns the data updated in the database.
     * @param {estabelecimento_coordsUpdateManyAndReturnArgs} args - Arguments to update many Estabelecimento_coords.
     * @example
     * // Update many Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Estabelecimento_coords and only return the `id`
     * const estabelecimento_coordsWithIdOnly = await prisma.estabelecimento_coords.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends estabelecimento_coordsUpdateManyAndReturnArgs>(args: SelectSubset<T, estabelecimento_coordsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Estabelecimento_coords.
     * @param {estabelecimento_coordsUpsertArgs} args - Arguments to update or create a Estabelecimento_coords.
     * @example
     * // Update or create a Estabelecimento_coords
     * const estabelecimento_coords = await prisma.estabelecimento_coords.upsert({
     *   create: {
     *     // ... data to create a Estabelecimento_coords
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estabelecimento_coords we want to update
     *   }
     * })
     */
    upsert<T extends estabelecimento_coordsUpsertArgs>(args: SelectSubset<T, estabelecimento_coordsUpsertArgs<ExtArgs>>): Prisma__estabelecimento_coordsClient<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Estabelecimento_coords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimento_coordsCountArgs} args - Arguments to filter Estabelecimento_coords to count.
     * @example
     * // Count the number of Estabelecimento_coords
     * const count = await prisma.estabelecimento_coords.count({
     *   where: {
     *     // ... the filter for the Estabelecimento_coords we want to count
     *   }
     * })
    **/
    count<T extends estabelecimento_coordsCountArgs>(
      args?: Subset<T, estabelecimento_coordsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Estabelecimento_coordsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estabelecimento_coords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estabelecimento_coordsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Estabelecimento_coordsAggregateArgs>(args: Subset<T, Estabelecimento_coordsAggregateArgs>): Prisma.PrismaPromise<GetEstabelecimento_coordsAggregateType<T>>

    /**
     * Group by Estabelecimento_coords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimento_coordsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends estabelecimento_coordsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: estabelecimento_coordsGroupByArgs['orderBy'] }
        : { orderBy?: estabelecimento_coordsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, estabelecimento_coordsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstabelecimento_coordsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the estabelecimento_coords model
   */
  readonly fields: estabelecimento_coordsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for estabelecimento_coords.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__estabelecimento_coordsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    estabelecimentos<T extends estabelecimentosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentosDefaultArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the estabelecimento_coords model
   */
  interface estabelecimento_coordsFieldRefs {
    readonly id: FieldRef<"estabelecimento_coords", 'String'>
    readonly lat: FieldRef<"estabelecimento_coords", 'Float'>
    readonly lng: FieldRef<"estabelecimento_coords", 'Float'>
    readonly estabelecimentoId: FieldRef<"estabelecimento_coords", 'String'>
  }
    

  // Custom InputTypes
  /**
   * estabelecimento_coords findUnique
   */
  export type estabelecimento_coordsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsInclude<ExtArgs> | null
    /**
     * Filter, which estabelecimento_coords to fetch.
     */
    where: estabelecimento_coordsWhereUniqueInput
  }

  /**
   * estabelecimento_coords findUniqueOrThrow
   */
  export type estabelecimento_coordsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsInclude<ExtArgs> | null
    /**
     * Filter, which estabelecimento_coords to fetch.
     */
    where: estabelecimento_coordsWhereUniqueInput
  }

  /**
   * estabelecimento_coords findFirst
   */
  export type estabelecimento_coordsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsInclude<ExtArgs> | null
    /**
     * Filter, which estabelecimento_coords to fetch.
     */
    where?: estabelecimento_coordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabelecimento_coords to fetch.
     */
    orderBy?: estabelecimento_coordsOrderByWithRelationInput | estabelecimento_coordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estabelecimento_coords.
     */
    cursor?: estabelecimento_coordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabelecimento_coords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabelecimento_coords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estabelecimento_coords.
     */
    distinct?: Estabelecimento_coordsScalarFieldEnum | Estabelecimento_coordsScalarFieldEnum[]
  }

  /**
   * estabelecimento_coords findFirstOrThrow
   */
  export type estabelecimento_coordsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsInclude<ExtArgs> | null
    /**
     * Filter, which estabelecimento_coords to fetch.
     */
    where?: estabelecimento_coordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabelecimento_coords to fetch.
     */
    orderBy?: estabelecimento_coordsOrderByWithRelationInput | estabelecimento_coordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estabelecimento_coords.
     */
    cursor?: estabelecimento_coordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabelecimento_coords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabelecimento_coords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estabelecimento_coords.
     */
    distinct?: Estabelecimento_coordsScalarFieldEnum | Estabelecimento_coordsScalarFieldEnum[]
  }

  /**
   * estabelecimento_coords findMany
   */
  export type estabelecimento_coordsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsInclude<ExtArgs> | null
    /**
     * Filter, which estabelecimento_coords to fetch.
     */
    where?: estabelecimento_coordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabelecimento_coords to fetch.
     */
    orderBy?: estabelecimento_coordsOrderByWithRelationInput | estabelecimento_coordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing estabelecimento_coords.
     */
    cursor?: estabelecimento_coordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabelecimento_coords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabelecimento_coords.
     */
    skip?: number
    distinct?: Estabelecimento_coordsScalarFieldEnum | Estabelecimento_coordsScalarFieldEnum[]
  }

  /**
   * estabelecimento_coords create
   */
  export type estabelecimento_coordsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsInclude<ExtArgs> | null
    /**
     * The data needed to create a estabelecimento_coords.
     */
    data: XOR<estabelecimento_coordsCreateInput, estabelecimento_coordsUncheckedCreateInput>
  }

  /**
   * estabelecimento_coords createMany
   */
  export type estabelecimento_coordsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many estabelecimento_coords.
     */
    data: estabelecimento_coordsCreateManyInput | estabelecimento_coordsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estabelecimento_coords createManyAndReturn
   */
  export type estabelecimento_coordsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * The data used to create many estabelecimento_coords.
     */
    data: estabelecimento_coordsCreateManyInput | estabelecimento_coordsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * estabelecimento_coords update
   */
  export type estabelecimento_coordsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsInclude<ExtArgs> | null
    /**
     * The data needed to update a estabelecimento_coords.
     */
    data: XOR<estabelecimento_coordsUpdateInput, estabelecimento_coordsUncheckedUpdateInput>
    /**
     * Choose, which estabelecimento_coords to update.
     */
    where: estabelecimento_coordsWhereUniqueInput
  }

  /**
   * estabelecimento_coords updateMany
   */
  export type estabelecimento_coordsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update estabelecimento_coords.
     */
    data: XOR<estabelecimento_coordsUpdateManyMutationInput, estabelecimento_coordsUncheckedUpdateManyInput>
    /**
     * Filter which estabelecimento_coords to update
     */
    where?: estabelecimento_coordsWhereInput
    /**
     * Limit how many estabelecimento_coords to update.
     */
    limit?: number
  }

  /**
   * estabelecimento_coords updateManyAndReturn
   */
  export type estabelecimento_coordsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * The data used to update estabelecimento_coords.
     */
    data: XOR<estabelecimento_coordsUpdateManyMutationInput, estabelecimento_coordsUncheckedUpdateManyInput>
    /**
     * Filter which estabelecimento_coords to update
     */
    where?: estabelecimento_coordsWhereInput
    /**
     * Limit how many estabelecimento_coords to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * estabelecimento_coords upsert
   */
  export type estabelecimento_coordsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsInclude<ExtArgs> | null
    /**
     * The filter to search for the estabelecimento_coords to update in case it exists.
     */
    where: estabelecimento_coordsWhereUniqueInput
    /**
     * In case the estabelecimento_coords found by the `where` argument doesn't exist, create a new estabelecimento_coords with this data.
     */
    create: XOR<estabelecimento_coordsCreateInput, estabelecimento_coordsUncheckedCreateInput>
    /**
     * In case the estabelecimento_coords was found with the provided `where` argument, update it with this data.
     */
    update: XOR<estabelecimento_coordsUpdateInput, estabelecimento_coordsUncheckedUpdateInput>
  }

  /**
   * estabelecimento_coords delete
   */
  export type estabelecimento_coordsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsInclude<ExtArgs> | null
    /**
     * Filter which estabelecimento_coords to delete.
     */
    where: estabelecimento_coordsWhereUniqueInput
  }

  /**
   * estabelecimento_coords deleteMany
   */
  export type estabelecimento_coordsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estabelecimento_coords to delete
     */
    where?: estabelecimento_coordsWhereInput
    /**
     * Limit how many estabelecimento_coords to delete.
     */
    limit?: number
  }

  /**
   * estabelecimento_coords without action
   */
  export type estabelecimento_coordsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsInclude<ExtArgs> | null
  }


  /**
   * Model estabelecimentos
   */

  export type AggregateEstabelecimentos = {
    _count: EstabelecimentosCountAggregateOutputType | null
    _min: EstabelecimentosMinAggregateOutputType | null
    _max: EstabelecimentosMaxAggregateOutputType | null
  }

  export type EstabelecimentosMinAggregateOutputType = {
    id: string | null
    name: string | null
    cnpj: string | null
    email: string | null
    phone: string | null
    address: string | null
    category: string | null
    status: $Enums.EstabelecimentoStatus | null
    ativadoEm: Date | null
    logo: string | null
    asaasId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoId: string | null
  }

  export type EstabelecimentosMaxAggregateOutputType = {
    id: string | null
    name: string | null
    cnpj: string | null
    email: string | null
    phone: string | null
    address: string | null
    category: string | null
    status: $Enums.EstabelecimentoStatus | null
    ativadoEm: Date | null
    logo: string | null
    asaasId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoId: string | null
  }

  export type EstabelecimentosCountAggregateOutputType = {
    id: number
    name: number
    cnpj: number
    email: number
    phone: number
    address: number
    category: number
    status: number
    ativadoEm: number
    logo: number
    asaasId: number
    createdAt: number
    updatedAt: number
    franqueadoId: number
    _all: number
  }


  export type EstabelecimentosMinAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    email?: true
    phone?: true
    address?: true
    category?: true
    status?: true
    ativadoEm?: true
    logo?: true
    asaasId?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
  }

  export type EstabelecimentosMaxAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    email?: true
    phone?: true
    address?: true
    category?: true
    status?: true
    ativadoEm?: true
    logo?: true
    asaasId?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
  }

  export type EstabelecimentosCountAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    email?: true
    phone?: true
    address?: true
    category?: true
    status?: true
    ativadoEm?: true
    logo?: true
    asaasId?: true
    createdAt?: true
    updatedAt?: true
    franqueadoId?: true
    _all?: true
  }

  export type EstabelecimentosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estabelecimentos to aggregate.
     */
    where?: estabelecimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabelecimentos to fetch.
     */
    orderBy?: estabelecimentosOrderByWithRelationInput | estabelecimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: estabelecimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabelecimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabelecimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned estabelecimentos
    **/
    _count?: true | EstabelecimentosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstabelecimentosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstabelecimentosMaxAggregateInputType
  }

  export type GetEstabelecimentosAggregateType<T extends EstabelecimentosAggregateArgs> = {
        [P in keyof T & keyof AggregateEstabelecimentos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstabelecimentos[P]>
      : GetScalarType<T[P], AggregateEstabelecimentos[P]>
  }




  export type estabelecimentosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estabelecimentosWhereInput
    orderBy?: estabelecimentosOrderByWithAggregationInput | estabelecimentosOrderByWithAggregationInput[]
    by: EstabelecimentosScalarFieldEnum[] | EstabelecimentosScalarFieldEnum
    having?: estabelecimentosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstabelecimentosCountAggregateInputType | true
    _min?: EstabelecimentosMinAggregateInputType
    _max?: EstabelecimentosMaxAggregateInputType
  }

  export type EstabelecimentosGroupByOutputType = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status: $Enums.EstabelecimentoStatus
    ativadoEm: Date | null
    logo: string | null
    asaasId: string | null
    createdAt: Date
    updatedAt: Date
    franqueadoId: string
    _count: EstabelecimentosCountAggregateOutputType | null
    _min: EstabelecimentosMinAggregateOutputType | null
    _max: EstabelecimentosMaxAggregateOutputType | null
  }

  type GetEstabelecimentosGroupByPayload<T extends estabelecimentosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstabelecimentosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstabelecimentosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstabelecimentosGroupByOutputType[P]>
            : GetScalarType<T[P], EstabelecimentosGroupByOutputType[P]>
        }
      >
    >


  export type estabelecimentosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    category?: boolean
    status?: boolean
    ativadoEm?: boolean
    logo?: boolean
    asaasId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    cartoes?: boolean | estabelecimentos$cartoesArgs<ExtArgs>
    comissoes?: boolean | estabelecimentos$comissoesArgs<ExtArgs>
    cobrancas?: boolean | estabelecimentos$cobrancasArgs<ExtArgs>
    displays?: boolean | estabelecimentos$displaysArgs<ExtArgs>
    estabelecimento_coords?: boolean | estabelecimentos$estabelecimento_coordsArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    logs?: boolean | estabelecimentos$logsArgs<ExtArgs>
    solicitacoes_cartao?: boolean | estabelecimentos$solicitacoes_cartaoArgs<ExtArgs>
    transacoes?: boolean | estabelecimentos$transacoesArgs<ExtArgs>
    users?: boolean | estabelecimentos$usersArgs<ExtArgs>
    _count?: boolean | EstabelecimentosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estabelecimentos"]>

  export type estabelecimentosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    category?: boolean
    status?: boolean
    ativadoEm?: boolean
    logo?: boolean
    asaasId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estabelecimentos"]>

  export type estabelecimentosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    category?: boolean
    status?: boolean
    ativadoEm?: boolean
    logo?: boolean
    asaasId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estabelecimentos"]>

  export type estabelecimentosSelectScalar = {
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    category?: boolean
    status?: boolean
    ativadoEm?: boolean
    logo?: boolean
    asaasId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoId?: boolean
  }

  export type estabelecimentosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "cnpj" | "email" | "phone" | "address" | "category" | "status" | "ativadoEm" | "logo" | "asaasId" | "createdAt" | "updatedAt" | "franqueadoId", ExtArgs["result"]["estabelecimentos"]>
  export type estabelecimentosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cartoes?: boolean | estabelecimentos$cartoesArgs<ExtArgs>
    comissoes?: boolean | estabelecimentos$comissoesArgs<ExtArgs>
    cobrancas?: boolean | estabelecimentos$cobrancasArgs<ExtArgs>
    displays?: boolean | estabelecimentos$displaysArgs<ExtArgs>
    estabelecimento_coords?: boolean | estabelecimentos$estabelecimento_coordsArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    logs?: boolean | estabelecimentos$logsArgs<ExtArgs>
    solicitacoes_cartao?: boolean | estabelecimentos$solicitacoes_cartaoArgs<ExtArgs>
    transacoes?: boolean | estabelecimentos$transacoesArgs<ExtArgs>
    users?: boolean | estabelecimentos$usersArgs<ExtArgs>
    _count?: boolean | EstabelecimentosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type estabelecimentosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }
  export type estabelecimentosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }

  export type $estabelecimentosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "estabelecimentos"
    objects: {
      cartoes: Prisma.$cartoesPayload<ExtArgs>[]
      comissoes: Prisma.$comissoesPayload<ExtArgs>[]
      cobrancas: Prisma.$cobrancasPayload<ExtArgs>[]
      displays: Prisma.$displaysPayload<ExtArgs>[]
      estabelecimento_coords: Prisma.$estabelecimento_coordsPayload<ExtArgs> | null
      franqueados: Prisma.$franqueadosPayload<ExtArgs>
      logs: Prisma.$logsPayload<ExtArgs>[]
      solicitacoes_cartao: Prisma.$solicitacoes_cartaoPayload<ExtArgs>[]
      transacoes: Prisma.$transacoesPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      cnpj: string
      email: string
      phone: string
      address: string
      category: string
      status: $Enums.EstabelecimentoStatus
      ativadoEm: Date | null
      logo: string | null
      asaasId: string | null
      createdAt: Date
      updatedAt: Date
      franqueadoId: string
    }, ExtArgs["result"]["estabelecimentos"]>
    composites: {}
  }

  type estabelecimentosGetPayload<S extends boolean | null | undefined | estabelecimentosDefaultArgs> = $Result.GetResult<Prisma.$estabelecimentosPayload, S>

  type estabelecimentosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<estabelecimentosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstabelecimentosCountAggregateInputType | true
    }

  export interface estabelecimentosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['estabelecimentos'], meta: { name: 'estabelecimentos' } }
    /**
     * Find zero or one Estabelecimentos that matches the filter.
     * @param {estabelecimentosFindUniqueArgs} args - Arguments to find a Estabelecimentos
     * @example
     * // Get one Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends estabelecimentosFindUniqueArgs>(args: SelectSubset<T, estabelecimentosFindUniqueArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Estabelecimentos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {estabelecimentosFindUniqueOrThrowArgs} args - Arguments to find a Estabelecimentos
     * @example
     * // Get one Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends estabelecimentosFindUniqueOrThrowArgs>(args: SelectSubset<T, estabelecimentosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estabelecimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimentosFindFirstArgs} args - Arguments to find a Estabelecimentos
     * @example
     * // Get one Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends estabelecimentosFindFirstArgs>(args?: SelectSubset<T, estabelecimentosFindFirstArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estabelecimentos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimentosFindFirstOrThrowArgs} args - Arguments to find a Estabelecimentos
     * @example
     * // Get one Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends estabelecimentosFindFirstOrThrowArgs>(args?: SelectSubset<T, estabelecimentosFindFirstOrThrowArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Estabelecimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimentosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.findMany()
     * 
     * // Get first 10 Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estabelecimentosWithIdOnly = await prisma.estabelecimentos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends estabelecimentosFindManyArgs>(args?: SelectSubset<T, estabelecimentosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Estabelecimentos.
     * @param {estabelecimentosCreateArgs} args - Arguments to create a Estabelecimentos.
     * @example
     * // Create one Estabelecimentos
     * const Estabelecimentos = await prisma.estabelecimentos.create({
     *   data: {
     *     // ... data to create a Estabelecimentos
     *   }
     * })
     * 
     */
    create<T extends estabelecimentosCreateArgs>(args: SelectSubset<T, estabelecimentosCreateArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Estabelecimentos.
     * @param {estabelecimentosCreateManyArgs} args - Arguments to create many Estabelecimentos.
     * @example
     * // Create many Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends estabelecimentosCreateManyArgs>(args?: SelectSubset<T, estabelecimentosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estabelecimentos and returns the data saved in the database.
     * @param {estabelecimentosCreateManyAndReturnArgs} args - Arguments to create many Estabelecimentos.
     * @example
     * // Create many Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estabelecimentos and only return the `id`
     * const estabelecimentosWithIdOnly = await prisma.estabelecimentos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends estabelecimentosCreateManyAndReturnArgs>(args?: SelectSubset<T, estabelecimentosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Estabelecimentos.
     * @param {estabelecimentosDeleteArgs} args - Arguments to delete one Estabelecimentos.
     * @example
     * // Delete one Estabelecimentos
     * const Estabelecimentos = await prisma.estabelecimentos.delete({
     *   where: {
     *     // ... filter to delete one Estabelecimentos
     *   }
     * })
     * 
     */
    delete<T extends estabelecimentosDeleteArgs>(args: SelectSubset<T, estabelecimentosDeleteArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Estabelecimentos.
     * @param {estabelecimentosUpdateArgs} args - Arguments to update one Estabelecimentos.
     * @example
     * // Update one Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends estabelecimentosUpdateArgs>(args: SelectSubset<T, estabelecimentosUpdateArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Estabelecimentos.
     * @param {estabelecimentosDeleteManyArgs} args - Arguments to filter Estabelecimentos to delete.
     * @example
     * // Delete a few Estabelecimentos
     * const { count } = await prisma.estabelecimentos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends estabelecimentosDeleteManyArgs>(args?: SelectSubset<T, estabelecimentosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estabelecimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimentosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends estabelecimentosUpdateManyArgs>(args: SelectSubset<T, estabelecimentosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estabelecimentos and returns the data updated in the database.
     * @param {estabelecimentosUpdateManyAndReturnArgs} args - Arguments to update many Estabelecimentos.
     * @example
     * // Update many Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Estabelecimentos and only return the `id`
     * const estabelecimentosWithIdOnly = await prisma.estabelecimentos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends estabelecimentosUpdateManyAndReturnArgs>(args: SelectSubset<T, estabelecimentosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Estabelecimentos.
     * @param {estabelecimentosUpsertArgs} args - Arguments to update or create a Estabelecimentos.
     * @example
     * // Update or create a Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimentos.upsert({
     *   create: {
     *     // ... data to create a Estabelecimentos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estabelecimentos we want to update
     *   }
     * })
     */
    upsert<T extends estabelecimentosUpsertArgs>(args: SelectSubset<T, estabelecimentosUpsertArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Estabelecimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimentosCountArgs} args - Arguments to filter Estabelecimentos to count.
     * @example
     * // Count the number of Estabelecimentos
     * const count = await prisma.estabelecimentos.count({
     *   where: {
     *     // ... the filter for the Estabelecimentos we want to count
     *   }
     * })
    **/
    count<T extends estabelecimentosCountArgs>(
      args?: Subset<T, estabelecimentosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstabelecimentosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estabelecimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstabelecimentosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstabelecimentosAggregateArgs>(args: Subset<T, EstabelecimentosAggregateArgs>): Prisma.PrismaPromise<GetEstabelecimentosAggregateType<T>>

    /**
     * Group by Estabelecimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estabelecimentosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends estabelecimentosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: estabelecimentosGroupByArgs['orderBy'] }
        : { orderBy?: estabelecimentosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, estabelecimentosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstabelecimentosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the estabelecimentos model
   */
  readonly fields: estabelecimentosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for estabelecimentos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__estabelecimentosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cartoes<T extends estabelecimentos$cartoesArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentos$cartoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comissoes<T extends estabelecimentos$comissoesArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentos$comissoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cobrancas<T extends estabelecimentos$cobrancasArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentos$cobrancasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    displays<T extends estabelecimentos$displaysArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentos$displaysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estabelecimento_coords<T extends estabelecimentos$estabelecimento_coordsArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentos$estabelecimento_coordsArgs<ExtArgs>>): Prisma__estabelecimento_coordsClient<$Result.GetResult<Prisma.$estabelecimento_coordsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    franqueados<T extends franqueadosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, franqueadosDefaultArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    logs<T extends estabelecimentos$logsArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentos$logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    solicitacoes_cartao<T extends estabelecimentos$solicitacoes_cartaoArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentos$solicitacoes_cartaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transacoes<T extends estabelecimentos$transacoesArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentos$transacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends estabelecimentos$usersArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentos$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the estabelecimentos model
   */
  interface estabelecimentosFieldRefs {
    readonly id: FieldRef<"estabelecimentos", 'String'>
    readonly name: FieldRef<"estabelecimentos", 'String'>
    readonly cnpj: FieldRef<"estabelecimentos", 'String'>
    readonly email: FieldRef<"estabelecimentos", 'String'>
    readonly phone: FieldRef<"estabelecimentos", 'String'>
    readonly address: FieldRef<"estabelecimentos", 'String'>
    readonly category: FieldRef<"estabelecimentos", 'String'>
    readonly status: FieldRef<"estabelecimentos", 'EstabelecimentoStatus'>
    readonly ativadoEm: FieldRef<"estabelecimentos", 'DateTime'>
    readonly logo: FieldRef<"estabelecimentos", 'String'>
    readonly asaasId: FieldRef<"estabelecimentos", 'String'>
    readonly createdAt: FieldRef<"estabelecimentos", 'DateTime'>
    readonly updatedAt: FieldRef<"estabelecimentos", 'DateTime'>
    readonly franqueadoId: FieldRef<"estabelecimentos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * estabelecimentos findUnique
   */
  export type estabelecimentosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    /**
     * Filter, which estabelecimentos to fetch.
     */
    where: estabelecimentosWhereUniqueInput
  }

  /**
   * estabelecimentos findUniqueOrThrow
   */
  export type estabelecimentosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    /**
     * Filter, which estabelecimentos to fetch.
     */
    where: estabelecimentosWhereUniqueInput
  }

  /**
   * estabelecimentos findFirst
   */
  export type estabelecimentosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    /**
     * Filter, which estabelecimentos to fetch.
     */
    where?: estabelecimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabelecimentos to fetch.
     */
    orderBy?: estabelecimentosOrderByWithRelationInput | estabelecimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estabelecimentos.
     */
    cursor?: estabelecimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabelecimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabelecimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estabelecimentos.
     */
    distinct?: EstabelecimentosScalarFieldEnum | EstabelecimentosScalarFieldEnum[]
  }

  /**
   * estabelecimentos findFirstOrThrow
   */
  export type estabelecimentosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    /**
     * Filter, which estabelecimentos to fetch.
     */
    where?: estabelecimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabelecimentos to fetch.
     */
    orderBy?: estabelecimentosOrderByWithRelationInput | estabelecimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estabelecimentos.
     */
    cursor?: estabelecimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabelecimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabelecimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estabelecimentos.
     */
    distinct?: EstabelecimentosScalarFieldEnum | EstabelecimentosScalarFieldEnum[]
  }

  /**
   * estabelecimentos findMany
   */
  export type estabelecimentosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    /**
     * Filter, which estabelecimentos to fetch.
     */
    where?: estabelecimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estabelecimentos to fetch.
     */
    orderBy?: estabelecimentosOrderByWithRelationInput | estabelecimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing estabelecimentos.
     */
    cursor?: estabelecimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estabelecimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estabelecimentos.
     */
    skip?: number
    distinct?: EstabelecimentosScalarFieldEnum | EstabelecimentosScalarFieldEnum[]
  }

  /**
   * estabelecimentos create
   */
  export type estabelecimentosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    /**
     * The data needed to create a estabelecimentos.
     */
    data: XOR<estabelecimentosCreateInput, estabelecimentosUncheckedCreateInput>
  }

  /**
   * estabelecimentos createMany
   */
  export type estabelecimentosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many estabelecimentos.
     */
    data: estabelecimentosCreateManyInput | estabelecimentosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estabelecimentos createManyAndReturn
   */
  export type estabelecimentosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * The data used to create many estabelecimentos.
     */
    data: estabelecimentosCreateManyInput | estabelecimentosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * estabelecimentos update
   */
  export type estabelecimentosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    /**
     * The data needed to update a estabelecimentos.
     */
    data: XOR<estabelecimentosUpdateInput, estabelecimentosUncheckedUpdateInput>
    /**
     * Choose, which estabelecimentos to update.
     */
    where: estabelecimentosWhereUniqueInput
  }

  /**
   * estabelecimentos updateMany
   */
  export type estabelecimentosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update estabelecimentos.
     */
    data: XOR<estabelecimentosUpdateManyMutationInput, estabelecimentosUncheckedUpdateManyInput>
    /**
     * Filter which estabelecimentos to update
     */
    where?: estabelecimentosWhereInput
    /**
     * Limit how many estabelecimentos to update.
     */
    limit?: number
  }

  /**
   * estabelecimentos updateManyAndReturn
   */
  export type estabelecimentosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * The data used to update estabelecimentos.
     */
    data: XOR<estabelecimentosUpdateManyMutationInput, estabelecimentosUncheckedUpdateManyInput>
    /**
     * Filter which estabelecimentos to update
     */
    where?: estabelecimentosWhereInput
    /**
     * Limit how many estabelecimentos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * estabelecimentos upsert
   */
  export type estabelecimentosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    /**
     * The filter to search for the estabelecimentos to update in case it exists.
     */
    where: estabelecimentosWhereUniqueInput
    /**
     * In case the estabelecimentos found by the `where` argument doesn't exist, create a new estabelecimentos with this data.
     */
    create: XOR<estabelecimentosCreateInput, estabelecimentosUncheckedCreateInput>
    /**
     * In case the estabelecimentos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<estabelecimentosUpdateInput, estabelecimentosUncheckedUpdateInput>
  }

  /**
   * estabelecimentos delete
   */
  export type estabelecimentosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    /**
     * Filter which estabelecimentos to delete.
     */
    where: estabelecimentosWhereUniqueInput
  }

  /**
   * estabelecimentos deleteMany
   */
  export type estabelecimentosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estabelecimentos to delete
     */
    where?: estabelecimentosWhereInput
    /**
     * Limit how many estabelecimentos to delete.
     */
    limit?: number
  }

  /**
   * estabelecimentos.cartoes
   */
  export type estabelecimentos$cartoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    where?: cartoesWhereInput
    orderBy?: cartoesOrderByWithRelationInput | cartoesOrderByWithRelationInput[]
    cursor?: cartoesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CartoesScalarFieldEnum | CartoesScalarFieldEnum[]
  }

  /**
   * estabelecimentos.comissoes
   */
  export type estabelecimentos$comissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    where?: comissoesWhereInput
    orderBy?: comissoesOrderByWithRelationInput | comissoesOrderByWithRelationInput[]
    cursor?: comissoesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComissoesScalarFieldEnum | ComissoesScalarFieldEnum[]
  }

  /**
   * estabelecimentos.cobrancas
   */
  export type estabelecimentos$cobrancasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
    where?: cobrancasWhereInput
    orderBy?: cobrancasOrderByWithRelationInput | cobrancasOrderByWithRelationInput[]
    cursor?: cobrancasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CobrancasScalarFieldEnum | CobrancasScalarFieldEnum[]
  }

  /**
   * estabelecimentos.displays
   */
  export type estabelecimentos$displaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    where?: displaysWhereInput
    orderBy?: displaysOrderByWithRelationInput | displaysOrderByWithRelationInput[]
    cursor?: displaysWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DisplaysScalarFieldEnum | DisplaysScalarFieldEnum[]
  }

  /**
   * estabelecimentos.estabelecimento_coords
   */
  export type estabelecimentos$estabelecimento_coordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimento_coords
     */
    select?: estabelecimento_coordsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimento_coords
     */
    omit?: estabelecimento_coordsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimento_coordsInclude<ExtArgs> | null
    where?: estabelecimento_coordsWhereInput
  }

  /**
   * estabelecimentos.logs
   */
  export type estabelecimentos$logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    where?: logsWhereInput
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    cursor?: logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * estabelecimentos.solicitacoes_cartao
   */
  export type estabelecimentos$solicitacoes_cartaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    where?: solicitacoes_cartaoWhereInput
    orderBy?: solicitacoes_cartaoOrderByWithRelationInput | solicitacoes_cartaoOrderByWithRelationInput[]
    cursor?: solicitacoes_cartaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Solicitacoes_cartaoScalarFieldEnum | Solicitacoes_cartaoScalarFieldEnum[]
  }

  /**
   * estabelecimentos.transacoes
   */
  export type estabelecimentos$transacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    where?: transacoesWhereInput
    orderBy?: transacoesOrderByWithRelationInput | transacoesOrderByWithRelationInput[]
    cursor?: transacoesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransacoesScalarFieldEnum | TransacoesScalarFieldEnum[]
  }

  /**
   * estabelecimentos.users
   */
  export type estabelecimentos$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    cursor?: usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * estabelecimentos without action
   */
  export type estabelecimentosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
  }


  /**
   * Model franqueadoras
   */

  export type AggregateFranqueadoras = {
    _count: FranqueadorasCountAggregateOutputType | null
    _min: FranqueadorasMinAggregateOutputType | null
    _max: FranqueadorasMaxAggregateOutputType | null
  }

  export type FranqueadorasMinAggregateOutputType = {
    id: string | null
    name: string | null
    cnpj: string | null
    email: string | null
    phone: string | null
    address: string | null
    logo: string | null
    status: $Enums.Status | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FranqueadorasMaxAggregateOutputType = {
    id: string | null
    name: string | null
    cnpj: string | null
    email: string | null
    phone: string | null
    address: string | null
    logo: string | null
    status: $Enums.Status | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FranqueadorasCountAggregateOutputType = {
    id: number
    name: number
    cnpj: number
    email: number
    phone: number
    address: number
    logo: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FranqueadorasMinAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    email?: true
    phone?: true
    address?: true
    logo?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FranqueadorasMaxAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    email?: true
    phone?: true
    address?: true
    logo?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FranqueadorasCountAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    email?: true
    phone?: true
    address?: true
    logo?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FranqueadorasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which franqueadoras to aggregate.
     */
    where?: franqueadorasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of franqueadoras to fetch.
     */
    orderBy?: franqueadorasOrderByWithRelationInput | franqueadorasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: franqueadorasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` franqueadoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` franqueadoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned franqueadoras
    **/
    _count?: true | FranqueadorasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FranqueadorasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FranqueadorasMaxAggregateInputType
  }

  export type GetFranqueadorasAggregateType<T extends FranqueadorasAggregateArgs> = {
        [P in keyof T & keyof AggregateFranqueadoras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFranqueadoras[P]>
      : GetScalarType<T[P], AggregateFranqueadoras[P]>
  }




  export type franqueadorasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: franqueadorasWhereInput
    orderBy?: franqueadorasOrderByWithAggregationInput | franqueadorasOrderByWithAggregationInput[]
    by: FranqueadorasScalarFieldEnum[] | FranqueadorasScalarFieldEnum
    having?: franqueadorasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FranqueadorasCountAggregateInputType | true
    _min?: FranqueadorasMinAggregateInputType
    _max?: FranqueadorasMaxAggregateInputType
  }

  export type FranqueadorasGroupByOutputType = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    logo: string | null
    status: $Enums.Status
    createdAt: Date
    updatedAt: Date
    _count: FranqueadorasCountAggregateOutputType | null
    _min: FranqueadorasMinAggregateOutputType | null
    _max: FranqueadorasMaxAggregateOutputType | null
  }

  type GetFranqueadorasGroupByPayload<T extends franqueadorasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FranqueadorasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FranqueadorasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FranqueadorasGroupByOutputType[P]>
            : GetScalarType<T[P], FranqueadorasGroupByOutputType[P]>
        }
      >
    >


  export type franqueadorasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    logo?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueados?: boolean | franqueadoras$franqueadosArgs<ExtArgs>
    logs?: boolean | franqueadoras$logsArgs<ExtArgs>
    users?: boolean | franqueadoras$usersArgs<ExtArgs>
    _count?: boolean | FranqueadorasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["franqueadoras"]>

  export type franqueadorasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    logo?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["franqueadoras"]>

  export type franqueadorasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    logo?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["franqueadoras"]>

  export type franqueadorasSelectScalar = {
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    logo?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type franqueadorasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "cnpj" | "email" | "phone" | "address" | "logo" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["franqueadoras"]>
  export type franqueadorasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    franqueados?: boolean | franqueadoras$franqueadosArgs<ExtArgs>
    logs?: boolean | franqueadoras$logsArgs<ExtArgs>
    users?: boolean | franqueadoras$usersArgs<ExtArgs>
    _count?: boolean | FranqueadorasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type franqueadorasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type franqueadorasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $franqueadorasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "franqueadoras"
    objects: {
      franqueados: Prisma.$franqueadosPayload<ExtArgs>[]
      logs: Prisma.$logsPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      cnpj: string
      email: string
      phone: string
      address: string
      logo: string | null
      status: $Enums.Status
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["franqueadoras"]>
    composites: {}
  }

  type franqueadorasGetPayload<S extends boolean | null | undefined | franqueadorasDefaultArgs> = $Result.GetResult<Prisma.$franqueadorasPayload, S>

  type franqueadorasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<franqueadorasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FranqueadorasCountAggregateInputType | true
    }

  export interface franqueadorasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['franqueadoras'], meta: { name: 'franqueadoras' } }
    /**
     * Find zero or one Franqueadoras that matches the filter.
     * @param {franqueadorasFindUniqueArgs} args - Arguments to find a Franqueadoras
     * @example
     * // Get one Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends franqueadorasFindUniqueArgs>(args: SelectSubset<T, franqueadorasFindUniqueArgs<ExtArgs>>): Prisma__franqueadorasClient<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Franqueadoras that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {franqueadorasFindUniqueOrThrowArgs} args - Arguments to find a Franqueadoras
     * @example
     * // Get one Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends franqueadorasFindUniqueOrThrowArgs>(args: SelectSubset<T, franqueadorasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__franqueadorasClient<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Franqueadoras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadorasFindFirstArgs} args - Arguments to find a Franqueadoras
     * @example
     * // Get one Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends franqueadorasFindFirstArgs>(args?: SelectSubset<T, franqueadorasFindFirstArgs<ExtArgs>>): Prisma__franqueadorasClient<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Franqueadoras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadorasFindFirstOrThrowArgs} args - Arguments to find a Franqueadoras
     * @example
     * // Get one Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends franqueadorasFindFirstOrThrowArgs>(args?: SelectSubset<T, franqueadorasFindFirstOrThrowArgs<ExtArgs>>): Prisma__franqueadorasClient<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Franqueadoras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadorasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.findMany()
     * 
     * // Get first 10 Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const franqueadorasWithIdOnly = await prisma.franqueadoras.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends franqueadorasFindManyArgs>(args?: SelectSubset<T, franqueadorasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Franqueadoras.
     * @param {franqueadorasCreateArgs} args - Arguments to create a Franqueadoras.
     * @example
     * // Create one Franqueadoras
     * const Franqueadoras = await prisma.franqueadoras.create({
     *   data: {
     *     // ... data to create a Franqueadoras
     *   }
     * })
     * 
     */
    create<T extends franqueadorasCreateArgs>(args: SelectSubset<T, franqueadorasCreateArgs<ExtArgs>>): Prisma__franqueadorasClient<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Franqueadoras.
     * @param {franqueadorasCreateManyArgs} args - Arguments to create many Franqueadoras.
     * @example
     * // Create many Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends franqueadorasCreateManyArgs>(args?: SelectSubset<T, franqueadorasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Franqueadoras and returns the data saved in the database.
     * @param {franqueadorasCreateManyAndReturnArgs} args - Arguments to create many Franqueadoras.
     * @example
     * // Create many Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Franqueadoras and only return the `id`
     * const franqueadorasWithIdOnly = await prisma.franqueadoras.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends franqueadorasCreateManyAndReturnArgs>(args?: SelectSubset<T, franqueadorasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Franqueadoras.
     * @param {franqueadorasDeleteArgs} args - Arguments to delete one Franqueadoras.
     * @example
     * // Delete one Franqueadoras
     * const Franqueadoras = await prisma.franqueadoras.delete({
     *   where: {
     *     // ... filter to delete one Franqueadoras
     *   }
     * })
     * 
     */
    delete<T extends franqueadorasDeleteArgs>(args: SelectSubset<T, franqueadorasDeleteArgs<ExtArgs>>): Prisma__franqueadorasClient<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Franqueadoras.
     * @param {franqueadorasUpdateArgs} args - Arguments to update one Franqueadoras.
     * @example
     * // Update one Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends franqueadorasUpdateArgs>(args: SelectSubset<T, franqueadorasUpdateArgs<ExtArgs>>): Prisma__franqueadorasClient<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Franqueadoras.
     * @param {franqueadorasDeleteManyArgs} args - Arguments to filter Franqueadoras to delete.
     * @example
     * // Delete a few Franqueadoras
     * const { count } = await prisma.franqueadoras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends franqueadorasDeleteManyArgs>(args?: SelectSubset<T, franqueadorasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Franqueadoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadorasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends franqueadorasUpdateManyArgs>(args: SelectSubset<T, franqueadorasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Franqueadoras and returns the data updated in the database.
     * @param {franqueadorasUpdateManyAndReturnArgs} args - Arguments to update many Franqueadoras.
     * @example
     * // Update many Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Franqueadoras and only return the `id`
     * const franqueadorasWithIdOnly = await prisma.franqueadoras.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends franqueadorasUpdateManyAndReturnArgs>(args: SelectSubset<T, franqueadorasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Franqueadoras.
     * @param {franqueadorasUpsertArgs} args - Arguments to update or create a Franqueadoras.
     * @example
     * // Update or create a Franqueadoras
     * const franqueadoras = await prisma.franqueadoras.upsert({
     *   create: {
     *     // ... data to create a Franqueadoras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Franqueadoras we want to update
     *   }
     * })
     */
    upsert<T extends franqueadorasUpsertArgs>(args: SelectSubset<T, franqueadorasUpsertArgs<ExtArgs>>): Prisma__franqueadorasClient<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Franqueadoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadorasCountArgs} args - Arguments to filter Franqueadoras to count.
     * @example
     * // Count the number of Franqueadoras
     * const count = await prisma.franqueadoras.count({
     *   where: {
     *     // ... the filter for the Franqueadoras we want to count
     *   }
     * })
    **/
    count<T extends franqueadorasCountArgs>(
      args?: Subset<T, franqueadorasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FranqueadorasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Franqueadoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FranqueadorasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FranqueadorasAggregateArgs>(args: Subset<T, FranqueadorasAggregateArgs>): Prisma.PrismaPromise<GetFranqueadorasAggregateType<T>>

    /**
     * Group by Franqueadoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadorasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends franqueadorasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: franqueadorasGroupByArgs['orderBy'] }
        : { orderBy?: franqueadorasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, franqueadorasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFranqueadorasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the franqueadoras model
   */
  readonly fields: franqueadorasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for franqueadoras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__franqueadorasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    franqueados<T extends franqueadoras$franqueadosArgs<ExtArgs> = {}>(args?: Subset<T, franqueadoras$franqueadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    logs<T extends franqueadoras$logsArgs<ExtArgs> = {}>(args?: Subset<T, franqueadoras$logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends franqueadoras$usersArgs<ExtArgs> = {}>(args?: Subset<T, franqueadoras$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the franqueadoras model
   */
  interface franqueadorasFieldRefs {
    readonly id: FieldRef<"franqueadoras", 'String'>
    readonly name: FieldRef<"franqueadoras", 'String'>
    readonly cnpj: FieldRef<"franqueadoras", 'String'>
    readonly email: FieldRef<"franqueadoras", 'String'>
    readonly phone: FieldRef<"franqueadoras", 'String'>
    readonly address: FieldRef<"franqueadoras", 'String'>
    readonly logo: FieldRef<"franqueadoras", 'String'>
    readonly status: FieldRef<"franqueadoras", 'Status'>
    readonly createdAt: FieldRef<"franqueadoras", 'DateTime'>
    readonly updatedAt: FieldRef<"franqueadoras", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * franqueadoras findUnique
   */
  export type franqueadorasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
    /**
     * Filter, which franqueadoras to fetch.
     */
    where: franqueadorasWhereUniqueInput
  }

  /**
   * franqueadoras findUniqueOrThrow
   */
  export type franqueadorasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
    /**
     * Filter, which franqueadoras to fetch.
     */
    where: franqueadorasWhereUniqueInput
  }

  /**
   * franqueadoras findFirst
   */
  export type franqueadorasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
    /**
     * Filter, which franqueadoras to fetch.
     */
    where?: franqueadorasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of franqueadoras to fetch.
     */
    orderBy?: franqueadorasOrderByWithRelationInput | franqueadorasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for franqueadoras.
     */
    cursor?: franqueadorasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` franqueadoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` franqueadoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of franqueadoras.
     */
    distinct?: FranqueadorasScalarFieldEnum | FranqueadorasScalarFieldEnum[]
  }

  /**
   * franqueadoras findFirstOrThrow
   */
  export type franqueadorasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
    /**
     * Filter, which franqueadoras to fetch.
     */
    where?: franqueadorasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of franqueadoras to fetch.
     */
    orderBy?: franqueadorasOrderByWithRelationInput | franqueadorasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for franqueadoras.
     */
    cursor?: franqueadorasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` franqueadoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` franqueadoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of franqueadoras.
     */
    distinct?: FranqueadorasScalarFieldEnum | FranqueadorasScalarFieldEnum[]
  }

  /**
   * franqueadoras findMany
   */
  export type franqueadorasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
    /**
     * Filter, which franqueadoras to fetch.
     */
    where?: franqueadorasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of franqueadoras to fetch.
     */
    orderBy?: franqueadorasOrderByWithRelationInput | franqueadorasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing franqueadoras.
     */
    cursor?: franqueadorasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` franqueadoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` franqueadoras.
     */
    skip?: number
    distinct?: FranqueadorasScalarFieldEnum | FranqueadorasScalarFieldEnum[]
  }

  /**
   * franqueadoras create
   */
  export type franqueadorasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
    /**
     * The data needed to create a franqueadoras.
     */
    data: XOR<franqueadorasCreateInput, franqueadorasUncheckedCreateInput>
  }

  /**
   * franqueadoras createMany
   */
  export type franqueadorasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many franqueadoras.
     */
    data: franqueadorasCreateManyInput | franqueadorasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * franqueadoras createManyAndReturn
   */
  export type franqueadorasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * The data used to create many franqueadoras.
     */
    data: franqueadorasCreateManyInput | franqueadorasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * franqueadoras update
   */
  export type franqueadorasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
    /**
     * The data needed to update a franqueadoras.
     */
    data: XOR<franqueadorasUpdateInput, franqueadorasUncheckedUpdateInput>
    /**
     * Choose, which franqueadoras to update.
     */
    where: franqueadorasWhereUniqueInput
  }

  /**
   * franqueadoras updateMany
   */
  export type franqueadorasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update franqueadoras.
     */
    data: XOR<franqueadorasUpdateManyMutationInput, franqueadorasUncheckedUpdateManyInput>
    /**
     * Filter which franqueadoras to update
     */
    where?: franqueadorasWhereInput
    /**
     * Limit how many franqueadoras to update.
     */
    limit?: number
  }

  /**
   * franqueadoras updateManyAndReturn
   */
  export type franqueadorasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * The data used to update franqueadoras.
     */
    data: XOR<franqueadorasUpdateManyMutationInput, franqueadorasUncheckedUpdateManyInput>
    /**
     * Filter which franqueadoras to update
     */
    where?: franqueadorasWhereInput
    /**
     * Limit how many franqueadoras to update.
     */
    limit?: number
  }

  /**
   * franqueadoras upsert
   */
  export type franqueadorasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
    /**
     * The filter to search for the franqueadoras to update in case it exists.
     */
    where: franqueadorasWhereUniqueInput
    /**
     * In case the franqueadoras found by the `where` argument doesn't exist, create a new franqueadoras with this data.
     */
    create: XOR<franqueadorasCreateInput, franqueadorasUncheckedCreateInput>
    /**
     * In case the franqueadoras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<franqueadorasUpdateInput, franqueadorasUncheckedUpdateInput>
  }

  /**
   * franqueadoras delete
   */
  export type franqueadorasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
    /**
     * Filter which franqueadoras to delete.
     */
    where: franqueadorasWhereUniqueInput
  }

  /**
   * franqueadoras deleteMany
   */
  export type franqueadorasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which franqueadoras to delete
     */
    where?: franqueadorasWhereInput
    /**
     * Limit how many franqueadoras to delete.
     */
    limit?: number
  }

  /**
   * franqueadoras.franqueados
   */
  export type franqueadoras$franqueadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    where?: franqueadosWhereInput
    orderBy?: franqueadosOrderByWithRelationInput | franqueadosOrderByWithRelationInput[]
    cursor?: franqueadosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FranqueadosScalarFieldEnum | FranqueadosScalarFieldEnum[]
  }

  /**
   * franqueadoras.logs
   */
  export type franqueadoras$logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    where?: logsWhereInput
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    cursor?: logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * franqueadoras.users
   */
  export type franqueadoras$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    cursor?: usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * franqueadoras without action
   */
  export type franqueadorasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
  }


  /**
   * Model franqueados
   */

  export type AggregateFranqueados = {
    _count: FranqueadosCountAggregateOutputType | null
    _avg: FranqueadosAvgAggregateOutputType | null
    _sum: FranqueadosSumAggregateOutputType | null
    _min: FranqueadosMinAggregateOutputType | null
    _max: FranqueadosMaxAggregateOutputType | null
  }

  export type FranqueadosAvgAggregateOutputType = {
    comissionRate: number | null
  }

  export type FranqueadosSumAggregateOutputType = {
    comissionRate: number | null
  }

  export type FranqueadosMinAggregateOutputType = {
    id: string | null
    name: string | null
    cnpj: string | null
    email: string | null
    phone: string | null
    address: string | null
    region: string | null
    comissionRate: number | null
    status: $Enums.Status | null
    asaasCustomerId: string | null
    logo: string | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoraId: string | null
  }

  export type FranqueadosMaxAggregateOutputType = {
    id: string | null
    name: string | null
    cnpj: string | null
    email: string | null
    phone: string | null
    address: string | null
    region: string | null
    comissionRate: number | null
    status: $Enums.Status | null
    asaasCustomerId: string | null
    logo: string | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoraId: string | null
  }

  export type FranqueadosCountAggregateOutputType = {
    id: number
    name: number
    cnpj: number
    email: number
    phone: number
    address: number
    region: number
    comissionRate: number
    status: number
    asaasCustomerId: number
    logo: number
    createdAt: number
    updatedAt: number
    franqueadoraId: number
    _all: number
  }


  export type FranqueadosAvgAggregateInputType = {
    comissionRate?: true
  }

  export type FranqueadosSumAggregateInputType = {
    comissionRate?: true
  }

  export type FranqueadosMinAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    email?: true
    phone?: true
    address?: true
    region?: true
    comissionRate?: true
    status?: true
    asaasCustomerId?: true
    logo?: true
    createdAt?: true
    updatedAt?: true
    franqueadoraId?: true
  }

  export type FranqueadosMaxAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    email?: true
    phone?: true
    address?: true
    region?: true
    comissionRate?: true
    status?: true
    asaasCustomerId?: true
    logo?: true
    createdAt?: true
    updatedAt?: true
    franqueadoraId?: true
  }

  export type FranqueadosCountAggregateInputType = {
    id?: true
    name?: true
    cnpj?: true
    email?: true
    phone?: true
    address?: true
    region?: true
    comissionRate?: true
    status?: true
    asaasCustomerId?: true
    logo?: true
    createdAt?: true
    updatedAt?: true
    franqueadoraId?: true
    _all?: true
  }

  export type FranqueadosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which franqueados to aggregate.
     */
    where?: franqueadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of franqueados to fetch.
     */
    orderBy?: franqueadosOrderByWithRelationInput | franqueadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: franqueadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` franqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` franqueados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned franqueados
    **/
    _count?: true | FranqueadosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FranqueadosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FranqueadosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FranqueadosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FranqueadosMaxAggregateInputType
  }

  export type GetFranqueadosAggregateType<T extends FranqueadosAggregateArgs> = {
        [P in keyof T & keyof AggregateFranqueados]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFranqueados[P]>
      : GetScalarType<T[P], AggregateFranqueados[P]>
  }




  export type franqueadosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: franqueadosWhereInput
    orderBy?: franqueadosOrderByWithAggregationInput | franqueadosOrderByWithAggregationInput[]
    by: FranqueadosScalarFieldEnum[] | FranqueadosScalarFieldEnum
    having?: franqueadosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FranqueadosCountAggregateInputType | true
    _avg?: FranqueadosAvgAggregateInputType
    _sum?: FranqueadosSumAggregateInputType
    _min?: FranqueadosMinAggregateInputType
    _max?: FranqueadosMaxAggregateInputType
  }

  export type FranqueadosGroupByOutputType = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate: number
    status: $Enums.Status
    asaasCustomerId: string | null
    logo: string | null
    createdAt: Date
    updatedAt: Date
    franqueadoraId: string
    _count: FranqueadosCountAggregateOutputType | null
    _avg: FranqueadosAvgAggregateOutputType | null
    _sum: FranqueadosSumAggregateOutputType | null
    _min: FranqueadosMinAggregateOutputType | null
    _max: FranqueadosMaxAggregateOutputType | null
  }

  type GetFranqueadosGroupByPayload<T extends franqueadosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FranqueadosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FranqueadosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FranqueadosGroupByOutputType[P]>
            : GetScalarType<T[P], FranqueadosGroupByOutputType[P]>
        }
      >
    >


  export type franqueadosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    region?: boolean
    comissionRate?: boolean
    status?: boolean
    asaasCustomerId?: boolean
    logo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoraId?: boolean
    cartoes?: boolean | franqueados$cartoesArgs<ExtArgs>
    comissoes?: boolean | franqueados$comissoesArgs<ExtArgs>
    cobrancas?: boolean | franqueados$cobrancasArgs<ExtArgs>
    displays?: boolean | franqueados$displaysArgs<ExtArgs>
    estabelecimentos?: boolean | franqueados$estabelecimentosArgs<ExtArgs>
    franqueadoras?: boolean | franqueadorasDefaultArgs<ExtArgs>
    logs?: boolean | franqueados$logsArgs<ExtArgs>
    solicitacoes_cartao?: boolean | franqueados$solicitacoes_cartaoArgs<ExtArgs>
    users?: boolean | franqueados$usersArgs<ExtArgs>
    _count?: boolean | FranqueadosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["franqueados"]>

  export type franqueadosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    region?: boolean
    comissionRate?: boolean
    status?: boolean
    asaasCustomerId?: boolean
    logo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoraId?: boolean
    franqueadoras?: boolean | franqueadorasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["franqueados"]>

  export type franqueadosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    region?: boolean
    comissionRate?: boolean
    status?: boolean
    asaasCustomerId?: boolean
    logo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoraId?: boolean
    franqueadoras?: boolean | franqueadorasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["franqueados"]>

  export type franqueadosSelectScalar = {
    id?: boolean
    name?: boolean
    cnpj?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    region?: boolean
    comissionRate?: boolean
    status?: boolean
    asaasCustomerId?: boolean
    logo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoraId?: boolean
  }

  export type franqueadosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "cnpj" | "email" | "phone" | "address" | "region" | "comissionRate" | "status" | "asaasCustomerId" | "logo" | "createdAt" | "updatedAt" | "franqueadoraId", ExtArgs["result"]["franqueados"]>
  export type franqueadosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cartoes?: boolean | franqueados$cartoesArgs<ExtArgs>
    comissoes?: boolean | franqueados$comissoesArgs<ExtArgs>
    cobrancas?: boolean | franqueados$cobrancasArgs<ExtArgs>
    displays?: boolean | franqueados$displaysArgs<ExtArgs>
    estabelecimentos?: boolean | franqueados$estabelecimentosArgs<ExtArgs>
    franqueadoras?: boolean | franqueadorasDefaultArgs<ExtArgs>
    logs?: boolean | franqueados$logsArgs<ExtArgs>
    solicitacoes_cartao?: boolean | franqueados$solicitacoes_cartaoArgs<ExtArgs>
    users?: boolean | franqueados$usersArgs<ExtArgs>
    _count?: boolean | FranqueadosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type franqueadosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    franqueadoras?: boolean | franqueadorasDefaultArgs<ExtArgs>
  }
  export type franqueadosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    franqueadoras?: boolean | franqueadorasDefaultArgs<ExtArgs>
  }

  export type $franqueadosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "franqueados"
    objects: {
      cartoes: Prisma.$cartoesPayload<ExtArgs>[]
      comissoes: Prisma.$comissoesPayload<ExtArgs>[]
      cobrancas: Prisma.$cobrancasPayload<ExtArgs>[]
      displays: Prisma.$displaysPayload<ExtArgs>[]
      estabelecimentos: Prisma.$estabelecimentosPayload<ExtArgs>[]
      franqueadoras: Prisma.$franqueadorasPayload<ExtArgs>
      logs: Prisma.$logsPayload<ExtArgs>[]
      solicitacoes_cartao: Prisma.$solicitacoes_cartaoPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      cnpj: string
      email: string
      phone: string
      address: string
      region: string
      comissionRate: number
      status: $Enums.Status
      asaasCustomerId: string | null
      logo: string | null
      createdAt: Date
      updatedAt: Date
      franqueadoraId: string
    }, ExtArgs["result"]["franqueados"]>
    composites: {}
  }

  type franqueadosGetPayload<S extends boolean | null | undefined | franqueadosDefaultArgs> = $Result.GetResult<Prisma.$franqueadosPayload, S>

  type franqueadosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<franqueadosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FranqueadosCountAggregateInputType | true
    }

  export interface franqueadosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['franqueados'], meta: { name: 'franqueados' } }
    /**
     * Find zero or one Franqueados that matches the filter.
     * @param {franqueadosFindUniqueArgs} args - Arguments to find a Franqueados
     * @example
     * // Get one Franqueados
     * const franqueados = await prisma.franqueados.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends franqueadosFindUniqueArgs>(args: SelectSubset<T, franqueadosFindUniqueArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Franqueados that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {franqueadosFindUniqueOrThrowArgs} args - Arguments to find a Franqueados
     * @example
     * // Get one Franqueados
     * const franqueados = await prisma.franqueados.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends franqueadosFindUniqueOrThrowArgs>(args: SelectSubset<T, franqueadosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Franqueados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadosFindFirstArgs} args - Arguments to find a Franqueados
     * @example
     * // Get one Franqueados
     * const franqueados = await prisma.franqueados.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends franqueadosFindFirstArgs>(args?: SelectSubset<T, franqueadosFindFirstArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Franqueados that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadosFindFirstOrThrowArgs} args - Arguments to find a Franqueados
     * @example
     * // Get one Franqueados
     * const franqueados = await prisma.franqueados.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends franqueadosFindFirstOrThrowArgs>(args?: SelectSubset<T, franqueadosFindFirstOrThrowArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Franqueados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Franqueados
     * const franqueados = await prisma.franqueados.findMany()
     * 
     * // Get first 10 Franqueados
     * const franqueados = await prisma.franqueados.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const franqueadosWithIdOnly = await prisma.franqueados.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends franqueadosFindManyArgs>(args?: SelectSubset<T, franqueadosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Franqueados.
     * @param {franqueadosCreateArgs} args - Arguments to create a Franqueados.
     * @example
     * // Create one Franqueados
     * const Franqueados = await prisma.franqueados.create({
     *   data: {
     *     // ... data to create a Franqueados
     *   }
     * })
     * 
     */
    create<T extends franqueadosCreateArgs>(args: SelectSubset<T, franqueadosCreateArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Franqueados.
     * @param {franqueadosCreateManyArgs} args - Arguments to create many Franqueados.
     * @example
     * // Create many Franqueados
     * const franqueados = await prisma.franqueados.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends franqueadosCreateManyArgs>(args?: SelectSubset<T, franqueadosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Franqueados and returns the data saved in the database.
     * @param {franqueadosCreateManyAndReturnArgs} args - Arguments to create many Franqueados.
     * @example
     * // Create many Franqueados
     * const franqueados = await prisma.franqueados.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Franqueados and only return the `id`
     * const franqueadosWithIdOnly = await prisma.franqueados.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends franqueadosCreateManyAndReturnArgs>(args?: SelectSubset<T, franqueadosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Franqueados.
     * @param {franqueadosDeleteArgs} args - Arguments to delete one Franqueados.
     * @example
     * // Delete one Franqueados
     * const Franqueados = await prisma.franqueados.delete({
     *   where: {
     *     // ... filter to delete one Franqueados
     *   }
     * })
     * 
     */
    delete<T extends franqueadosDeleteArgs>(args: SelectSubset<T, franqueadosDeleteArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Franqueados.
     * @param {franqueadosUpdateArgs} args - Arguments to update one Franqueados.
     * @example
     * // Update one Franqueados
     * const franqueados = await prisma.franqueados.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends franqueadosUpdateArgs>(args: SelectSubset<T, franqueadosUpdateArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Franqueados.
     * @param {franqueadosDeleteManyArgs} args - Arguments to filter Franqueados to delete.
     * @example
     * // Delete a few Franqueados
     * const { count } = await prisma.franqueados.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends franqueadosDeleteManyArgs>(args?: SelectSubset<T, franqueadosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Franqueados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Franqueados
     * const franqueados = await prisma.franqueados.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends franqueadosUpdateManyArgs>(args: SelectSubset<T, franqueadosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Franqueados and returns the data updated in the database.
     * @param {franqueadosUpdateManyAndReturnArgs} args - Arguments to update many Franqueados.
     * @example
     * // Update many Franqueados
     * const franqueados = await prisma.franqueados.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Franqueados and only return the `id`
     * const franqueadosWithIdOnly = await prisma.franqueados.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends franqueadosUpdateManyAndReturnArgs>(args: SelectSubset<T, franqueadosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Franqueados.
     * @param {franqueadosUpsertArgs} args - Arguments to update or create a Franqueados.
     * @example
     * // Update or create a Franqueados
     * const franqueados = await prisma.franqueados.upsert({
     *   create: {
     *     // ... data to create a Franqueados
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Franqueados we want to update
     *   }
     * })
     */
    upsert<T extends franqueadosUpsertArgs>(args: SelectSubset<T, franqueadosUpsertArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Franqueados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadosCountArgs} args - Arguments to filter Franqueados to count.
     * @example
     * // Count the number of Franqueados
     * const count = await prisma.franqueados.count({
     *   where: {
     *     // ... the filter for the Franqueados we want to count
     *   }
     * })
    **/
    count<T extends franqueadosCountArgs>(
      args?: Subset<T, franqueadosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FranqueadosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Franqueados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FranqueadosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FranqueadosAggregateArgs>(args: Subset<T, FranqueadosAggregateArgs>): Prisma.PrismaPromise<GetFranqueadosAggregateType<T>>

    /**
     * Group by Franqueados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {franqueadosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends franqueadosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: franqueadosGroupByArgs['orderBy'] }
        : { orderBy?: franqueadosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, franqueadosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFranqueadosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the franqueados model
   */
  readonly fields: franqueadosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for franqueados.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__franqueadosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cartoes<T extends franqueados$cartoesArgs<ExtArgs> = {}>(args?: Subset<T, franqueados$cartoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comissoes<T extends franqueados$comissoesArgs<ExtArgs> = {}>(args?: Subset<T, franqueados$comissoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cobrancas<T extends franqueados$cobrancasArgs<ExtArgs> = {}>(args?: Subset<T, franqueados$cobrancasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cobrancasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    displays<T extends franqueados$displaysArgs<ExtArgs> = {}>(args?: Subset<T, franqueados$displaysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estabelecimentos<T extends franqueados$estabelecimentosArgs<ExtArgs> = {}>(args?: Subset<T, franqueados$estabelecimentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    franqueadoras<T extends franqueadorasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, franqueadorasDefaultArgs<ExtArgs>>): Prisma__franqueadorasClient<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    logs<T extends franqueados$logsArgs<ExtArgs> = {}>(args?: Subset<T, franqueados$logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    solicitacoes_cartao<T extends franqueados$solicitacoes_cartaoArgs<ExtArgs> = {}>(args?: Subset<T, franqueados$solicitacoes_cartaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends franqueados$usersArgs<ExtArgs> = {}>(args?: Subset<T, franqueados$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the franqueados model
   */
  interface franqueadosFieldRefs {
    readonly id: FieldRef<"franqueados", 'String'>
    readonly name: FieldRef<"franqueados", 'String'>
    readonly cnpj: FieldRef<"franqueados", 'String'>
    readonly email: FieldRef<"franqueados", 'String'>
    readonly phone: FieldRef<"franqueados", 'String'>
    readonly address: FieldRef<"franqueados", 'String'>
    readonly region: FieldRef<"franqueados", 'String'>
    readonly comissionRate: FieldRef<"franqueados", 'Float'>
    readonly status: FieldRef<"franqueados", 'Status'>
    readonly asaasCustomerId: FieldRef<"franqueados", 'String'>
    readonly logo: FieldRef<"franqueados", 'String'>
    readonly createdAt: FieldRef<"franqueados", 'DateTime'>
    readonly updatedAt: FieldRef<"franqueados", 'DateTime'>
    readonly franqueadoraId: FieldRef<"franqueados", 'String'>
  }
    

  // Custom InputTypes
  /**
   * franqueados findUnique
   */
  export type franqueadosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    /**
     * Filter, which franqueados to fetch.
     */
    where: franqueadosWhereUniqueInput
  }

  /**
   * franqueados findUniqueOrThrow
   */
  export type franqueadosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    /**
     * Filter, which franqueados to fetch.
     */
    where: franqueadosWhereUniqueInput
  }

  /**
   * franqueados findFirst
   */
  export type franqueadosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    /**
     * Filter, which franqueados to fetch.
     */
    where?: franqueadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of franqueados to fetch.
     */
    orderBy?: franqueadosOrderByWithRelationInput | franqueadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for franqueados.
     */
    cursor?: franqueadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` franqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` franqueados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of franqueados.
     */
    distinct?: FranqueadosScalarFieldEnum | FranqueadosScalarFieldEnum[]
  }

  /**
   * franqueados findFirstOrThrow
   */
  export type franqueadosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    /**
     * Filter, which franqueados to fetch.
     */
    where?: franqueadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of franqueados to fetch.
     */
    orderBy?: franqueadosOrderByWithRelationInput | franqueadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for franqueados.
     */
    cursor?: franqueadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` franqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` franqueados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of franqueados.
     */
    distinct?: FranqueadosScalarFieldEnum | FranqueadosScalarFieldEnum[]
  }

  /**
   * franqueados findMany
   */
  export type franqueadosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    /**
     * Filter, which franqueados to fetch.
     */
    where?: franqueadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of franqueados to fetch.
     */
    orderBy?: franqueadosOrderByWithRelationInput | franqueadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing franqueados.
     */
    cursor?: franqueadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` franqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` franqueados.
     */
    skip?: number
    distinct?: FranqueadosScalarFieldEnum | FranqueadosScalarFieldEnum[]
  }

  /**
   * franqueados create
   */
  export type franqueadosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    /**
     * The data needed to create a franqueados.
     */
    data: XOR<franqueadosCreateInput, franqueadosUncheckedCreateInput>
  }

  /**
   * franqueados createMany
   */
  export type franqueadosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many franqueados.
     */
    data: franqueadosCreateManyInput | franqueadosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * franqueados createManyAndReturn
   */
  export type franqueadosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * The data used to create many franqueados.
     */
    data: franqueadosCreateManyInput | franqueadosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * franqueados update
   */
  export type franqueadosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    /**
     * The data needed to update a franqueados.
     */
    data: XOR<franqueadosUpdateInput, franqueadosUncheckedUpdateInput>
    /**
     * Choose, which franqueados to update.
     */
    where: franqueadosWhereUniqueInput
  }

  /**
   * franqueados updateMany
   */
  export type franqueadosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update franqueados.
     */
    data: XOR<franqueadosUpdateManyMutationInput, franqueadosUncheckedUpdateManyInput>
    /**
     * Filter which franqueados to update
     */
    where?: franqueadosWhereInput
    /**
     * Limit how many franqueados to update.
     */
    limit?: number
  }

  /**
   * franqueados updateManyAndReturn
   */
  export type franqueadosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * The data used to update franqueados.
     */
    data: XOR<franqueadosUpdateManyMutationInput, franqueadosUncheckedUpdateManyInput>
    /**
     * Filter which franqueados to update
     */
    where?: franqueadosWhereInput
    /**
     * Limit how many franqueados to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * franqueados upsert
   */
  export type franqueadosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    /**
     * The filter to search for the franqueados to update in case it exists.
     */
    where: franqueadosWhereUniqueInput
    /**
     * In case the franqueados found by the `where` argument doesn't exist, create a new franqueados with this data.
     */
    create: XOR<franqueadosCreateInput, franqueadosUncheckedCreateInput>
    /**
     * In case the franqueados was found with the provided `where` argument, update it with this data.
     */
    update: XOR<franqueadosUpdateInput, franqueadosUncheckedUpdateInput>
  }

  /**
   * franqueados delete
   */
  export type franqueadosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    /**
     * Filter which franqueados to delete.
     */
    where: franqueadosWhereUniqueInput
  }

  /**
   * franqueados deleteMany
   */
  export type franqueadosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which franqueados to delete
     */
    where?: franqueadosWhereInput
    /**
     * Limit how many franqueados to delete.
     */
    limit?: number
  }

  /**
   * franqueados.cartoes
   */
  export type franqueados$cartoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    where?: cartoesWhereInput
    orderBy?: cartoesOrderByWithRelationInput | cartoesOrderByWithRelationInput[]
    cursor?: cartoesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CartoesScalarFieldEnum | CartoesScalarFieldEnum[]
  }

  /**
   * franqueados.comissoes
   */
  export type franqueados$comissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    where?: comissoesWhereInput
    orderBy?: comissoesOrderByWithRelationInput | comissoesOrderByWithRelationInput[]
    cursor?: comissoesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComissoesScalarFieldEnum | ComissoesScalarFieldEnum[]
  }

  /**
   * franqueados.cobrancas
   */
  export type franqueados$cobrancasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cobrancas
     */
    select?: cobrancasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cobrancas
     */
    omit?: cobrancasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cobrancasInclude<ExtArgs> | null
    where?: cobrancasWhereInput
    orderBy?: cobrancasOrderByWithRelationInput | cobrancasOrderByWithRelationInput[]
    cursor?: cobrancasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CobrancasScalarFieldEnum | CobrancasScalarFieldEnum[]
  }

  /**
   * franqueados.displays
   */
  export type franqueados$displaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    where?: displaysWhereInput
    orderBy?: displaysOrderByWithRelationInput | displaysOrderByWithRelationInput[]
    cursor?: displaysWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DisplaysScalarFieldEnum | DisplaysScalarFieldEnum[]
  }

  /**
   * franqueados.estabelecimentos
   */
  export type franqueados$estabelecimentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    where?: estabelecimentosWhereInput
    orderBy?: estabelecimentosOrderByWithRelationInput | estabelecimentosOrderByWithRelationInput[]
    cursor?: estabelecimentosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstabelecimentosScalarFieldEnum | EstabelecimentosScalarFieldEnum[]
  }

  /**
   * franqueados.logs
   */
  export type franqueados$logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    where?: logsWhereInput
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    cursor?: logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * franqueados.solicitacoes_cartao
   */
  export type franqueados$solicitacoes_cartaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    where?: solicitacoes_cartaoWhereInput
    orderBy?: solicitacoes_cartaoOrderByWithRelationInput | solicitacoes_cartaoOrderByWithRelationInput[]
    cursor?: solicitacoes_cartaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Solicitacoes_cartaoScalarFieldEnum | Solicitacoes_cartaoScalarFieldEnum[]
  }

  /**
   * franqueados.users
   */
  export type franqueados$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    cursor?: usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * franqueados without action
   */
  export type franqueadosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
  }


  /**
   * Model logs
   */

  export type AggregateLogs = {
    _count: LogsCountAggregateOutputType | null
    _min: LogsMinAggregateOutputType | null
    _max: LogsMaxAggregateOutputType | null
  }

  export type LogsMinAggregateOutputType = {
    id: string | null
    acao: string | null
    entidade: string | null
    entidadeId: string | null
    ip: string | null
    userAgent: string | null
    createdAt: Date | null
    userId: string | null
    franqueadoraId: string | null
    franqueadoId: string | null
    estabelecimentoId: string | null
    cartaoId: string | null
    transacaoId: string | null
    comissaoId: string | null
    solicitacaoId: string | null
    displayId: string | null
  }

  export type LogsMaxAggregateOutputType = {
    id: string | null
    acao: string | null
    entidade: string | null
    entidadeId: string | null
    ip: string | null
    userAgent: string | null
    createdAt: Date | null
    userId: string | null
    franqueadoraId: string | null
    franqueadoId: string | null
    estabelecimentoId: string | null
    cartaoId: string | null
    transacaoId: string | null
    comissaoId: string | null
    solicitacaoId: string | null
    displayId: string | null
  }

  export type LogsCountAggregateOutputType = {
    id: number
    acao: number
    entidade: number
    entidadeId: number
    dadosAnteriores: number
    dadosNovos: number
    ip: number
    userAgent: number
    createdAt: number
    userId: number
    franqueadoraId: number
    franqueadoId: number
    estabelecimentoId: number
    cartaoId: number
    transacaoId: number
    comissaoId: number
    solicitacaoId: number
    displayId: number
    _all: number
  }


  export type LogsMinAggregateInputType = {
    id?: true
    acao?: true
    entidade?: true
    entidadeId?: true
    ip?: true
    userAgent?: true
    createdAt?: true
    userId?: true
    franqueadoraId?: true
    franqueadoId?: true
    estabelecimentoId?: true
    cartaoId?: true
    transacaoId?: true
    comissaoId?: true
    solicitacaoId?: true
    displayId?: true
  }

  export type LogsMaxAggregateInputType = {
    id?: true
    acao?: true
    entidade?: true
    entidadeId?: true
    ip?: true
    userAgent?: true
    createdAt?: true
    userId?: true
    franqueadoraId?: true
    franqueadoId?: true
    estabelecimentoId?: true
    cartaoId?: true
    transacaoId?: true
    comissaoId?: true
    solicitacaoId?: true
    displayId?: true
  }

  export type LogsCountAggregateInputType = {
    id?: true
    acao?: true
    entidade?: true
    entidadeId?: true
    dadosAnteriores?: true
    dadosNovos?: true
    ip?: true
    userAgent?: true
    createdAt?: true
    userId?: true
    franqueadoraId?: true
    franqueadoId?: true
    estabelecimentoId?: true
    cartaoId?: true
    transacaoId?: true
    comissaoId?: true
    solicitacaoId?: true
    displayId?: true
    _all?: true
  }

  export type LogsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which logs to aggregate.
     */
    where?: logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logs to fetch.
     */
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned logs
    **/
    _count?: true | LogsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LogsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LogsMaxAggregateInputType
  }

  export type GetLogsAggregateType<T extends LogsAggregateArgs> = {
        [P in keyof T & keyof AggregateLogs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLogs[P]>
      : GetScalarType<T[P], AggregateLogs[P]>
  }




  export type logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: logsWhereInput
    orderBy?: logsOrderByWithAggregationInput | logsOrderByWithAggregationInput[]
    by: LogsScalarFieldEnum[] | LogsScalarFieldEnum
    having?: logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LogsCountAggregateInputType | true
    _min?: LogsMinAggregateInputType
    _max?: LogsMaxAggregateInputType
  }

  export type LogsGroupByOutputType = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores: JsonValue | null
    dadosNovos: JsonValue | null
    ip: string
    userAgent: string
    createdAt: Date
    userId: string | null
    franqueadoraId: string | null
    franqueadoId: string | null
    estabelecimentoId: string | null
    cartaoId: string | null
    transacaoId: string | null
    comissaoId: string | null
    solicitacaoId: string | null
    displayId: string | null
    _count: LogsCountAggregateOutputType | null
    _min: LogsMinAggregateOutputType | null
    _max: LogsMaxAggregateOutputType | null
  }

  type GetLogsGroupByPayload<T extends logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LogsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LogsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LogsGroupByOutputType[P]>
            : GetScalarType<T[P], LogsGroupByOutputType[P]>
        }
      >
    >


  export type logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    acao?: boolean
    entidade?: boolean
    entidadeId?: boolean
    dadosAnteriores?: boolean
    dadosNovos?: boolean
    ip?: boolean
    userAgent?: boolean
    createdAt?: boolean
    userId?: boolean
    franqueadoraId?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    cartaoId?: boolean
    transacaoId?: boolean
    comissaoId?: boolean
    solicitacaoId?: boolean
    displayId?: boolean
    cartoes?: boolean | logs$cartoesArgs<ExtArgs>
    comissoes?: boolean | logs$comissoesArgs<ExtArgs>
    displays?: boolean | logs$displaysArgs<ExtArgs>
    estabelecimentos?: boolean | logs$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | logs$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | logs$franqueadorasArgs<ExtArgs>
    solicitacoes_cartao?: boolean | logs$solicitacoes_cartaoArgs<ExtArgs>
    transacoes?: boolean | logs$transacoesArgs<ExtArgs>
    users?: boolean | logs$usersArgs<ExtArgs>
  }, ExtArgs["result"]["logs"]>

  export type logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    acao?: boolean
    entidade?: boolean
    entidadeId?: boolean
    dadosAnteriores?: boolean
    dadosNovos?: boolean
    ip?: boolean
    userAgent?: boolean
    createdAt?: boolean
    userId?: boolean
    franqueadoraId?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    cartaoId?: boolean
    transacaoId?: boolean
    comissaoId?: boolean
    solicitacaoId?: boolean
    displayId?: boolean
    cartoes?: boolean | logs$cartoesArgs<ExtArgs>
    comissoes?: boolean | logs$comissoesArgs<ExtArgs>
    displays?: boolean | logs$displaysArgs<ExtArgs>
    estabelecimentos?: boolean | logs$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | logs$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | logs$franqueadorasArgs<ExtArgs>
    solicitacoes_cartao?: boolean | logs$solicitacoes_cartaoArgs<ExtArgs>
    transacoes?: boolean | logs$transacoesArgs<ExtArgs>
    users?: boolean | logs$usersArgs<ExtArgs>
  }, ExtArgs["result"]["logs"]>

  export type logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    acao?: boolean
    entidade?: boolean
    entidadeId?: boolean
    dadosAnteriores?: boolean
    dadosNovos?: boolean
    ip?: boolean
    userAgent?: boolean
    createdAt?: boolean
    userId?: boolean
    franqueadoraId?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    cartaoId?: boolean
    transacaoId?: boolean
    comissaoId?: boolean
    solicitacaoId?: boolean
    displayId?: boolean
    cartoes?: boolean | logs$cartoesArgs<ExtArgs>
    comissoes?: boolean | logs$comissoesArgs<ExtArgs>
    displays?: boolean | logs$displaysArgs<ExtArgs>
    estabelecimentos?: boolean | logs$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | logs$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | logs$franqueadorasArgs<ExtArgs>
    solicitacoes_cartao?: boolean | logs$solicitacoes_cartaoArgs<ExtArgs>
    transacoes?: boolean | logs$transacoesArgs<ExtArgs>
    users?: boolean | logs$usersArgs<ExtArgs>
  }, ExtArgs["result"]["logs"]>

  export type logsSelectScalar = {
    id?: boolean
    acao?: boolean
    entidade?: boolean
    entidadeId?: boolean
    dadosAnteriores?: boolean
    dadosNovos?: boolean
    ip?: boolean
    userAgent?: boolean
    createdAt?: boolean
    userId?: boolean
    franqueadoraId?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    cartaoId?: boolean
    transacaoId?: boolean
    comissaoId?: boolean
    solicitacaoId?: boolean
    displayId?: boolean
  }

  export type logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "acao" | "entidade" | "entidadeId" | "dadosAnteriores" | "dadosNovos" | "ip" | "userAgent" | "createdAt" | "userId" | "franqueadoraId" | "franqueadoId" | "estabelecimentoId" | "cartaoId" | "transacaoId" | "comissaoId" | "solicitacaoId" | "displayId", ExtArgs["result"]["logs"]>
  export type logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cartoes?: boolean | logs$cartoesArgs<ExtArgs>
    comissoes?: boolean | logs$comissoesArgs<ExtArgs>
    displays?: boolean | logs$displaysArgs<ExtArgs>
    estabelecimentos?: boolean | logs$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | logs$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | logs$franqueadorasArgs<ExtArgs>
    solicitacoes_cartao?: boolean | logs$solicitacoes_cartaoArgs<ExtArgs>
    transacoes?: boolean | logs$transacoesArgs<ExtArgs>
    users?: boolean | logs$usersArgs<ExtArgs>
  }
  export type logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cartoes?: boolean | logs$cartoesArgs<ExtArgs>
    comissoes?: boolean | logs$comissoesArgs<ExtArgs>
    displays?: boolean | logs$displaysArgs<ExtArgs>
    estabelecimentos?: boolean | logs$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | logs$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | logs$franqueadorasArgs<ExtArgs>
    solicitacoes_cartao?: boolean | logs$solicitacoes_cartaoArgs<ExtArgs>
    transacoes?: boolean | logs$transacoesArgs<ExtArgs>
    users?: boolean | logs$usersArgs<ExtArgs>
  }
  export type logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cartoes?: boolean | logs$cartoesArgs<ExtArgs>
    comissoes?: boolean | logs$comissoesArgs<ExtArgs>
    displays?: boolean | logs$displaysArgs<ExtArgs>
    estabelecimentos?: boolean | logs$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | logs$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | logs$franqueadorasArgs<ExtArgs>
    solicitacoes_cartao?: boolean | logs$solicitacoes_cartaoArgs<ExtArgs>
    transacoes?: boolean | logs$transacoesArgs<ExtArgs>
    users?: boolean | logs$usersArgs<ExtArgs>
  }

  export type $logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "logs"
    objects: {
      cartoes: Prisma.$cartoesPayload<ExtArgs> | null
      comissoes: Prisma.$comissoesPayload<ExtArgs> | null
      displays: Prisma.$displaysPayload<ExtArgs> | null
      estabelecimentos: Prisma.$estabelecimentosPayload<ExtArgs> | null
      franqueados: Prisma.$franqueadosPayload<ExtArgs> | null
      franqueadoras: Prisma.$franqueadorasPayload<ExtArgs> | null
      solicitacoes_cartao: Prisma.$solicitacoes_cartaoPayload<ExtArgs> | null
      transacoes: Prisma.$transacoesPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      acao: string
      entidade: string
      entidadeId: string
      dadosAnteriores: Prisma.JsonValue | null
      dadosNovos: Prisma.JsonValue | null
      ip: string
      userAgent: string
      createdAt: Date
      userId: string | null
      franqueadoraId: string | null
      franqueadoId: string | null
      estabelecimentoId: string | null
      cartaoId: string | null
      transacaoId: string | null
      comissaoId: string | null
      solicitacaoId: string | null
      displayId: string | null
    }, ExtArgs["result"]["logs"]>
    composites: {}
  }

  type logsGetPayload<S extends boolean | null | undefined | logsDefaultArgs> = $Result.GetResult<Prisma.$logsPayload, S>

  type logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LogsCountAggregateInputType | true
    }

  export interface logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['logs'], meta: { name: 'logs' } }
    /**
     * Find zero or one Logs that matches the filter.
     * @param {logsFindUniqueArgs} args - Arguments to find a Logs
     * @example
     * // Get one Logs
     * const logs = await prisma.logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends logsFindUniqueArgs>(args: SelectSubset<T, logsFindUniqueArgs<ExtArgs>>): Prisma__logsClient<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {logsFindUniqueOrThrowArgs} args - Arguments to find a Logs
     * @example
     * // Get one Logs
     * const logs = await prisma.logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends logsFindUniqueOrThrowArgs>(args: SelectSubset<T, logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__logsClient<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logsFindFirstArgs} args - Arguments to find a Logs
     * @example
     * // Get one Logs
     * const logs = await prisma.logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends logsFindFirstArgs>(args?: SelectSubset<T, logsFindFirstArgs<ExtArgs>>): Prisma__logsClient<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logsFindFirstOrThrowArgs} args - Arguments to find a Logs
     * @example
     * // Get one Logs
     * const logs = await prisma.logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends logsFindFirstOrThrowArgs>(args?: SelectSubset<T, logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__logsClient<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Logs
     * const logs = await prisma.logs.findMany()
     * 
     * // Get first 10 Logs
     * const logs = await prisma.logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const logsWithIdOnly = await prisma.logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends logsFindManyArgs>(args?: SelectSubset<T, logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Logs.
     * @param {logsCreateArgs} args - Arguments to create a Logs.
     * @example
     * // Create one Logs
     * const Logs = await prisma.logs.create({
     *   data: {
     *     // ... data to create a Logs
     *   }
     * })
     * 
     */
    create<T extends logsCreateArgs>(args: SelectSubset<T, logsCreateArgs<ExtArgs>>): Prisma__logsClient<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Logs.
     * @param {logsCreateManyArgs} args - Arguments to create many Logs.
     * @example
     * // Create many Logs
     * const logs = await prisma.logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends logsCreateManyArgs>(args?: SelectSubset<T, logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Logs and returns the data saved in the database.
     * @param {logsCreateManyAndReturnArgs} args - Arguments to create many Logs.
     * @example
     * // Create many Logs
     * const logs = await prisma.logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Logs and only return the `id`
     * const logsWithIdOnly = await prisma.logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends logsCreateManyAndReturnArgs>(args?: SelectSubset<T, logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Logs.
     * @param {logsDeleteArgs} args - Arguments to delete one Logs.
     * @example
     * // Delete one Logs
     * const Logs = await prisma.logs.delete({
     *   where: {
     *     // ... filter to delete one Logs
     *   }
     * })
     * 
     */
    delete<T extends logsDeleteArgs>(args: SelectSubset<T, logsDeleteArgs<ExtArgs>>): Prisma__logsClient<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Logs.
     * @param {logsUpdateArgs} args - Arguments to update one Logs.
     * @example
     * // Update one Logs
     * const logs = await prisma.logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends logsUpdateArgs>(args: SelectSubset<T, logsUpdateArgs<ExtArgs>>): Prisma__logsClient<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Logs.
     * @param {logsDeleteManyArgs} args - Arguments to filter Logs to delete.
     * @example
     * // Delete a few Logs
     * const { count } = await prisma.logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends logsDeleteManyArgs>(args?: SelectSubset<T, logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Logs
     * const logs = await prisma.logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends logsUpdateManyArgs>(args: SelectSubset<T, logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Logs and returns the data updated in the database.
     * @param {logsUpdateManyAndReturnArgs} args - Arguments to update many Logs.
     * @example
     * // Update many Logs
     * const logs = await prisma.logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Logs and only return the `id`
     * const logsWithIdOnly = await prisma.logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends logsUpdateManyAndReturnArgs>(args: SelectSubset<T, logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Logs.
     * @param {logsUpsertArgs} args - Arguments to update or create a Logs.
     * @example
     * // Update or create a Logs
     * const logs = await prisma.logs.upsert({
     *   create: {
     *     // ... data to create a Logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Logs we want to update
     *   }
     * })
     */
    upsert<T extends logsUpsertArgs>(args: SelectSubset<T, logsUpsertArgs<ExtArgs>>): Prisma__logsClient<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logsCountArgs} args - Arguments to filter Logs to count.
     * @example
     * // Count the number of Logs
     * const count = await prisma.logs.count({
     *   where: {
     *     // ... the filter for the Logs we want to count
     *   }
     * })
    **/
    count<T extends logsCountArgs>(
      args?: Subset<T, logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LogsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LogsAggregateArgs>(args: Subset<T, LogsAggregateArgs>): Prisma.PrismaPromise<GetLogsAggregateType<T>>

    /**
     * Group by Logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: logsGroupByArgs['orderBy'] }
        : { orderBy?: logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLogsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the logs model
   */
  readonly fields: logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cartoes<T extends logs$cartoesArgs<ExtArgs> = {}>(args?: Subset<T, logs$cartoesArgs<ExtArgs>>): Prisma__cartoesClient<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    comissoes<T extends logs$comissoesArgs<ExtArgs> = {}>(args?: Subset<T, logs$comissoesArgs<ExtArgs>>): Prisma__comissoesClient<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    displays<T extends logs$displaysArgs<ExtArgs> = {}>(args?: Subset<T, logs$displaysArgs<ExtArgs>>): Prisma__displaysClient<$Result.GetResult<Prisma.$displaysPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    estabelecimentos<T extends logs$estabelecimentosArgs<ExtArgs> = {}>(args?: Subset<T, logs$estabelecimentosArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    franqueados<T extends logs$franqueadosArgs<ExtArgs> = {}>(args?: Subset<T, logs$franqueadosArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    franqueadoras<T extends logs$franqueadorasArgs<ExtArgs> = {}>(args?: Subset<T, logs$franqueadorasArgs<ExtArgs>>): Prisma__franqueadorasClient<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    solicitacoes_cartao<T extends logs$solicitacoes_cartaoArgs<ExtArgs> = {}>(args?: Subset<T, logs$solicitacoes_cartaoArgs<ExtArgs>>): Prisma__solicitacoes_cartaoClient<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    transacoes<T extends logs$transacoesArgs<ExtArgs> = {}>(args?: Subset<T, logs$transacoesArgs<ExtArgs>>): Prisma__transacoesClient<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends logs$usersArgs<ExtArgs> = {}>(args?: Subset<T, logs$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the logs model
   */
  interface logsFieldRefs {
    readonly id: FieldRef<"logs", 'String'>
    readonly acao: FieldRef<"logs", 'String'>
    readonly entidade: FieldRef<"logs", 'String'>
    readonly entidadeId: FieldRef<"logs", 'String'>
    readonly dadosAnteriores: FieldRef<"logs", 'Json'>
    readonly dadosNovos: FieldRef<"logs", 'Json'>
    readonly ip: FieldRef<"logs", 'String'>
    readonly userAgent: FieldRef<"logs", 'String'>
    readonly createdAt: FieldRef<"logs", 'DateTime'>
    readonly userId: FieldRef<"logs", 'String'>
    readonly franqueadoraId: FieldRef<"logs", 'String'>
    readonly franqueadoId: FieldRef<"logs", 'String'>
    readonly estabelecimentoId: FieldRef<"logs", 'String'>
    readonly cartaoId: FieldRef<"logs", 'String'>
    readonly transacaoId: FieldRef<"logs", 'String'>
    readonly comissaoId: FieldRef<"logs", 'String'>
    readonly solicitacaoId: FieldRef<"logs", 'String'>
    readonly displayId: FieldRef<"logs", 'String'>
  }
    

  // Custom InputTypes
  /**
   * logs findUnique
   */
  export type logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    /**
     * Filter, which logs to fetch.
     */
    where: logsWhereUniqueInput
  }

  /**
   * logs findUniqueOrThrow
   */
  export type logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    /**
     * Filter, which logs to fetch.
     */
    where: logsWhereUniqueInput
  }

  /**
   * logs findFirst
   */
  export type logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    /**
     * Filter, which logs to fetch.
     */
    where?: logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logs to fetch.
     */
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for logs.
     */
    cursor?: logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of logs.
     */
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * logs findFirstOrThrow
   */
  export type logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    /**
     * Filter, which logs to fetch.
     */
    where?: logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logs to fetch.
     */
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for logs.
     */
    cursor?: logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of logs.
     */
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * logs findMany
   */
  export type logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    /**
     * Filter, which logs to fetch.
     */
    where?: logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logs to fetch.
     */
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing logs.
     */
    cursor?: logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logs.
     */
    skip?: number
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * logs create
   */
  export type logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    /**
     * The data needed to create a logs.
     */
    data: XOR<logsCreateInput, logsUncheckedCreateInput>
  }

  /**
   * logs createMany
   */
  export type logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many logs.
     */
    data: logsCreateManyInput | logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * logs createManyAndReturn
   */
  export type logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * The data used to create many logs.
     */
    data: logsCreateManyInput | logsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * logs update
   */
  export type logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    /**
     * The data needed to update a logs.
     */
    data: XOR<logsUpdateInput, logsUncheckedUpdateInput>
    /**
     * Choose, which logs to update.
     */
    where: logsWhereUniqueInput
  }

  /**
   * logs updateMany
   */
  export type logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update logs.
     */
    data: XOR<logsUpdateManyMutationInput, logsUncheckedUpdateManyInput>
    /**
     * Filter which logs to update
     */
    where?: logsWhereInput
    /**
     * Limit how many logs to update.
     */
    limit?: number
  }

  /**
   * logs updateManyAndReturn
   */
  export type logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * The data used to update logs.
     */
    data: XOR<logsUpdateManyMutationInput, logsUncheckedUpdateManyInput>
    /**
     * Filter which logs to update
     */
    where?: logsWhereInput
    /**
     * Limit how many logs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * logs upsert
   */
  export type logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    /**
     * The filter to search for the logs to update in case it exists.
     */
    where: logsWhereUniqueInput
    /**
     * In case the logs found by the `where` argument doesn't exist, create a new logs with this data.
     */
    create: XOR<logsCreateInput, logsUncheckedCreateInput>
    /**
     * In case the logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<logsUpdateInput, logsUncheckedUpdateInput>
  }

  /**
   * logs delete
   */
  export type logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    /**
     * Filter which logs to delete.
     */
    where: logsWhereUniqueInput
  }

  /**
   * logs deleteMany
   */
  export type logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which logs to delete
     */
    where?: logsWhereInput
    /**
     * Limit how many logs to delete.
     */
    limit?: number
  }

  /**
   * logs.cartoes
   */
  export type logs$cartoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cartoes
     */
    select?: cartoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cartoes
     */
    omit?: cartoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartoesInclude<ExtArgs> | null
    where?: cartoesWhereInput
  }

  /**
   * logs.comissoes
   */
  export type logs$comissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    where?: comissoesWhereInput
  }

  /**
   * logs.displays
   */
  export type logs$displaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the displays
     */
    select?: displaysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the displays
     */
    omit?: displaysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: displaysInclude<ExtArgs> | null
    where?: displaysWhereInput
  }

  /**
   * logs.estabelecimentos
   */
  export type logs$estabelecimentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    where?: estabelecimentosWhereInput
  }

  /**
   * logs.franqueados
   */
  export type logs$franqueadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    where?: franqueadosWhereInput
  }

  /**
   * logs.franqueadoras
   */
  export type logs$franqueadorasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
    where?: franqueadorasWhereInput
  }

  /**
   * logs.solicitacoes_cartao
   */
  export type logs$solicitacoes_cartaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    where?: solicitacoes_cartaoWhereInput
  }

  /**
   * logs.transacoes
   */
  export type logs$transacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    where?: transacoesWhereInput
  }

  /**
   * logs.users
   */
  export type logs$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * logs without action
   */
  export type logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
  }


  /**
   * Model refresh_tokens
   */

  export type AggregateRefresh_tokens = {
    _count: Refresh_tokensCountAggregateOutputType | null
    _min: Refresh_tokensMinAggregateOutputType | null
    _max: Refresh_tokensMaxAggregateOutputType | null
  }

  export type Refresh_tokensMinAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    revoked: boolean | null
    createdAt: Date | null
  }

  export type Refresh_tokensMaxAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    revoked: boolean | null
    createdAt: Date | null
  }

  export type Refresh_tokensCountAggregateOutputType = {
    id: number
    token: number
    userId: number
    expiresAt: number
    revoked: number
    createdAt: number
    _all: number
  }


  export type Refresh_tokensMinAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    revoked?: true
    createdAt?: true
  }

  export type Refresh_tokensMaxAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    revoked?: true
    createdAt?: true
  }

  export type Refresh_tokensCountAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    revoked?: true
    createdAt?: true
    _all?: true
  }

  export type Refresh_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refresh_tokens to aggregate.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned refresh_tokens
    **/
    _count?: true | Refresh_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Refresh_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Refresh_tokensMaxAggregateInputType
  }

  export type GetRefresh_tokensAggregateType<T extends Refresh_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateRefresh_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefresh_tokens[P]>
      : GetScalarType<T[P], AggregateRefresh_tokens[P]>
  }




  export type refresh_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refresh_tokensWhereInput
    orderBy?: refresh_tokensOrderByWithAggregationInput | refresh_tokensOrderByWithAggregationInput[]
    by: Refresh_tokensScalarFieldEnum[] | Refresh_tokensScalarFieldEnum
    having?: refresh_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Refresh_tokensCountAggregateInputType | true
    _min?: Refresh_tokensMinAggregateInputType
    _max?: Refresh_tokensMaxAggregateInputType
  }

  export type Refresh_tokensGroupByOutputType = {
    id: string
    token: string
    userId: string
    expiresAt: Date
    revoked: boolean
    createdAt: Date
    _count: Refresh_tokensCountAggregateOutputType | null
    _min: Refresh_tokensMinAggregateOutputType | null
    _max: Refresh_tokensMaxAggregateOutputType | null
  }

  type GetRefresh_tokensGroupByPayload<T extends refresh_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Refresh_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Refresh_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Refresh_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Refresh_tokensGroupByOutputType[P]>
        }
      >
    >


  export type refresh_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    revoked?: boolean
    createdAt?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refresh_tokens"]>

  export type refresh_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    revoked?: boolean
    createdAt?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refresh_tokens"]>

  export type refresh_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    revoked?: boolean
    createdAt?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refresh_tokens"]>

  export type refresh_tokensSelectScalar = {
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    revoked?: boolean
    createdAt?: boolean
  }

  export type refresh_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token" | "userId" | "expiresAt" | "revoked" | "createdAt", ExtArgs["result"]["refresh_tokens"]>
  export type refresh_tokensInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type refresh_tokensIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type refresh_tokensIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $refresh_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "refresh_tokens"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      userId: string
      expiresAt: Date
      revoked: boolean
      createdAt: Date
    }, ExtArgs["result"]["refresh_tokens"]>
    composites: {}
  }

  type refresh_tokensGetPayload<S extends boolean | null | undefined | refresh_tokensDefaultArgs> = $Result.GetResult<Prisma.$refresh_tokensPayload, S>

  type refresh_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<refresh_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Refresh_tokensCountAggregateInputType | true
    }

  export interface refresh_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['refresh_tokens'], meta: { name: 'refresh_tokens' } }
    /**
     * Find zero or one Refresh_tokens that matches the filter.
     * @param {refresh_tokensFindUniqueArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends refresh_tokensFindUniqueArgs>(args: SelectSubset<T, refresh_tokensFindUniqueArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Refresh_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {refresh_tokensFindUniqueOrThrowArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends refresh_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, refresh_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Refresh_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindFirstArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends refresh_tokensFindFirstArgs>(args?: SelectSubset<T, refresh_tokensFindFirstArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Refresh_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindFirstOrThrowArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends refresh_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, refresh_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Refresh_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findMany()
     * 
     * // Get first 10 Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refresh_tokensWithIdOnly = await prisma.refresh_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends refresh_tokensFindManyArgs>(args?: SelectSubset<T, refresh_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Refresh_tokens.
     * @param {refresh_tokensCreateArgs} args - Arguments to create a Refresh_tokens.
     * @example
     * // Create one Refresh_tokens
     * const Refresh_tokens = await prisma.refresh_tokens.create({
     *   data: {
     *     // ... data to create a Refresh_tokens
     *   }
     * })
     * 
     */
    create<T extends refresh_tokensCreateArgs>(args: SelectSubset<T, refresh_tokensCreateArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Refresh_tokens.
     * @param {refresh_tokensCreateManyArgs} args - Arguments to create many Refresh_tokens.
     * @example
     * // Create many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends refresh_tokensCreateManyArgs>(args?: SelectSubset<T, refresh_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Refresh_tokens and returns the data saved in the database.
     * @param {refresh_tokensCreateManyAndReturnArgs} args - Arguments to create many Refresh_tokens.
     * @example
     * // Create many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Refresh_tokens and only return the `id`
     * const refresh_tokensWithIdOnly = await prisma.refresh_tokens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends refresh_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, refresh_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Refresh_tokens.
     * @param {refresh_tokensDeleteArgs} args - Arguments to delete one Refresh_tokens.
     * @example
     * // Delete one Refresh_tokens
     * const Refresh_tokens = await prisma.refresh_tokens.delete({
     *   where: {
     *     // ... filter to delete one Refresh_tokens
     *   }
     * })
     * 
     */
    delete<T extends refresh_tokensDeleteArgs>(args: SelectSubset<T, refresh_tokensDeleteArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Refresh_tokens.
     * @param {refresh_tokensUpdateArgs} args - Arguments to update one Refresh_tokens.
     * @example
     * // Update one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends refresh_tokensUpdateArgs>(args: SelectSubset<T, refresh_tokensUpdateArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Refresh_tokens.
     * @param {refresh_tokensDeleteManyArgs} args - Arguments to filter Refresh_tokens to delete.
     * @example
     * // Delete a few Refresh_tokens
     * const { count } = await prisma.refresh_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends refresh_tokensDeleteManyArgs>(args?: SelectSubset<T, refresh_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends refresh_tokensUpdateManyArgs>(args: SelectSubset<T, refresh_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refresh_tokens and returns the data updated in the database.
     * @param {refresh_tokensUpdateManyAndReturnArgs} args - Arguments to update many Refresh_tokens.
     * @example
     * // Update many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Refresh_tokens and only return the `id`
     * const refresh_tokensWithIdOnly = await prisma.refresh_tokens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends refresh_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, refresh_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Refresh_tokens.
     * @param {refresh_tokensUpsertArgs} args - Arguments to update or create a Refresh_tokens.
     * @example
     * // Update or create a Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.upsert({
     *   create: {
     *     // ... data to create a Refresh_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Refresh_tokens we want to update
     *   }
     * })
     */
    upsert<T extends refresh_tokensUpsertArgs>(args: SelectSubset<T, refresh_tokensUpsertArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensCountArgs} args - Arguments to filter Refresh_tokens to count.
     * @example
     * // Count the number of Refresh_tokens
     * const count = await prisma.refresh_tokens.count({
     *   where: {
     *     // ... the filter for the Refresh_tokens we want to count
     *   }
     * })
    **/
    count<T extends refresh_tokensCountArgs>(
      args?: Subset<T, refresh_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Refresh_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Refresh_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Refresh_tokensAggregateArgs>(args: Subset<T, Refresh_tokensAggregateArgs>): Prisma.PrismaPromise<GetRefresh_tokensAggregateType<T>>

    /**
     * Group by Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends refresh_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: refresh_tokensGroupByArgs['orderBy'] }
        : { orderBy?: refresh_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, refresh_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefresh_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the refresh_tokens model
   */
  readonly fields: refresh_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for refresh_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__refresh_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the refresh_tokens model
   */
  interface refresh_tokensFieldRefs {
    readonly id: FieldRef<"refresh_tokens", 'String'>
    readonly token: FieldRef<"refresh_tokens", 'String'>
    readonly userId: FieldRef<"refresh_tokens", 'String'>
    readonly expiresAt: FieldRef<"refresh_tokens", 'DateTime'>
    readonly revoked: FieldRef<"refresh_tokens", 'Boolean'>
    readonly createdAt: FieldRef<"refresh_tokens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * refresh_tokens findUnique
   */
  export type refresh_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens findUniqueOrThrow
   */
  export type refresh_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens findFirst
   */
  export type refresh_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refresh_tokens.
     */
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * refresh_tokens findFirstOrThrow
   */
  export type refresh_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refresh_tokens.
     */
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * refresh_tokens findMany
   */
  export type refresh_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * refresh_tokens create
   */
  export type refresh_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The data needed to create a refresh_tokens.
     */
    data: XOR<refresh_tokensCreateInput, refresh_tokensUncheckedCreateInput>
  }

  /**
   * refresh_tokens createMany
   */
  export type refresh_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many refresh_tokens.
     */
    data: refresh_tokensCreateManyInput | refresh_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * refresh_tokens createManyAndReturn
   */
  export type refresh_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many refresh_tokens.
     */
    data: refresh_tokensCreateManyInput | refresh_tokensCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * refresh_tokens update
   */
  export type refresh_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The data needed to update a refresh_tokens.
     */
    data: XOR<refresh_tokensUpdateInput, refresh_tokensUncheckedUpdateInput>
    /**
     * Choose, which refresh_tokens to update.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens updateMany
   */
  export type refresh_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update refresh_tokens.
     */
    data: XOR<refresh_tokensUpdateManyMutationInput, refresh_tokensUncheckedUpdateManyInput>
    /**
     * Filter which refresh_tokens to update
     */
    where?: refresh_tokensWhereInput
    /**
     * Limit how many refresh_tokens to update.
     */
    limit?: number
  }

  /**
   * refresh_tokens updateManyAndReturn
   */
  export type refresh_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * The data used to update refresh_tokens.
     */
    data: XOR<refresh_tokensUpdateManyMutationInput, refresh_tokensUncheckedUpdateManyInput>
    /**
     * Filter which refresh_tokens to update
     */
    where?: refresh_tokensWhereInput
    /**
     * Limit how many refresh_tokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * refresh_tokens upsert
   */
  export type refresh_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The filter to search for the refresh_tokens to update in case it exists.
     */
    where: refresh_tokensWhereUniqueInput
    /**
     * In case the refresh_tokens found by the `where` argument doesn't exist, create a new refresh_tokens with this data.
     */
    create: XOR<refresh_tokensCreateInput, refresh_tokensUncheckedCreateInput>
    /**
     * In case the refresh_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<refresh_tokensUpdateInput, refresh_tokensUncheckedUpdateInput>
  }

  /**
   * refresh_tokens delete
   */
  export type refresh_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter which refresh_tokens to delete.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens deleteMany
   */
  export type refresh_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refresh_tokens to delete
     */
    where?: refresh_tokensWhereInput
    /**
     * Limit how many refresh_tokens to delete.
     */
    limit?: number
  }

  /**
   * refresh_tokens without action
   */
  export type refresh_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
  }


  /**
   * Model solicitacoes_cartao
   */

  export type AggregateSolicitacoes_cartao = {
    _count: Solicitacoes_cartaoCountAggregateOutputType | null
    _avg: Solicitacoes_cartaoAvgAggregateOutputType | null
    _sum: Solicitacoes_cartaoSumAggregateOutputType | null
    _min: Solicitacoes_cartaoMinAggregateOutputType | null
    _max: Solicitacoes_cartaoMaxAggregateOutputType | null
  }

  export type Solicitacoes_cartaoAvgAggregateOutputType = {
    quantidade: number | null
  }

  export type Solicitacoes_cartaoSumAggregateOutputType = {
    quantidade: number | null
  }

  export type Solicitacoes_cartaoMinAggregateOutputType = {
    id: string | null
    quantidade: number | null
    status: $Enums.SolicitacaoStatus | null
    observacoes: string | null
    dataAprovacao: Date | null
    dataEnvio: Date | null
    dataEntrega: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    estabelecimentoId: string | null
    franqueadoId: string | null
  }

  export type Solicitacoes_cartaoMaxAggregateOutputType = {
    id: string | null
    quantidade: number | null
    status: $Enums.SolicitacaoStatus | null
    observacoes: string | null
    dataAprovacao: Date | null
    dataEnvio: Date | null
    dataEntrega: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    estabelecimentoId: string | null
    franqueadoId: string | null
  }

  export type Solicitacoes_cartaoCountAggregateOutputType = {
    id: number
    quantidade: number
    status: number
    observacoes: number
    dataAprovacao: number
    dataEnvio: number
    dataEntrega: number
    createdAt: number
    updatedAt: number
    estabelecimentoId: number
    franqueadoId: number
    _all: number
  }


  export type Solicitacoes_cartaoAvgAggregateInputType = {
    quantidade?: true
  }

  export type Solicitacoes_cartaoSumAggregateInputType = {
    quantidade?: true
  }

  export type Solicitacoes_cartaoMinAggregateInputType = {
    id?: true
    quantidade?: true
    status?: true
    observacoes?: true
    dataAprovacao?: true
    dataEnvio?: true
    dataEntrega?: true
    createdAt?: true
    updatedAt?: true
    estabelecimentoId?: true
    franqueadoId?: true
  }

  export type Solicitacoes_cartaoMaxAggregateInputType = {
    id?: true
    quantidade?: true
    status?: true
    observacoes?: true
    dataAprovacao?: true
    dataEnvio?: true
    dataEntrega?: true
    createdAt?: true
    updatedAt?: true
    estabelecimentoId?: true
    franqueadoId?: true
  }

  export type Solicitacoes_cartaoCountAggregateInputType = {
    id?: true
    quantidade?: true
    status?: true
    observacoes?: true
    dataAprovacao?: true
    dataEnvio?: true
    dataEntrega?: true
    createdAt?: true
    updatedAt?: true
    estabelecimentoId?: true
    franqueadoId?: true
    _all?: true
  }

  export type Solicitacoes_cartaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which solicitacoes_cartao to aggregate.
     */
    where?: solicitacoes_cartaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacoes_cartaos to fetch.
     */
    orderBy?: solicitacoes_cartaoOrderByWithRelationInput | solicitacoes_cartaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: solicitacoes_cartaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacoes_cartaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacoes_cartaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned solicitacoes_cartaos
    **/
    _count?: true | Solicitacoes_cartaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Solicitacoes_cartaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Solicitacoes_cartaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Solicitacoes_cartaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Solicitacoes_cartaoMaxAggregateInputType
  }

  export type GetSolicitacoes_cartaoAggregateType<T extends Solicitacoes_cartaoAggregateArgs> = {
        [P in keyof T & keyof AggregateSolicitacoes_cartao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSolicitacoes_cartao[P]>
      : GetScalarType<T[P], AggregateSolicitacoes_cartao[P]>
  }




  export type solicitacoes_cartaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: solicitacoes_cartaoWhereInput
    orderBy?: solicitacoes_cartaoOrderByWithAggregationInput | solicitacoes_cartaoOrderByWithAggregationInput[]
    by: Solicitacoes_cartaoScalarFieldEnum[] | Solicitacoes_cartaoScalarFieldEnum
    having?: solicitacoes_cartaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Solicitacoes_cartaoCountAggregateInputType | true
    _avg?: Solicitacoes_cartaoAvgAggregateInputType
    _sum?: Solicitacoes_cartaoSumAggregateInputType
    _min?: Solicitacoes_cartaoMinAggregateInputType
    _max?: Solicitacoes_cartaoMaxAggregateInputType
  }

  export type Solicitacoes_cartaoGroupByOutputType = {
    id: string
    quantidade: number
    status: $Enums.SolicitacaoStatus
    observacoes: string | null
    dataAprovacao: Date | null
    dataEnvio: Date | null
    dataEntrega: Date | null
    createdAt: Date
    updatedAt: Date
    estabelecimentoId: string
    franqueadoId: string
    _count: Solicitacoes_cartaoCountAggregateOutputType | null
    _avg: Solicitacoes_cartaoAvgAggregateOutputType | null
    _sum: Solicitacoes_cartaoSumAggregateOutputType | null
    _min: Solicitacoes_cartaoMinAggregateOutputType | null
    _max: Solicitacoes_cartaoMaxAggregateOutputType | null
  }

  type GetSolicitacoes_cartaoGroupByPayload<T extends solicitacoes_cartaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Solicitacoes_cartaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Solicitacoes_cartaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Solicitacoes_cartaoGroupByOutputType[P]>
            : GetScalarType<T[P], Solicitacoes_cartaoGroupByOutputType[P]>
        }
      >
    >


  export type solicitacoes_cartaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantidade?: boolean
    status?: boolean
    observacoes?: boolean
    dataAprovacao?: boolean
    dataEnvio?: boolean
    dataEntrega?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    estabelecimentoId?: boolean
    franqueadoId?: boolean
    logs?: boolean | solicitacoes_cartao$logsArgs<ExtArgs>
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    _count?: boolean | Solicitacoes_cartaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["solicitacoes_cartao"]>

  export type solicitacoes_cartaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantidade?: boolean
    status?: boolean
    observacoes?: boolean
    dataAprovacao?: boolean
    dataEnvio?: boolean
    dataEntrega?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    estabelecimentoId?: boolean
    franqueadoId?: boolean
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["solicitacoes_cartao"]>

  export type solicitacoes_cartaoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantidade?: boolean
    status?: boolean
    observacoes?: boolean
    dataAprovacao?: boolean
    dataEnvio?: boolean
    dataEntrega?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    estabelecimentoId?: boolean
    franqueadoId?: boolean
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["solicitacoes_cartao"]>

  export type solicitacoes_cartaoSelectScalar = {
    id?: boolean
    quantidade?: boolean
    status?: boolean
    observacoes?: boolean
    dataAprovacao?: boolean
    dataEnvio?: boolean
    dataEntrega?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    estabelecimentoId?: boolean
    franqueadoId?: boolean
  }

  export type solicitacoes_cartaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "quantidade" | "status" | "observacoes" | "dataAprovacao" | "dataEnvio" | "dataEntrega" | "createdAt" | "updatedAt" | "estabelecimentoId" | "franqueadoId", ExtArgs["result"]["solicitacoes_cartao"]>
  export type solicitacoes_cartaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logs?: boolean | solicitacoes_cartao$logsArgs<ExtArgs>
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
    _count?: boolean | Solicitacoes_cartaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type solicitacoes_cartaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }
  export type solicitacoes_cartaoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    franqueados?: boolean | franqueadosDefaultArgs<ExtArgs>
  }

  export type $solicitacoes_cartaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "solicitacoes_cartao"
    objects: {
      logs: Prisma.$logsPayload<ExtArgs>[]
      estabelecimentos: Prisma.$estabelecimentosPayload<ExtArgs>
      franqueados: Prisma.$franqueadosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      quantidade: number
      status: $Enums.SolicitacaoStatus
      observacoes: string | null
      dataAprovacao: Date | null
      dataEnvio: Date | null
      dataEntrega: Date | null
      createdAt: Date
      updatedAt: Date
      estabelecimentoId: string
      franqueadoId: string
    }, ExtArgs["result"]["solicitacoes_cartao"]>
    composites: {}
  }

  type solicitacoes_cartaoGetPayload<S extends boolean | null | undefined | solicitacoes_cartaoDefaultArgs> = $Result.GetResult<Prisma.$solicitacoes_cartaoPayload, S>

  type solicitacoes_cartaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<solicitacoes_cartaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Solicitacoes_cartaoCountAggregateInputType | true
    }

  export interface solicitacoes_cartaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['solicitacoes_cartao'], meta: { name: 'solicitacoes_cartao' } }
    /**
     * Find zero or one Solicitacoes_cartao that matches the filter.
     * @param {solicitacoes_cartaoFindUniqueArgs} args - Arguments to find a Solicitacoes_cartao
     * @example
     * // Get one Solicitacoes_cartao
     * const solicitacoes_cartao = await prisma.solicitacoes_cartao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends solicitacoes_cartaoFindUniqueArgs>(args: SelectSubset<T, solicitacoes_cartaoFindUniqueArgs<ExtArgs>>): Prisma__solicitacoes_cartaoClient<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Solicitacoes_cartao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {solicitacoes_cartaoFindUniqueOrThrowArgs} args - Arguments to find a Solicitacoes_cartao
     * @example
     * // Get one Solicitacoes_cartao
     * const solicitacoes_cartao = await prisma.solicitacoes_cartao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends solicitacoes_cartaoFindUniqueOrThrowArgs>(args: SelectSubset<T, solicitacoes_cartaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__solicitacoes_cartaoClient<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Solicitacoes_cartao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacoes_cartaoFindFirstArgs} args - Arguments to find a Solicitacoes_cartao
     * @example
     * // Get one Solicitacoes_cartao
     * const solicitacoes_cartao = await prisma.solicitacoes_cartao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends solicitacoes_cartaoFindFirstArgs>(args?: SelectSubset<T, solicitacoes_cartaoFindFirstArgs<ExtArgs>>): Prisma__solicitacoes_cartaoClient<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Solicitacoes_cartao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacoes_cartaoFindFirstOrThrowArgs} args - Arguments to find a Solicitacoes_cartao
     * @example
     * // Get one Solicitacoes_cartao
     * const solicitacoes_cartao = await prisma.solicitacoes_cartao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends solicitacoes_cartaoFindFirstOrThrowArgs>(args?: SelectSubset<T, solicitacoes_cartaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__solicitacoes_cartaoClient<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Solicitacoes_cartaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacoes_cartaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Solicitacoes_cartaos
     * const solicitacoes_cartaos = await prisma.solicitacoes_cartao.findMany()
     * 
     * // Get first 10 Solicitacoes_cartaos
     * const solicitacoes_cartaos = await prisma.solicitacoes_cartao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const solicitacoes_cartaoWithIdOnly = await prisma.solicitacoes_cartao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends solicitacoes_cartaoFindManyArgs>(args?: SelectSubset<T, solicitacoes_cartaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Solicitacoes_cartao.
     * @param {solicitacoes_cartaoCreateArgs} args - Arguments to create a Solicitacoes_cartao.
     * @example
     * // Create one Solicitacoes_cartao
     * const Solicitacoes_cartao = await prisma.solicitacoes_cartao.create({
     *   data: {
     *     // ... data to create a Solicitacoes_cartao
     *   }
     * })
     * 
     */
    create<T extends solicitacoes_cartaoCreateArgs>(args: SelectSubset<T, solicitacoes_cartaoCreateArgs<ExtArgs>>): Prisma__solicitacoes_cartaoClient<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Solicitacoes_cartaos.
     * @param {solicitacoes_cartaoCreateManyArgs} args - Arguments to create many Solicitacoes_cartaos.
     * @example
     * // Create many Solicitacoes_cartaos
     * const solicitacoes_cartao = await prisma.solicitacoes_cartao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends solicitacoes_cartaoCreateManyArgs>(args?: SelectSubset<T, solicitacoes_cartaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Solicitacoes_cartaos and returns the data saved in the database.
     * @param {solicitacoes_cartaoCreateManyAndReturnArgs} args - Arguments to create many Solicitacoes_cartaos.
     * @example
     * // Create many Solicitacoes_cartaos
     * const solicitacoes_cartao = await prisma.solicitacoes_cartao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Solicitacoes_cartaos and only return the `id`
     * const solicitacoes_cartaoWithIdOnly = await prisma.solicitacoes_cartao.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends solicitacoes_cartaoCreateManyAndReturnArgs>(args?: SelectSubset<T, solicitacoes_cartaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Solicitacoes_cartao.
     * @param {solicitacoes_cartaoDeleteArgs} args - Arguments to delete one Solicitacoes_cartao.
     * @example
     * // Delete one Solicitacoes_cartao
     * const Solicitacoes_cartao = await prisma.solicitacoes_cartao.delete({
     *   where: {
     *     // ... filter to delete one Solicitacoes_cartao
     *   }
     * })
     * 
     */
    delete<T extends solicitacoes_cartaoDeleteArgs>(args: SelectSubset<T, solicitacoes_cartaoDeleteArgs<ExtArgs>>): Prisma__solicitacoes_cartaoClient<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Solicitacoes_cartao.
     * @param {solicitacoes_cartaoUpdateArgs} args - Arguments to update one Solicitacoes_cartao.
     * @example
     * // Update one Solicitacoes_cartao
     * const solicitacoes_cartao = await prisma.solicitacoes_cartao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends solicitacoes_cartaoUpdateArgs>(args: SelectSubset<T, solicitacoes_cartaoUpdateArgs<ExtArgs>>): Prisma__solicitacoes_cartaoClient<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Solicitacoes_cartaos.
     * @param {solicitacoes_cartaoDeleteManyArgs} args - Arguments to filter Solicitacoes_cartaos to delete.
     * @example
     * // Delete a few Solicitacoes_cartaos
     * const { count } = await prisma.solicitacoes_cartao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends solicitacoes_cartaoDeleteManyArgs>(args?: SelectSubset<T, solicitacoes_cartaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Solicitacoes_cartaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacoes_cartaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Solicitacoes_cartaos
     * const solicitacoes_cartao = await prisma.solicitacoes_cartao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends solicitacoes_cartaoUpdateManyArgs>(args: SelectSubset<T, solicitacoes_cartaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Solicitacoes_cartaos and returns the data updated in the database.
     * @param {solicitacoes_cartaoUpdateManyAndReturnArgs} args - Arguments to update many Solicitacoes_cartaos.
     * @example
     * // Update many Solicitacoes_cartaos
     * const solicitacoes_cartao = await prisma.solicitacoes_cartao.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Solicitacoes_cartaos and only return the `id`
     * const solicitacoes_cartaoWithIdOnly = await prisma.solicitacoes_cartao.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends solicitacoes_cartaoUpdateManyAndReturnArgs>(args: SelectSubset<T, solicitacoes_cartaoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Solicitacoes_cartao.
     * @param {solicitacoes_cartaoUpsertArgs} args - Arguments to update or create a Solicitacoes_cartao.
     * @example
     * // Update or create a Solicitacoes_cartao
     * const solicitacoes_cartao = await prisma.solicitacoes_cartao.upsert({
     *   create: {
     *     // ... data to create a Solicitacoes_cartao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Solicitacoes_cartao we want to update
     *   }
     * })
     */
    upsert<T extends solicitacoes_cartaoUpsertArgs>(args: SelectSubset<T, solicitacoes_cartaoUpsertArgs<ExtArgs>>): Prisma__solicitacoes_cartaoClient<$Result.GetResult<Prisma.$solicitacoes_cartaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Solicitacoes_cartaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacoes_cartaoCountArgs} args - Arguments to filter Solicitacoes_cartaos to count.
     * @example
     * // Count the number of Solicitacoes_cartaos
     * const count = await prisma.solicitacoes_cartao.count({
     *   where: {
     *     // ... the filter for the Solicitacoes_cartaos we want to count
     *   }
     * })
    **/
    count<T extends solicitacoes_cartaoCountArgs>(
      args?: Subset<T, solicitacoes_cartaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Solicitacoes_cartaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Solicitacoes_cartao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Solicitacoes_cartaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Solicitacoes_cartaoAggregateArgs>(args: Subset<T, Solicitacoes_cartaoAggregateArgs>): Prisma.PrismaPromise<GetSolicitacoes_cartaoAggregateType<T>>

    /**
     * Group by Solicitacoes_cartao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {solicitacoes_cartaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends solicitacoes_cartaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: solicitacoes_cartaoGroupByArgs['orderBy'] }
        : { orderBy?: solicitacoes_cartaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, solicitacoes_cartaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSolicitacoes_cartaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the solicitacoes_cartao model
   */
  readonly fields: solicitacoes_cartaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for solicitacoes_cartao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__solicitacoes_cartaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    logs<T extends solicitacoes_cartao$logsArgs<ExtArgs> = {}>(args?: Subset<T, solicitacoes_cartao$logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estabelecimentos<T extends estabelecimentosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentosDefaultArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    franqueados<T extends franqueadosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, franqueadosDefaultArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the solicitacoes_cartao model
   */
  interface solicitacoes_cartaoFieldRefs {
    readonly id: FieldRef<"solicitacoes_cartao", 'String'>
    readonly quantidade: FieldRef<"solicitacoes_cartao", 'Int'>
    readonly status: FieldRef<"solicitacoes_cartao", 'SolicitacaoStatus'>
    readonly observacoes: FieldRef<"solicitacoes_cartao", 'String'>
    readonly dataAprovacao: FieldRef<"solicitacoes_cartao", 'DateTime'>
    readonly dataEnvio: FieldRef<"solicitacoes_cartao", 'DateTime'>
    readonly dataEntrega: FieldRef<"solicitacoes_cartao", 'DateTime'>
    readonly createdAt: FieldRef<"solicitacoes_cartao", 'DateTime'>
    readonly updatedAt: FieldRef<"solicitacoes_cartao", 'DateTime'>
    readonly estabelecimentoId: FieldRef<"solicitacoes_cartao", 'String'>
    readonly franqueadoId: FieldRef<"solicitacoes_cartao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * solicitacoes_cartao findUnique
   */
  export type solicitacoes_cartaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    /**
     * Filter, which solicitacoes_cartao to fetch.
     */
    where: solicitacoes_cartaoWhereUniqueInput
  }

  /**
   * solicitacoes_cartao findUniqueOrThrow
   */
  export type solicitacoes_cartaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    /**
     * Filter, which solicitacoes_cartao to fetch.
     */
    where: solicitacoes_cartaoWhereUniqueInput
  }

  /**
   * solicitacoes_cartao findFirst
   */
  export type solicitacoes_cartaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    /**
     * Filter, which solicitacoes_cartao to fetch.
     */
    where?: solicitacoes_cartaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacoes_cartaos to fetch.
     */
    orderBy?: solicitacoes_cartaoOrderByWithRelationInput | solicitacoes_cartaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for solicitacoes_cartaos.
     */
    cursor?: solicitacoes_cartaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacoes_cartaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacoes_cartaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of solicitacoes_cartaos.
     */
    distinct?: Solicitacoes_cartaoScalarFieldEnum | Solicitacoes_cartaoScalarFieldEnum[]
  }

  /**
   * solicitacoes_cartao findFirstOrThrow
   */
  export type solicitacoes_cartaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    /**
     * Filter, which solicitacoes_cartao to fetch.
     */
    where?: solicitacoes_cartaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacoes_cartaos to fetch.
     */
    orderBy?: solicitacoes_cartaoOrderByWithRelationInput | solicitacoes_cartaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for solicitacoes_cartaos.
     */
    cursor?: solicitacoes_cartaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacoes_cartaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacoes_cartaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of solicitacoes_cartaos.
     */
    distinct?: Solicitacoes_cartaoScalarFieldEnum | Solicitacoes_cartaoScalarFieldEnum[]
  }

  /**
   * solicitacoes_cartao findMany
   */
  export type solicitacoes_cartaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    /**
     * Filter, which solicitacoes_cartaos to fetch.
     */
    where?: solicitacoes_cartaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of solicitacoes_cartaos to fetch.
     */
    orderBy?: solicitacoes_cartaoOrderByWithRelationInput | solicitacoes_cartaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing solicitacoes_cartaos.
     */
    cursor?: solicitacoes_cartaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` solicitacoes_cartaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` solicitacoes_cartaos.
     */
    skip?: number
    distinct?: Solicitacoes_cartaoScalarFieldEnum | Solicitacoes_cartaoScalarFieldEnum[]
  }

  /**
   * solicitacoes_cartao create
   */
  export type solicitacoes_cartaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    /**
     * The data needed to create a solicitacoes_cartao.
     */
    data: XOR<solicitacoes_cartaoCreateInput, solicitacoes_cartaoUncheckedCreateInput>
  }

  /**
   * solicitacoes_cartao createMany
   */
  export type solicitacoes_cartaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many solicitacoes_cartaos.
     */
    data: solicitacoes_cartaoCreateManyInput | solicitacoes_cartaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * solicitacoes_cartao createManyAndReturn
   */
  export type solicitacoes_cartaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * The data used to create many solicitacoes_cartaos.
     */
    data: solicitacoes_cartaoCreateManyInput | solicitacoes_cartaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * solicitacoes_cartao update
   */
  export type solicitacoes_cartaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    /**
     * The data needed to update a solicitacoes_cartao.
     */
    data: XOR<solicitacoes_cartaoUpdateInput, solicitacoes_cartaoUncheckedUpdateInput>
    /**
     * Choose, which solicitacoes_cartao to update.
     */
    where: solicitacoes_cartaoWhereUniqueInput
  }

  /**
   * solicitacoes_cartao updateMany
   */
  export type solicitacoes_cartaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update solicitacoes_cartaos.
     */
    data: XOR<solicitacoes_cartaoUpdateManyMutationInput, solicitacoes_cartaoUncheckedUpdateManyInput>
    /**
     * Filter which solicitacoes_cartaos to update
     */
    where?: solicitacoes_cartaoWhereInput
    /**
     * Limit how many solicitacoes_cartaos to update.
     */
    limit?: number
  }

  /**
   * solicitacoes_cartao updateManyAndReturn
   */
  export type solicitacoes_cartaoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * The data used to update solicitacoes_cartaos.
     */
    data: XOR<solicitacoes_cartaoUpdateManyMutationInput, solicitacoes_cartaoUncheckedUpdateManyInput>
    /**
     * Filter which solicitacoes_cartaos to update
     */
    where?: solicitacoes_cartaoWhereInput
    /**
     * Limit how many solicitacoes_cartaos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * solicitacoes_cartao upsert
   */
  export type solicitacoes_cartaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    /**
     * The filter to search for the solicitacoes_cartao to update in case it exists.
     */
    where: solicitacoes_cartaoWhereUniqueInput
    /**
     * In case the solicitacoes_cartao found by the `where` argument doesn't exist, create a new solicitacoes_cartao with this data.
     */
    create: XOR<solicitacoes_cartaoCreateInput, solicitacoes_cartaoUncheckedCreateInput>
    /**
     * In case the solicitacoes_cartao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<solicitacoes_cartaoUpdateInput, solicitacoes_cartaoUncheckedUpdateInput>
  }

  /**
   * solicitacoes_cartao delete
   */
  export type solicitacoes_cartaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
    /**
     * Filter which solicitacoes_cartao to delete.
     */
    where: solicitacoes_cartaoWhereUniqueInput
  }

  /**
   * solicitacoes_cartao deleteMany
   */
  export type solicitacoes_cartaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which solicitacoes_cartaos to delete
     */
    where?: solicitacoes_cartaoWhereInput
    /**
     * Limit how many solicitacoes_cartaos to delete.
     */
    limit?: number
  }

  /**
   * solicitacoes_cartao.logs
   */
  export type solicitacoes_cartao$logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    where?: logsWhereInput
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    cursor?: logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * solicitacoes_cartao without action
   */
  export type solicitacoes_cartaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the solicitacoes_cartao
     */
    select?: solicitacoes_cartaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the solicitacoes_cartao
     */
    omit?: solicitacoes_cartaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: solicitacoes_cartaoInclude<ExtArgs> | null
  }


  /**
   * Model transacoes
   */

  export type AggregateTransacoes = {
    _count: TransacoesCountAggregateOutputType | null
    _avg: TransacoesAvgAggregateOutputType | null
    _sum: TransacoesSumAggregateOutputType | null
    _min: TransacoesMinAggregateOutputType | null
    _max: TransacoesMaxAggregateOutputType | null
  }

  export type TransacoesAvgAggregateOutputType = {
    valor: number | null
  }

  export type TransacoesSumAggregateOutputType = {
    valor: number | null
  }

  export type TransacoesMinAggregateOutputType = {
    id: string | null
    tipo: $Enums.TransacaoTipo | null
    valor: number | null
    status: $Enums.TransacaoStatus | null
    usuarioNome: string | null
    usuarioTelefone: string | null
    comprovante: string | null
    createdAt: Date | null
    updatedAt: Date | null
    cartaoId: string | null
    estabelecimentoId: string | null
  }

  export type TransacoesMaxAggregateOutputType = {
    id: string | null
    tipo: $Enums.TransacaoTipo | null
    valor: number | null
    status: $Enums.TransacaoStatus | null
    usuarioNome: string | null
    usuarioTelefone: string | null
    comprovante: string | null
    createdAt: Date | null
    updatedAt: Date | null
    cartaoId: string | null
    estabelecimentoId: string | null
  }

  export type TransacoesCountAggregateOutputType = {
    id: number
    tipo: number
    valor: number
    status: number
    usuarioNome: number
    usuarioTelefone: number
    comprovante: number
    createdAt: number
    updatedAt: number
    cartaoId: number
    estabelecimentoId: number
    _all: number
  }


  export type TransacoesAvgAggregateInputType = {
    valor?: true
  }

  export type TransacoesSumAggregateInputType = {
    valor?: true
  }

  export type TransacoesMinAggregateInputType = {
    id?: true
    tipo?: true
    valor?: true
    status?: true
    usuarioNome?: true
    usuarioTelefone?: true
    comprovante?: true
    createdAt?: true
    updatedAt?: true
    cartaoId?: true
    estabelecimentoId?: true
  }

  export type TransacoesMaxAggregateInputType = {
    id?: true
    tipo?: true
    valor?: true
    status?: true
    usuarioNome?: true
    usuarioTelefone?: true
    comprovante?: true
    createdAt?: true
    updatedAt?: true
    cartaoId?: true
    estabelecimentoId?: true
  }

  export type TransacoesCountAggregateInputType = {
    id?: true
    tipo?: true
    valor?: true
    status?: true
    usuarioNome?: true
    usuarioTelefone?: true
    comprovante?: true
    createdAt?: true
    updatedAt?: true
    cartaoId?: true
    estabelecimentoId?: true
    _all?: true
  }

  export type TransacoesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transacoes to aggregate.
     */
    where?: transacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transacoes to fetch.
     */
    orderBy?: transacoesOrderByWithRelationInput | transacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: transacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned transacoes
    **/
    _count?: true | TransacoesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransacoesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransacoesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransacoesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransacoesMaxAggregateInputType
  }

  export type GetTransacoesAggregateType<T extends TransacoesAggregateArgs> = {
        [P in keyof T & keyof AggregateTransacoes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransacoes[P]>
      : GetScalarType<T[P], AggregateTransacoes[P]>
  }




  export type transacoesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transacoesWhereInput
    orderBy?: transacoesOrderByWithAggregationInput | transacoesOrderByWithAggregationInput[]
    by: TransacoesScalarFieldEnum[] | TransacoesScalarFieldEnum
    having?: transacoesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransacoesCountAggregateInputType | true
    _avg?: TransacoesAvgAggregateInputType
    _sum?: TransacoesSumAggregateInputType
    _min?: TransacoesMinAggregateInputType
    _max?: TransacoesMaxAggregateInputType
  }

  export type TransacoesGroupByOutputType = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status: $Enums.TransacaoStatus
    usuarioNome: string | null
    usuarioTelefone: string | null
    comprovante: string | null
    createdAt: Date
    updatedAt: Date
    cartaoId: string
    estabelecimentoId: string
    _count: TransacoesCountAggregateOutputType | null
    _avg: TransacoesAvgAggregateOutputType | null
    _sum: TransacoesSumAggregateOutputType | null
    _min: TransacoesMinAggregateOutputType | null
    _max: TransacoesMaxAggregateOutputType | null
  }

  type GetTransacoesGroupByPayload<T extends transacoesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransacoesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransacoesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransacoesGroupByOutputType[P]>
            : GetScalarType<T[P], TransacoesGroupByOutputType[P]>
        }
      >
    >


  export type transacoesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    valor?: boolean
    status?: boolean
    usuarioNome?: boolean
    usuarioTelefone?: boolean
    comprovante?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cartaoId?: boolean
    estabelecimentoId?: boolean
    comissoes?: boolean | transacoes$comissoesArgs<ExtArgs>
    logs?: boolean | transacoes$logsArgs<ExtArgs>
    cartoes?: boolean | cartoesDefaultArgs<ExtArgs>
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    _count?: boolean | TransacoesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transacoes"]>

  export type transacoesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    valor?: boolean
    status?: boolean
    usuarioNome?: boolean
    usuarioTelefone?: boolean
    comprovante?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cartaoId?: boolean
    estabelecimentoId?: boolean
    cartoes?: boolean | cartoesDefaultArgs<ExtArgs>
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transacoes"]>

  export type transacoesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    valor?: boolean
    status?: boolean
    usuarioNome?: boolean
    usuarioTelefone?: boolean
    comprovante?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cartaoId?: boolean
    estabelecimentoId?: boolean
    cartoes?: boolean | cartoesDefaultArgs<ExtArgs>
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transacoes"]>

  export type transacoesSelectScalar = {
    id?: boolean
    tipo?: boolean
    valor?: boolean
    status?: boolean
    usuarioNome?: boolean
    usuarioTelefone?: boolean
    comprovante?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cartaoId?: boolean
    estabelecimentoId?: boolean
  }

  export type transacoesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tipo" | "valor" | "status" | "usuarioNome" | "usuarioTelefone" | "comprovante" | "createdAt" | "updatedAt" | "cartaoId" | "estabelecimentoId", ExtArgs["result"]["transacoes"]>
  export type transacoesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comissoes?: boolean | transacoes$comissoesArgs<ExtArgs>
    logs?: boolean | transacoes$logsArgs<ExtArgs>
    cartoes?: boolean | cartoesDefaultArgs<ExtArgs>
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
    _count?: boolean | TransacoesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type transacoesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cartoes?: boolean | cartoesDefaultArgs<ExtArgs>
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
  }
  export type transacoesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cartoes?: boolean | cartoesDefaultArgs<ExtArgs>
    estabelecimentos?: boolean | estabelecimentosDefaultArgs<ExtArgs>
  }

  export type $transacoesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "transacoes"
    objects: {
      comissoes: Prisma.$comissoesPayload<ExtArgs>[]
      logs: Prisma.$logsPayload<ExtArgs>[]
      cartoes: Prisma.$cartoesPayload<ExtArgs>
      estabelecimentos: Prisma.$estabelecimentosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tipo: $Enums.TransacaoTipo
      valor: number
      status: $Enums.TransacaoStatus
      usuarioNome: string | null
      usuarioTelefone: string | null
      comprovante: string | null
      createdAt: Date
      updatedAt: Date
      cartaoId: string
      estabelecimentoId: string
    }, ExtArgs["result"]["transacoes"]>
    composites: {}
  }

  type transacoesGetPayload<S extends boolean | null | undefined | transacoesDefaultArgs> = $Result.GetResult<Prisma.$transacoesPayload, S>

  type transacoesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<transacoesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransacoesCountAggregateInputType | true
    }

  export interface transacoesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['transacoes'], meta: { name: 'transacoes' } }
    /**
     * Find zero or one Transacoes that matches the filter.
     * @param {transacoesFindUniqueArgs} args - Arguments to find a Transacoes
     * @example
     * // Get one Transacoes
     * const transacoes = await prisma.transacoes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends transacoesFindUniqueArgs>(args: SelectSubset<T, transacoesFindUniqueArgs<ExtArgs>>): Prisma__transacoesClient<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transacoes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {transacoesFindUniqueOrThrowArgs} args - Arguments to find a Transacoes
     * @example
     * // Get one Transacoes
     * const transacoes = await prisma.transacoes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends transacoesFindUniqueOrThrowArgs>(args: SelectSubset<T, transacoesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__transacoesClient<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transacoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transacoesFindFirstArgs} args - Arguments to find a Transacoes
     * @example
     * // Get one Transacoes
     * const transacoes = await prisma.transacoes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends transacoesFindFirstArgs>(args?: SelectSubset<T, transacoesFindFirstArgs<ExtArgs>>): Prisma__transacoesClient<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transacoes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transacoesFindFirstOrThrowArgs} args - Arguments to find a Transacoes
     * @example
     * // Get one Transacoes
     * const transacoes = await prisma.transacoes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends transacoesFindFirstOrThrowArgs>(args?: SelectSubset<T, transacoesFindFirstOrThrowArgs<ExtArgs>>): Prisma__transacoesClient<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transacoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transacoesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transacoes
     * const transacoes = await prisma.transacoes.findMany()
     * 
     * // Get first 10 Transacoes
     * const transacoes = await prisma.transacoes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transacoesWithIdOnly = await prisma.transacoes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends transacoesFindManyArgs>(args?: SelectSubset<T, transacoesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transacoes.
     * @param {transacoesCreateArgs} args - Arguments to create a Transacoes.
     * @example
     * // Create one Transacoes
     * const Transacoes = await prisma.transacoes.create({
     *   data: {
     *     // ... data to create a Transacoes
     *   }
     * })
     * 
     */
    create<T extends transacoesCreateArgs>(args: SelectSubset<T, transacoesCreateArgs<ExtArgs>>): Prisma__transacoesClient<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transacoes.
     * @param {transacoesCreateManyArgs} args - Arguments to create many Transacoes.
     * @example
     * // Create many Transacoes
     * const transacoes = await prisma.transacoes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends transacoesCreateManyArgs>(args?: SelectSubset<T, transacoesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transacoes and returns the data saved in the database.
     * @param {transacoesCreateManyAndReturnArgs} args - Arguments to create many Transacoes.
     * @example
     * // Create many Transacoes
     * const transacoes = await prisma.transacoes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transacoes and only return the `id`
     * const transacoesWithIdOnly = await prisma.transacoes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends transacoesCreateManyAndReturnArgs>(args?: SelectSubset<T, transacoesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transacoes.
     * @param {transacoesDeleteArgs} args - Arguments to delete one Transacoes.
     * @example
     * // Delete one Transacoes
     * const Transacoes = await prisma.transacoes.delete({
     *   where: {
     *     // ... filter to delete one Transacoes
     *   }
     * })
     * 
     */
    delete<T extends transacoesDeleteArgs>(args: SelectSubset<T, transacoesDeleteArgs<ExtArgs>>): Prisma__transacoesClient<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transacoes.
     * @param {transacoesUpdateArgs} args - Arguments to update one Transacoes.
     * @example
     * // Update one Transacoes
     * const transacoes = await prisma.transacoes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends transacoesUpdateArgs>(args: SelectSubset<T, transacoesUpdateArgs<ExtArgs>>): Prisma__transacoesClient<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transacoes.
     * @param {transacoesDeleteManyArgs} args - Arguments to filter Transacoes to delete.
     * @example
     * // Delete a few Transacoes
     * const { count } = await prisma.transacoes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends transacoesDeleteManyArgs>(args?: SelectSubset<T, transacoesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transacoesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transacoes
     * const transacoes = await prisma.transacoes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends transacoesUpdateManyArgs>(args: SelectSubset<T, transacoesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transacoes and returns the data updated in the database.
     * @param {transacoesUpdateManyAndReturnArgs} args - Arguments to update many Transacoes.
     * @example
     * // Update many Transacoes
     * const transacoes = await prisma.transacoes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transacoes and only return the `id`
     * const transacoesWithIdOnly = await prisma.transacoes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends transacoesUpdateManyAndReturnArgs>(args: SelectSubset<T, transacoesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transacoes.
     * @param {transacoesUpsertArgs} args - Arguments to update or create a Transacoes.
     * @example
     * // Update or create a Transacoes
     * const transacoes = await prisma.transacoes.upsert({
     *   create: {
     *     // ... data to create a Transacoes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transacoes we want to update
     *   }
     * })
     */
    upsert<T extends transacoesUpsertArgs>(args: SelectSubset<T, transacoesUpsertArgs<ExtArgs>>): Prisma__transacoesClient<$Result.GetResult<Prisma.$transacoesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transacoesCountArgs} args - Arguments to filter Transacoes to count.
     * @example
     * // Count the number of Transacoes
     * const count = await prisma.transacoes.count({
     *   where: {
     *     // ... the filter for the Transacoes we want to count
     *   }
     * })
    **/
    count<T extends transacoesCountArgs>(
      args?: Subset<T, transacoesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransacoesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransacoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransacoesAggregateArgs>(args: Subset<T, TransacoesAggregateArgs>): Prisma.PrismaPromise<GetTransacoesAggregateType<T>>

    /**
     * Group by Transacoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transacoesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends transacoesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: transacoesGroupByArgs['orderBy'] }
        : { orderBy?: transacoesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, transacoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransacoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the transacoes model
   */
  readonly fields: transacoesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for transacoes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__transacoesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comissoes<T extends transacoes$comissoesArgs<ExtArgs> = {}>(args?: Subset<T, transacoes$comissoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comissoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    logs<T extends transacoes$logsArgs<ExtArgs> = {}>(args?: Subset<T, transacoes$logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cartoes<T extends cartoesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, cartoesDefaultArgs<ExtArgs>>): Prisma__cartoesClient<$Result.GetResult<Prisma.$cartoesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    estabelecimentos<T extends estabelecimentosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, estabelecimentosDefaultArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the transacoes model
   */
  interface transacoesFieldRefs {
    readonly id: FieldRef<"transacoes", 'String'>
    readonly tipo: FieldRef<"transacoes", 'TransacaoTipo'>
    readonly valor: FieldRef<"transacoes", 'Float'>
    readonly status: FieldRef<"transacoes", 'TransacaoStatus'>
    readonly usuarioNome: FieldRef<"transacoes", 'String'>
    readonly usuarioTelefone: FieldRef<"transacoes", 'String'>
    readonly comprovante: FieldRef<"transacoes", 'String'>
    readonly createdAt: FieldRef<"transacoes", 'DateTime'>
    readonly updatedAt: FieldRef<"transacoes", 'DateTime'>
    readonly cartaoId: FieldRef<"transacoes", 'String'>
    readonly estabelecimentoId: FieldRef<"transacoes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * transacoes findUnique
   */
  export type transacoesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    /**
     * Filter, which transacoes to fetch.
     */
    where: transacoesWhereUniqueInput
  }

  /**
   * transacoes findUniqueOrThrow
   */
  export type transacoesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    /**
     * Filter, which transacoes to fetch.
     */
    where: transacoesWhereUniqueInput
  }

  /**
   * transacoes findFirst
   */
  export type transacoesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    /**
     * Filter, which transacoes to fetch.
     */
    where?: transacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transacoes to fetch.
     */
    orderBy?: transacoesOrderByWithRelationInput | transacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transacoes.
     */
    cursor?: transacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transacoes.
     */
    distinct?: TransacoesScalarFieldEnum | TransacoesScalarFieldEnum[]
  }

  /**
   * transacoes findFirstOrThrow
   */
  export type transacoesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    /**
     * Filter, which transacoes to fetch.
     */
    where?: transacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transacoes to fetch.
     */
    orderBy?: transacoesOrderByWithRelationInput | transacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transacoes.
     */
    cursor?: transacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transacoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transacoes.
     */
    distinct?: TransacoesScalarFieldEnum | TransacoesScalarFieldEnum[]
  }

  /**
   * transacoes findMany
   */
  export type transacoesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    /**
     * Filter, which transacoes to fetch.
     */
    where?: transacoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transacoes to fetch.
     */
    orderBy?: transacoesOrderByWithRelationInput | transacoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing transacoes.
     */
    cursor?: transacoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transacoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transacoes.
     */
    skip?: number
    distinct?: TransacoesScalarFieldEnum | TransacoesScalarFieldEnum[]
  }

  /**
   * transacoes create
   */
  export type transacoesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    /**
     * The data needed to create a transacoes.
     */
    data: XOR<transacoesCreateInput, transacoesUncheckedCreateInput>
  }

  /**
   * transacoes createMany
   */
  export type transacoesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many transacoes.
     */
    data: transacoesCreateManyInput | transacoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * transacoes createManyAndReturn
   */
  export type transacoesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * The data used to create many transacoes.
     */
    data: transacoesCreateManyInput | transacoesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * transacoes update
   */
  export type transacoesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    /**
     * The data needed to update a transacoes.
     */
    data: XOR<transacoesUpdateInput, transacoesUncheckedUpdateInput>
    /**
     * Choose, which transacoes to update.
     */
    where: transacoesWhereUniqueInput
  }

  /**
   * transacoes updateMany
   */
  export type transacoesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update transacoes.
     */
    data: XOR<transacoesUpdateManyMutationInput, transacoesUncheckedUpdateManyInput>
    /**
     * Filter which transacoes to update
     */
    where?: transacoesWhereInput
    /**
     * Limit how many transacoes to update.
     */
    limit?: number
  }

  /**
   * transacoes updateManyAndReturn
   */
  export type transacoesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * The data used to update transacoes.
     */
    data: XOR<transacoesUpdateManyMutationInput, transacoesUncheckedUpdateManyInput>
    /**
     * Filter which transacoes to update
     */
    where?: transacoesWhereInput
    /**
     * Limit how many transacoes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * transacoes upsert
   */
  export type transacoesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    /**
     * The filter to search for the transacoes to update in case it exists.
     */
    where: transacoesWhereUniqueInput
    /**
     * In case the transacoes found by the `where` argument doesn't exist, create a new transacoes with this data.
     */
    create: XOR<transacoesCreateInput, transacoesUncheckedCreateInput>
    /**
     * In case the transacoes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<transacoesUpdateInput, transacoesUncheckedUpdateInput>
  }

  /**
   * transacoes delete
   */
  export type transacoesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
    /**
     * Filter which transacoes to delete.
     */
    where: transacoesWhereUniqueInput
  }

  /**
   * transacoes deleteMany
   */
  export type transacoesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transacoes to delete
     */
    where?: transacoesWhereInput
    /**
     * Limit how many transacoes to delete.
     */
    limit?: number
  }

  /**
   * transacoes.comissoes
   */
  export type transacoes$comissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comissoes
     */
    select?: comissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comissoes
     */
    omit?: comissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comissoesInclude<ExtArgs> | null
    where?: comissoesWhereInput
    orderBy?: comissoesOrderByWithRelationInput | comissoesOrderByWithRelationInput[]
    cursor?: comissoesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComissoesScalarFieldEnum | ComissoesScalarFieldEnum[]
  }

  /**
   * transacoes.logs
   */
  export type transacoes$logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    where?: logsWhereInput
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    cursor?: logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * transacoes without action
   */
  export type transacoesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transacoes
     */
    select?: transacoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transacoes
     */
    omit?: transacoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transacoesInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
    type: $Enums.UserType | null
    status: $Enums.Status | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoraId: string | null
    franqueadoId: string | null
    estabelecimentoId: string | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
    type: $Enums.UserType | null
    status: $Enums.Status | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    franqueadoraId: string | null
    franqueadoId: string | null
    estabelecimentoId: string | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    type: number
    status: number
    lastLogin: number
    createdAt: number
    updatedAt: number
    franqueadoraId: number
    franqueadoId: number
    estabelecimentoId: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    type?: true
    status?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    franqueadoraId?: true
    franqueadoId?: true
    estabelecimentoId?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    type?: true
    status?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    franqueadoraId?: true
    franqueadoId?: true
    estabelecimentoId?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    type?: true
    status?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    franqueadoraId?: true
    franqueadoId?: true
    estabelecimentoId?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status: $Enums.Status
    lastLogin: Date | null
    createdAt: Date
    updatedAt: Date
    franqueadoraId: string | null
    franqueadoId: string | null
    estabelecimentoId: string | null
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    type?: boolean
    status?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoraId?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    logs?: boolean | users$logsArgs<ExtArgs>
    refresh_tokens?: boolean | users$refresh_tokensArgs<ExtArgs>
    estabelecimentos?: boolean | users$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | users$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | users$franqueadorasArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    type?: boolean
    status?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoraId?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    estabelecimentos?: boolean | users$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | users$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | users$franqueadorasArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    type?: boolean
    status?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoraId?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
    estabelecimentos?: boolean | users$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | users$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | users$franqueadorasArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    type?: boolean
    status?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    franqueadoraId?: boolean
    franqueadoId?: boolean
    estabelecimentoId?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "password" | "type" | "status" | "lastLogin" | "createdAt" | "updatedAt" | "franqueadoraId" | "franqueadoId" | "estabelecimentoId", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logs?: boolean | users$logsArgs<ExtArgs>
    refresh_tokens?: boolean | users$refresh_tokensArgs<ExtArgs>
    estabelecimentos?: boolean | users$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | users$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | users$franqueadorasArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | users$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | users$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | users$franqueadorasArgs<ExtArgs>
  }
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estabelecimentos?: boolean | users$estabelecimentosArgs<ExtArgs>
    franqueados?: boolean | users$franqueadosArgs<ExtArgs>
    franqueadoras?: boolean | users$franqueadorasArgs<ExtArgs>
  }

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      logs: Prisma.$logsPayload<ExtArgs>[]
      refresh_tokens: Prisma.$refresh_tokensPayload<ExtArgs>[]
      estabelecimentos: Prisma.$estabelecimentosPayload<ExtArgs> | null
      franqueados: Prisma.$franqueadosPayload<ExtArgs> | null
      franqueadoras: Prisma.$franqueadorasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      email: string
      password: string
      type: $Enums.UserType
      status: $Enums.Status
      lastLogin: Date | null
      createdAt: Date
      updatedAt: Date
      franqueadoraId: string | null
      franqueadoId: string | null
      estabelecimentoId: string | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    logs<T extends users$logsArgs<ExtArgs> = {}>(args?: Subset<T, users$logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    refresh_tokens<T extends users$refresh_tokensArgs<ExtArgs> = {}>(args?: Subset<T, users$refresh_tokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estabelecimentos<T extends users$estabelecimentosArgs<ExtArgs> = {}>(args?: Subset<T, users$estabelecimentosArgs<ExtArgs>>): Prisma__estabelecimentosClient<$Result.GetResult<Prisma.$estabelecimentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    franqueados<T extends users$franqueadosArgs<ExtArgs> = {}>(args?: Subset<T, users$franqueadosArgs<ExtArgs>>): Prisma__franqueadosClient<$Result.GetResult<Prisma.$franqueadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    franqueadoras<T extends users$franqueadorasArgs<ExtArgs> = {}>(args?: Subset<T, users$franqueadorasArgs<ExtArgs>>): Prisma__franqueadorasClient<$Result.GetResult<Prisma.$franqueadorasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'String'>
    readonly name: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly type: FieldRef<"users", 'UserType'>
    readonly status: FieldRef<"users", 'Status'>
    readonly lastLogin: FieldRef<"users", 'DateTime'>
    readonly createdAt: FieldRef<"users", 'DateTime'>
    readonly updatedAt: FieldRef<"users", 'DateTime'>
    readonly franqueadoraId: FieldRef<"users", 'String'>
    readonly franqueadoId: FieldRef<"users", 'String'>
    readonly estabelecimentoId: FieldRef<"users", 'String'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.logs
   */
  export type users$logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the logs
     */
    select?: logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the logs
     */
    omit?: logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: logsInclude<ExtArgs> | null
    where?: logsWhereInput
    orderBy?: logsOrderByWithRelationInput | logsOrderByWithRelationInput[]
    cursor?: logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LogsScalarFieldEnum | LogsScalarFieldEnum[]
  }

  /**
   * users.refresh_tokens
   */
  export type users$refresh_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    where?: refresh_tokensWhereInput
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    cursor?: refresh_tokensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * users.estabelecimentos
   */
  export type users$estabelecimentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estabelecimentos
     */
    select?: estabelecimentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estabelecimentos
     */
    omit?: estabelecimentosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estabelecimentosInclude<ExtArgs> | null
    where?: estabelecimentosWhereInput
  }

  /**
   * users.franqueados
   */
  export type users$franqueadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueados
     */
    select?: franqueadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueados
     */
    omit?: franqueadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadosInclude<ExtArgs> | null
    where?: franqueadosWhereInput
  }

  /**
   * users.franqueadoras
   */
  export type users$franqueadorasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the franqueadoras
     */
    select?: franqueadorasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the franqueadoras
     */
    omit?: franqueadorasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: franqueadorasInclude<ExtArgs> | null
    where?: franqueadorasWhereInput
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CartoesScalarFieldEnum: {
    id: 'id',
    codigo: 'codigo',
    qrCode: 'qrCode',
    valor: 'valor',
    status: 'status',
    dataAtivacao: 'dataAtivacao',
    dataUtilizacao: 'dataUtilizacao',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    franqueadoId: 'franqueadoId',
    estabelecimentoId: 'estabelecimentoId',
    usuarioId: 'usuarioId'
  };

  export type CartoesScalarFieldEnum = (typeof CartoesScalarFieldEnum)[keyof typeof CartoesScalarFieldEnum]


  export const ComissoesScalarFieldEnum: {
    id: 'id',
    valor: 'valor',
    percentual: 'percentual',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    franqueadoId: 'franqueadoId',
    estabelecimentoId: 'estabelecimentoId',
    transacaoId: 'transacaoId'
  };

  export type ComissoesScalarFieldEnum = (typeof ComissoesScalarFieldEnum)[keyof typeof ComissoesScalarFieldEnum]


  export const ConfiguracoesScalarFieldEnum: {
    id: 'id',
    chave: 'chave',
    valor: 'valor',
    descricao: 'descricao',
    tipo: 'tipo',
    updatedAt: 'updatedAt'
  };

  export type ConfiguracoesScalarFieldEnum = (typeof ConfiguracoesScalarFieldEnum)[keyof typeof ConfiguracoesScalarFieldEnum]


  export const Configuracoes_sistemaScalarFieldEnum: {
    id: 'id',
    chave: 'chave',
    valor: 'valor',
    tipo: 'tipo'
  };

  export type Configuracoes_sistemaScalarFieldEnum = (typeof Configuracoes_sistemaScalarFieldEnum)[keyof typeof Configuracoes_sistemaScalarFieldEnum]


  export const CobrancasScalarFieldEnum: {
    id: 'id',
    estabelecimentoId: 'estabelecimentoId',
    franqueadoId: 'franqueadoId',
    asaasChargeId: 'asaasChargeId',
    valor: 'valor',
    status: 'status',
    tipo: 'tipo',
    vencimento: 'vencimento',
    urlPagamento: 'urlPagamento',
    pixQrCode: 'pixQrCode',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    paidAt: 'paidAt'
  };

  export type CobrancasScalarFieldEnum = (typeof CobrancasScalarFieldEnum)[keyof typeof CobrancasScalarFieldEnum]


  export const DisplaysScalarFieldEnum: {
    id: 'id',
    tipo: 'tipo',
    status: 'status',
    dataInstalacao: 'dataInstalacao',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    franqueadoId: 'franqueadoId',
    estabelecimentoId: 'estabelecimentoId'
  };

  export type DisplaysScalarFieldEnum = (typeof DisplaysScalarFieldEnum)[keyof typeof DisplaysScalarFieldEnum]


  export const Estabelecimento_coordsScalarFieldEnum: {
    id: 'id',
    lat: 'lat',
    lng: 'lng',
    estabelecimentoId: 'estabelecimentoId'
  };

  export type Estabelecimento_coordsScalarFieldEnum = (typeof Estabelecimento_coordsScalarFieldEnum)[keyof typeof Estabelecimento_coordsScalarFieldEnum]


  export const EstabelecimentosScalarFieldEnum: {
    id: 'id',
    name: 'name',
    cnpj: 'cnpj',
    email: 'email',
    phone: 'phone',
    address: 'address',
    category: 'category',
    status: 'status',
    ativadoEm: 'ativadoEm',
    logo: 'logo',
    asaasId: 'asaasId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    franqueadoId: 'franqueadoId'
  };

  export type EstabelecimentosScalarFieldEnum = (typeof EstabelecimentosScalarFieldEnum)[keyof typeof EstabelecimentosScalarFieldEnum]


  export const FranqueadorasScalarFieldEnum: {
    id: 'id',
    name: 'name',
    cnpj: 'cnpj',
    email: 'email',
    phone: 'phone',
    address: 'address',
    logo: 'logo',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FranqueadorasScalarFieldEnum = (typeof FranqueadorasScalarFieldEnum)[keyof typeof FranqueadorasScalarFieldEnum]


  export const FranqueadosScalarFieldEnum: {
    id: 'id',
    name: 'name',
    cnpj: 'cnpj',
    email: 'email',
    phone: 'phone',
    address: 'address',
    region: 'region',
    comissionRate: 'comissionRate',
    status: 'status',
    asaasCustomerId: 'asaasCustomerId',
    logo: 'logo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    franqueadoraId: 'franqueadoraId'
  };

  export type FranqueadosScalarFieldEnum = (typeof FranqueadosScalarFieldEnum)[keyof typeof FranqueadosScalarFieldEnum]


  export const LogsScalarFieldEnum: {
    id: 'id',
    acao: 'acao',
    entidade: 'entidade',
    entidadeId: 'entidadeId',
    dadosAnteriores: 'dadosAnteriores',
    dadosNovos: 'dadosNovos',
    ip: 'ip',
    userAgent: 'userAgent',
    createdAt: 'createdAt',
    userId: 'userId',
    franqueadoraId: 'franqueadoraId',
    franqueadoId: 'franqueadoId',
    estabelecimentoId: 'estabelecimentoId',
    cartaoId: 'cartaoId',
    transacaoId: 'transacaoId',
    comissaoId: 'comissaoId',
    solicitacaoId: 'solicitacaoId',
    displayId: 'displayId'
  };

  export type LogsScalarFieldEnum = (typeof LogsScalarFieldEnum)[keyof typeof LogsScalarFieldEnum]


  export const Refresh_tokensScalarFieldEnum: {
    id: 'id',
    token: 'token',
    userId: 'userId',
    expiresAt: 'expiresAt',
    revoked: 'revoked',
    createdAt: 'createdAt'
  };

  export type Refresh_tokensScalarFieldEnum = (typeof Refresh_tokensScalarFieldEnum)[keyof typeof Refresh_tokensScalarFieldEnum]


  export const Solicitacoes_cartaoScalarFieldEnum: {
    id: 'id',
    quantidade: 'quantidade',
    status: 'status',
    observacoes: 'observacoes',
    dataAprovacao: 'dataAprovacao',
    dataEnvio: 'dataEnvio',
    dataEntrega: 'dataEntrega',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    estabelecimentoId: 'estabelecimentoId',
    franqueadoId: 'franqueadoId'
  };

  export type Solicitacoes_cartaoScalarFieldEnum = (typeof Solicitacoes_cartaoScalarFieldEnum)[keyof typeof Solicitacoes_cartaoScalarFieldEnum]


  export const TransacoesScalarFieldEnum: {
    id: 'id',
    tipo: 'tipo',
    valor: 'valor',
    status: 'status',
    usuarioNome: 'usuarioNome',
    usuarioTelefone: 'usuarioTelefone',
    comprovante: 'comprovante',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    cartaoId: 'cartaoId',
    estabelecimentoId: 'estabelecimentoId'
  };

  export type TransacoesScalarFieldEnum = (typeof TransacoesScalarFieldEnum)[keyof typeof TransacoesScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    type: 'type',
    status: 'status',
    lastLogin: 'lastLogin',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    franqueadoraId: 'franqueadoraId',
    franqueadoId: 'franqueadoId',
    estabelecimentoId: 'estabelecimentoId'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'CartaoStatus'
   */
  export type EnumCartaoStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CartaoStatus'>
    


  /**
   * Reference to a field of type 'CartaoStatus[]'
   */
  export type ListEnumCartaoStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CartaoStatus[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'ComissaoStatus'
   */
  export type EnumComissaoStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ComissaoStatus'>
    


  /**
   * Reference to a field of type 'ComissaoStatus[]'
   */
  export type ListEnumComissaoStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ComissaoStatus[]'>
    


  /**
   * Reference to a field of type 'ConfigTipo'
   */
  export type EnumConfigTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ConfigTipo'>
    


  /**
   * Reference to a field of type 'ConfigTipo[]'
   */
  export type ListEnumConfigTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ConfigTipo[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'CobrancaStatus'
   */
  export type EnumCobrancaStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CobrancaStatus'>
    


  /**
   * Reference to a field of type 'CobrancaStatus[]'
   */
  export type ListEnumCobrancaStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CobrancaStatus[]'>
    


  /**
   * Reference to a field of type 'TipoCobranca'
   */
  export type EnumTipoCobrancaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoCobranca'>
    


  /**
   * Reference to a field of type 'TipoCobranca[]'
   */
  export type ListEnumTipoCobrancaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoCobranca[]'>
    


  /**
   * Reference to a field of type 'DisplayTipo'
   */
  export type EnumDisplayTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DisplayTipo'>
    


  /**
   * Reference to a field of type 'DisplayTipo[]'
   */
  export type ListEnumDisplayTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DisplayTipo[]'>
    


  /**
   * Reference to a field of type 'DisplayStatus'
   */
  export type EnumDisplayStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DisplayStatus'>
    


  /**
   * Reference to a field of type 'DisplayStatus[]'
   */
  export type ListEnumDisplayStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DisplayStatus[]'>
    


  /**
   * Reference to a field of type 'EstabelecimentoStatus'
   */
  export type EnumEstabelecimentoStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstabelecimentoStatus'>
    


  /**
   * Reference to a field of type 'EstabelecimentoStatus[]'
   */
  export type ListEnumEstabelecimentoStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstabelecimentoStatus[]'>
    


  /**
   * Reference to a field of type 'Status'
   */
  export type EnumStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Status'>
    


  /**
   * Reference to a field of type 'Status[]'
   */
  export type ListEnumStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Status[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'SolicitacaoStatus'
   */
  export type EnumSolicitacaoStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SolicitacaoStatus'>
    


  /**
   * Reference to a field of type 'SolicitacaoStatus[]'
   */
  export type ListEnumSolicitacaoStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SolicitacaoStatus[]'>
    


  /**
   * Reference to a field of type 'TransacaoTipo'
   */
  export type EnumTransacaoTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransacaoTipo'>
    


  /**
   * Reference to a field of type 'TransacaoTipo[]'
   */
  export type ListEnumTransacaoTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransacaoTipo[]'>
    


  /**
   * Reference to a field of type 'TransacaoStatus'
   */
  export type EnumTransacaoStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransacaoStatus'>
    


  /**
   * Reference to a field of type 'TransacaoStatus[]'
   */
  export type ListEnumTransacaoStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransacaoStatus[]'>
    


  /**
   * Reference to a field of type 'UserType'
   */
  export type EnumUserTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserType'>
    


  /**
   * Reference to a field of type 'UserType[]'
   */
  export type ListEnumUserTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserType[]'>
    
  /**
   * Deep Input Types
   */


  export type cartoesWhereInput = {
    AND?: cartoesWhereInput | cartoesWhereInput[]
    OR?: cartoesWhereInput[]
    NOT?: cartoesWhereInput | cartoesWhereInput[]
    id?: StringFilter<"cartoes"> | string
    codigo?: StringFilter<"cartoes"> | string
    qrCode?: StringFilter<"cartoes"> | string
    valor?: FloatFilter<"cartoes"> | number
    status?: EnumCartaoStatusFilter<"cartoes"> | $Enums.CartaoStatus
    dataAtivacao?: DateTimeNullableFilter<"cartoes"> | Date | string | null
    dataUtilizacao?: DateTimeNullableFilter<"cartoes"> | Date | string | null
    createdAt?: DateTimeFilter<"cartoes"> | Date | string
    updatedAt?: DateTimeFilter<"cartoes"> | Date | string
    franqueadoId?: StringFilter<"cartoes"> | string
    estabelecimentoId?: StringNullableFilter<"cartoes"> | string | null
    usuarioId?: StringNullableFilter<"cartoes"> | string | null
    estabelecimentos?: XOR<EstabelecimentosNullableScalarRelationFilter, estabelecimentosWhereInput> | null
    franqueados?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
    logs?: LogsListRelationFilter
    transacoes?: TransacoesListRelationFilter
  }

  export type cartoesOrderByWithRelationInput = {
    id?: SortOrder
    codigo?: SortOrder
    qrCode?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    dataAtivacao?: SortOrderInput | SortOrder
    dataUtilizacao?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    estabelecimentos?: estabelecimentosOrderByWithRelationInput
    franqueados?: franqueadosOrderByWithRelationInput
    logs?: logsOrderByRelationAggregateInput
    transacoes?: transacoesOrderByRelationAggregateInput
  }

  export type cartoesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    codigo?: string
    qrCode?: string
    AND?: cartoesWhereInput | cartoesWhereInput[]
    OR?: cartoesWhereInput[]
    NOT?: cartoesWhereInput | cartoesWhereInput[]
    valor?: FloatFilter<"cartoes"> | number
    status?: EnumCartaoStatusFilter<"cartoes"> | $Enums.CartaoStatus
    dataAtivacao?: DateTimeNullableFilter<"cartoes"> | Date | string | null
    dataUtilizacao?: DateTimeNullableFilter<"cartoes"> | Date | string | null
    createdAt?: DateTimeFilter<"cartoes"> | Date | string
    updatedAt?: DateTimeFilter<"cartoes"> | Date | string
    franqueadoId?: StringFilter<"cartoes"> | string
    estabelecimentoId?: StringNullableFilter<"cartoes"> | string | null
    usuarioId?: StringNullableFilter<"cartoes"> | string | null
    estabelecimentos?: XOR<EstabelecimentosNullableScalarRelationFilter, estabelecimentosWhereInput> | null
    franqueados?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
    logs?: LogsListRelationFilter
    transacoes?: TransacoesListRelationFilter
  }, "id" | "codigo" | "qrCode">

  export type cartoesOrderByWithAggregationInput = {
    id?: SortOrder
    codigo?: SortOrder
    qrCode?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    dataAtivacao?: SortOrderInput | SortOrder
    dataUtilizacao?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    _count?: cartoesCountOrderByAggregateInput
    _avg?: cartoesAvgOrderByAggregateInput
    _max?: cartoesMaxOrderByAggregateInput
    _min?: cartoesMinOrderByAggregateInput
    _sum?: cartoesSumOrderByAggregateInput
  }

  export type cartoesScalarWhereWithAggregatesInput = {
    AND?: cartoesScalarWhereWithAggregatesInput | cartoesScalarWhereWithAggregatesInput[]
    OR?: cartoesScalarWhereWithAggregatesInput[]
    NOT?: cartoesScalarWhereWithAggregatesInput | cartoesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cartoes"> | string
    codigo?: StringWithAggregatesFilter<"cartoes"> | string
    qrCode?: StringWithAggregatesFilter<"cartoes"> | string
    valor?: FloatWithAggregatesFilter<"cartoes"> | number
    status?: EnumCartaoStatusWithAggregatesFilter<"cartoes"> | $Enums.CartaoStatus
    dataAtivacao?: DateTimeNullableWithAggregatesFilter<"cartoes"> | Date | string | null
    dataUtilizacao?: DateTimeNullableWithAggregatesFilter<"cartoes"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"cartoes"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"cartoes"> | Date | string
    franqueadoId?: StringWithAggregatesFilter<"cartoes"> | string
    estabelecimentoId?: StringNullableWithAggregatesFilter<"cartoes"> | string | null
    usuarioId?: StringNullableWithAggregatesFilter<"cartoes"> | string | null
  }

  export type comissoesWhereInput = {
    AND?: comissoesWhereInput | comissoesWhereInput[]
    OR?: comissoesWhereInput[]
    NOT?: comissoesWhereInput | comissoesWhereInput[]
    id?: StringFilter<"comissoes"> | string
    valor?: FloatFilter<"comissoes"> | number
    percentual?: FloatFilter<"comissoes"> | number
    status?: EnumComissaoStatusFilter<"comissoes"> | $Enums.ComissaoStatus
    createdAt?: DateTimeFilter<"comissoes"> | Date | string
    updatedAt?: DateTimeFilter<"comissoes"> | Date | string
    franqueadoId?: StringFilter<"comissoes"> | string
    estabelecimentoId?: StringFilter<"comissoes"> | string
    transacaoId?: StringFilter<"comissoes"> | string
    estabelecimentos?: XOR<EstabelecimentosScalarRelationFilter, estabelecimentosWhereInput>
    franqueados?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
    transacoes?: XOR<TransacoesScalarRelationFilter, transacoesWhereInput>
    logs?: LogsListRelationFilter
  }

  export type comissoesOrderByWithRelationInput = {
    id?: SortOrder
    valor?: SortOrder
    percentual?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
    transacaoId?: SortOrder
    estabelecimentos?: estabelecimentosOrderByWithRelationInput
    franqueados?: franqueadosOrderByWithRelationInput
    transacoes?: transacoesOrderByWithRelationInput
    logs?: logsOrderByRelationAggregateInput
  }

  export type comissoesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: comissoesWhereInput | comissoesWhereInput[]
    OR?: comissoesWhereInput[]
    NOT?: comissoesWhereInput | comissoesWhereInput[]
    valor?: FloatFilter<"comissoes"> | number
    percentual?: FloatFilter<"comissoes"> | number
    status?: EnumComissaoStatusFilter<"comissoes"> | $Enums.ComissaoStatus
    createdAt?: DateTimeFilter<"comissoes"> | Date | string
    updatedAt?: DateTimeFilter<"comissoes"> | Date | string
    franqueadoId?: StringFilter<"comissoes"> | string
    estabelecimentoId?: StringFilter<"comissoes"> | string
    transacaoId?: StringFilter<"comissoes"> | string
    estabelecimentos?: XOR<EstabelecimentosScalarRelationFilter, estabelecimentosWhereInput>
    franqueados?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
    transacoes?: XOR<TransacoesScalarRelationFilter, transacoesWhereInput>
    logs?: LogsListRelationFilter
  }, "id">

  export type comissoesOrderByWithAggregationInput = {
    id?: SortOrder
    valor?: SortOrder
    percentual?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
    transacaoId?: SortOrder
    _count?: comissoesCountOrderByAggregateInput
    _avg?: comissoesAvgOrderByAggregateInput
    _max?: comissoesMaxOrderByAggregateInput
    _min?: comissoesMinOrderByAggregateInput
    _sum?: comissoesSumOrderByAggregateInput
  }

  export type comissoesScalarWhereWithAggregatesInput = {
    AND?: comissoesScalarWhereWithAggregatesInput | comissoesScalarWhereWithAggregatesInput[]
    OR?: comissoesScalarWhereWithAggregatesInput[]
    NOT?: comissoesScalarWhereWithAggregatesInput | comissoesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"comissoes"> | string
    valor?: FloatWithAggregatesFilter<"comissoes"> | number
    percentual?: FloatWithAggregatesFilter<"comissoes"> | number
    status?: EnumComissaoStatusWithAggregatesFilter<"comissoes"> | $Enums.ComissaoStatus
    createdAt?: DateTimeWithAggregatesFilter<"comissoes"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"comissoes"> | Date | string
    franqueadoId?: StringWithAggregatesFilter<"comissoes"> | string
    estabelecimentoId?: StringWithAggregatesFilter<"comissoes"> | string
    transacaoId?: StringWithAggregatesFilter<"comissoes"> | string
  }

  export type configuracoesWhereInput = {
    AND?: configuracoesWhereInput | configuracoesWhereInput[]
    OR?: configuracoesWhereInput[]
    NOT?: configuracoesWhereInput | configuracoesWhereInput[]
    id?: StringFilter<"configuracoes"> | string
    chave?: StringFilter<"configuracoes"> | string
    valor?: StringFilter<"configuracoes"> | string
    descricao?: StringNullableFilter<"configuracoes"> | string | null
    tipo?: EnumConfigTipoFilter<"configuracoes"> | $Enums.ConfigTipo
    updatedAt?: DateTimeFilter<"configuracoes"> | Date | string
  }

  export type configuracoesOrderByWithRelationInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    descricao?: SortOrderInput | SortOrder
    tipo?: SortOrder
    updatedAt?: SortOrder
  }

  export type configuracoesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    chave?: string
    AND?: configuracoesWhereInput | configuracoesWhereInput[]
    OR?: configuracoesWhereInput[]
    NOT?: configuracoesWhereInput | configuracoesWhereInput[]
    valor?: StringFilter<"configuracoes"> | string
    descricao?: StringNullableFilter<"configuracoes"> | string | null
    tipo?: EnumConfigTipoFilter<"configuracoes"> | $Enums.ConfigTipo
    updatedAt?: DateTimeFilter<"configuracoes"> | Date | string
  }, "id" | "chave">

  export type configuracoesOrderByWithAggregationInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    descricao?: SortOrderInput | SortOrder
    tipo?: SortOrder
    updatedAt?: SortOrder
    _count?: configuracoesCountOrderByAggregateInput
    _max?: configuracoesMaxOrderByAggregateInput
    _min?: configuracoesMinOrderByAggregateInput
  }

  export type configuracoesScalarWhereWithAggregatesInput = {
    AND?: configuracoesScalarWhereWithAggregatesInput | configuracoesScalarWhereWithAggregatesInput[]
    OR?: configuracoesScalarWhereWithAggregatesInput[]
    NOT?: configuracoesScalarWhereWithAggregatesInput | configuracoesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"configuracoes"> | string
    chave?: StringWithAggregatesFilter<"configuracoes"> | string
    valor?: StringWithAggregatesFilter<"configuracoes"> | string
    descricao?: StringNullableWithAggregatesFilter<"configuracoes"> | string | null
    tipo?: EnumConfigTipoWithAggregatesFilter<"configuracoes"> | $Enums.ConfigTipo
    updatedAt?: DateTimeWithAggregatesFilter<"configuracoes"> | Date | string
  }

  export type configuracoes_sistemaWhereInput = {
    AND?: configuracoes_sistemaWhereInput | configuracoes_sistemaWhereInput[]
    OR?: configuracoes_sistemaWhereInput[]
    NOT?: configuracoes_sistemaWhereInput | configuracoes_sistemaWhereInput[]
    id?: StringFilter<"configuracoes_sistema"> | string
    chave?: StringFilter<"configuracoes_sistema"> | string
    valor?: StringFilter<"configuracoes_sistema"> | string
    tipo?: StringFilter<"configuracoes_sistema"> | string
  }

  export type configuracoes_sistemaOrderByWithRelationInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    tipo?: SortOrder
  }

  export type configuracoes_sistemaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    chave?: string
    AND?: configuracoes_sistemaWhereInput | configuracoes_sistemaWhereInput[]
    OR?: configuracoes_sistemaWhereInput[]
    NOT?: configuracoes_sistemaWhereInput | configuracoes_sistemaWhereInput[]
    valor?: StringFilter<"configuracoes_sistema"> | string
    tipo?: StringFilter<"configuracoes_sistema"> | string
  }, "id" | "chave">

  export type configuracoes_sistemaOrderByWithAggregationInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    tipo?: SortOrder
    _count?: configuracoes_sistemaCountOrderByAggregateInput
    _max?: configuracoes_sistemaMaxOrderByAggregateInput
    _min?: configuracoes_sistemaMinOrderByAggregateInput
  }

  export type configuracoes_sistemaScalarWhereWithAggregatesInput = {
    AND?: configuracoes_sistemaScalarWhereWithAggregatesInput | configuracoes_sistemaScalarWhereWithAggregatesInput[]
    OR?: configuracoes_sistemaScalarWhereWithAggregatesInput[]
    NOT?: configuracoes_sistemaScalarWhereWithAggregatesInput | configuracoes_sistemaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"configuracoes_sistema"> | string
    chave?: StringWithAggregatesFilter<"configuracoes_sistema"> | string
    valor?: StringWithAggregatesFilter<"configuracoes_sistema"> | string
    tipo?: StringWithAggregatesFilter<"configuracoes_sistema"> | string
  }

  export type cobrancasWhereInput = {
    AND?: cobrancasWhereInput | cobrancasWhereInput[]
    OR?: cobrancasWhereInput[]
    NOT?: cobrancasWhereInput | cobrancasWhereInput[]
    id?: StringFilter<"cobrancas"> | string
    estabelecimentoId?: StringFilter<"cobrancas"> | string
    franqueadoId?: StringFilter<"cobrancas"> | string
    asaasChargeId?: StringNullableFilter<"cobrancas"> | string | null
    valor?: DecimalFilter<"cobrancas"> | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFilter<"cobrancas"> | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFilter<"cobrancas"> | $Enums.TipoCobranca
    vencimento?: DateTimeFilter<"cobrancas"> | Date | string
    urlPagamento?: StringNullableFilter<"cobrancas"> | string | null
    pixQrCode?: StringNullableFilter<"cobrancas"> | string | null
    createdAt?: DateTimeFilter<"cobrancas"> | Date | string
    updatedAt?: DateTimeFilter<"cobrancas"> | Date | string
    paidAt?: DateTimeNullableFilter<"cobrancas"> | Date | string | null
    estabelecimento?: XOR<EstabelecimentosScalarRelationFilter, estabelecimentosWhereInput>
    franqueado?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
  }

  export type cobrancasOrderByWithRelationInput = {
    id?: SortOrder
    estabelecimentoId?: SortOrder
    franqueadoId?: SortOrder
    asaasChargeId?: SortOrderInput | SortOrder
    valor?: SortOrder
    status?: SortOrder
    tipo?: SortOrder
    vencimento?: SortOrder
    urlPagamento?: SortOrderInput | SortOrder
    pixQrCode?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    estabelecimento?: estabelecimentosOrderByWithRelationInput
    franqueado?: franqueadosOrderByWithRelationInput
  }

  export type cobrancasWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    asaasChargeId?: string
    AND?: cobrancasWhereInput | cobrancasWhereInput[]
    OR?: cobrancasWhereInput[]
    NOT?: cobrancasWhereInput | cobrancasWhereInput[]
    estabelecimentoId?: StringFilter<"cobrancas"> | string
    franqueadoId?: StringFilter<"cobrancas"> | string
    valor?: DecimalFilter<"cobrancas"> | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFilter<"cobrancas"> | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFilter<"cobrancas"> | $Enums.TipoCobranca
    vencimento?: DateTimeFilter<"cobrancas"> | Date | string
    urlPagamento?: StringNullableFilter<"cobrancas"> | string | null
    pixQrCode?: StringNullableFilter<"cobrancas"> | string | null
    createdAt?: DateTimeFilter<"cobrancas"> | Date | string
    updatedAt?: DateTimeFilter<"cobrancas"> | Date | string
    paidAt?: DateTimeNullableFilter<"cobrancas"> | Date | string | null
    estabelecimento?: XOR<EstabelecimentosScalarRelationFilter, estabelecimentosWhereInput>
    franqueado?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
  }, "id" | "asaasChargeId">

  export type cobrancasOrderByWithAggregationInput = {
    id?: SortOrder
    estabelecimentoId?: SortOrder
    franqueadoId?: SortOrder
    asaasChargeId?: SortOrderInput | SortOrder
    valor?: SortOrder
    status?: SortOrder
    tipo?: SortOrder
    vencimento?: SortOrder
    urlPagamento?: SortOrderInput | SortOrder
    pixQrCode?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    _count?: cobrancasCountOrderByAggregateInput
    _avg?: cobrancasAvgOrderByAggregateInput
    _max?: cobrancasMaxOrderByAggregateInput
    _min?: cobrancasMinOrderByAggregateInput
    _sum?: cobrancasSumOrderByAggregateInput
  }

  export type cobrancasScalarWhereWithAggregatesInput = {
    AND?: cobrancasScalarWhereWithAggregatesInput | cobrancasScalarWhereWithAggregatesInput[]
    OR?: cobrancasScalarWhereWithAggregatesInput[]
    NOT?: cobrancasScalarWhereWithAggregatesInput | cobrancasScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cobrancas"> | string
    estabelecimentoId?: StringWithAggregatesFilter<"cobrancas"> | string
    franqueadoId?: StringWithAggregatesFilter<"cobrancas"> | string
    asaasChargeId?: StringNullableWithAggregatesFilter<"cobrancas"> | string | null
    valor?: DecimalWithAggregatesFilter<"cobrancas"> | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusWithAggregatesFilter<"cobrancas"> | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaWithAggregatesFilter<"cobrancas"> | $Enums.TipoCobranca
    vencimento?: DateTimeWithAggregatesFilter<"cobrancas"> | Date | string
    urlPagamento?: StringNullableWithAggregatesFilter<"cobrancas"> | string | null
    pixQrCode?: StringNullableWithAggregatesFilter<"cobrancas"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"cobrancas"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"cobrancas"> | Date | string
    paidAt?: DateTimeNullableWithAggregatesFilter<"cobrancas"> | Date | string | null
  }

  export type displaysWhereInput = {
    AND?: displaysWhereInput | displaysWhereInput[]
    OR?: displaysWhereInput[]
    NOT?: displaysWhereInput | displaysWhereInput[]
    id?: StringFilter<"displays"> | string
    tipo?: EnumDisplayTipoFilter<"displays"> | $Enums.DisplayTipo
    status?: EnumDisplayStatusFilter<"displays"> | $Enums.DisplayStatus
    dataInstalacao?: DateTimeNullableFilter<"displays"> | Date | string | null
    createdAt?: DateTimeFilter<"displays"> | Date | string
    updatedAt?: DateTimeFilter<"displays"> | Date | string
    franqueadoId?: StringFilter<"displays"> | string
    estabelecimentoId?: StringNullableFilter<"displays"> | string | null
    estabelecimentos?: XOR<EstabelecimentosNullableScalarRelationFilter, estabelecimentosWhereInput> | null
    franqueados?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
    logs?: LogsListRelationFilter
  }

  export type displaysOrderByWithRelationInput = {
    id?: SortOrder
    tipo?: SortOrder
    status?: SortOrder
    dataInstalacao?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrderInput | SortOrder
    estabelecimentos?: estabelecimentosOrderByWithRelationInput
    franqueados?: franqueadosOrderByWithRelationInput
    logs?: logsOrderByRelationAggregateInput
  }

  export type displaysWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: displaysWhereInput | displaysWhereInput[]
    OR?: displaysWhereInput[]
    NOT?: displaysWhereInput | displaysWhereInput[]
    tipo?: EnumDisplayTipoFilter<"displays"> | $Enums.DisplayTipo
    status?: EnumDisplayStatusFilter<"displays"> | $Enums.DisplayStatus
    dataInstalacao?: DateTimeNullableFilter<"displays"> | Date | string | null
    createdAt?: DateTimeFilter<"displays"> | Date | string
    updatedAt?: DateTimeFilter<"displays"> | Date | string
    franqueadoId?: StringFilter<"displays"> | string
    estabelecimentoId?: StringNullableFilter<"displays"> | string | null
    estabelecimentos?: XOR<EstabelecimentosNullableScalarRelationFilter, estabelecimentosWhereInput> | null
    franqueados?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
    logs?: LogsListRelationFilter
  }, "id">

  export type displaysOrderByWithAggregationInput = {
    id?: SortOrder
    tipo?: SortOrder
    status?: SortOrder
    dataInstalacao?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrderInput | SortOrder
    _count?: displaysCountOrderByAggregateInput
    _max?: displaysMaxOrderByAggregateInput
    _min?: displaysMinOrderByAggregateInput
  }

  export type displaysScalarWhereWithAggregatesInput = {
    AND?: displaysScalarWhereWithAggregatesInput | displaysScalarWhereWithAggregatesInput[]
    OR?: displaysScalarWhereWithAggregatesInput[]
    NOT?: displaysScalarWhereWithAggregatesInput | displaysScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"displays"> | string
    tipo?: EnumDisplayTipoWithAggregatesFilter<"displays"> | $Enums.DisplayTipo
    status?: EnumDisplayStatusWithAggregatesFilter<"displays"> | $Enums.DisplayStatus
    dataInstalacao?: DateTimeNullableWithAggregatesFilter<"displays"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"displays"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"displays"> | Date | string
    franqueadoId?: StringWithAggregatesFilter<"displays"> | string
    estabelecimentoId?: StringNullableWithAggregatesFilter<"displays"> | string | null
  }

  export type estabelecimento_coordsWhereInput = {
    AND?: estabelecimento_coordsWhereInput | estabelecimento_coordsWhereInput[]
    OR?: estabelecimento_coordsWhereInput[]
    NOT?: estabelecimento_coordsWhereInput | estabelecimento_coordsWhereInput[]
    id?: StringFilter<"estabelecimento_coords"> | string
    lat?: FloatFilter<"estabelecimento_coords"> | number
    lng?: FloatFilter<"estabelecimento_coords"> | number
    estabelecimentoId?: StringFilter<"estabelecimento_coords"> | string
    estabelecimentos?: XOR<EstabelecimentosScalarRelationFilter, estabelecimentosWhereInput>
  }

  export type estabelecimento_coordsOrderByWithRelationInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    estabelecimentoId?: SortOrder
    estabelecimentos?: estabelecimentosOrderByWithRelationInput
  }

  export type estabelecimento_coordsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    estabelecimentoId?: string
    AND?: estabelecimento_coordsWhereInput | estabelecimento_coordsWhereInput[]
    OR?: estabelecimento_coordsWhereInput[]
    NOT?: estabelecimento_coordsWhereInput | estabelecimento_coordsWhereInput[]
    lat?: FloatFilter<"estabelecimento_coords"> | number
    lng?: FloatFilter<"estabelecimento_coords"> | number
    estabelecimentos?: XOR<EstabelecimentosScalarRelationFilter, estabelecimentosWhereInput>
  }, "id" | "estabelecimentoId">

  export type estabelecimento_coordsOrderByWithAggregationInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    estabelecimentoId?: SortOrder
    _count?: estabelecimento_coordsCountOrderByAggregateInput
    _avg?: estabelecimento_coordsAvgOrderByAggregateInput
    _max?: estabelecimento_coordsMaxOrderByAggregateInput
    _min?: estabelecimento_coordsMinOrderByAggregateInput
    _sum?: estabelecimento_coordsSumOrderByAggregateInput
  }

  export type estabelecimento_coordsScalarWhereWithAggregatesInput = {
    AND?: estabelecimento_coordsScalarWhereWithAggregatesInput | estabelecimento_coordsScalarWhereWithAggregatesInput[]
    OR?: estabelecimento_coordsScalarWhereWithAggregatesInput[]
    NOT?: estabelecimento_coordsScalarWhereWithAggregatesInput | estabelecimento_coordsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"estabelecimento_coords"> | string
    lat?: FloatWithAggregatesFilter<"estabelecimento_coords"> | number
    lng?: FloatWithAggregatesFilter<"estabelecimento_coords"> | number
    estabelecimentoId?: StringWithAggregatesFilter<"estabelecimento_coords"> | string
  }

  export type estabelecimentosWhereInput = {
    AND?: estabelecimentosWhereInput | estabelecimentosWhereInput[]
    OR?: estabelecimentosWhereInput[]
    NOT?: estabelecimentosWhereInput | estabelecimentosWhereInput[]
    id?: StringFilter<"estabelecimentos"> | string
    name?: StringFilter<"estabelecimentos"> | string
    cnpj?: StringFilter<"estabelecimentos"> | string
    email?: StringFilter<"estabelecimentos"> | string
    phone?: StringFilter<"estabelecimentos"> | string
    address?: StringFilter<"estabelecimentos"> | string
    category?: StringFilter<"estabelecimentos"> | string
    status?: EnumEstabelecimentoStatusFilter<"estabelecimentos"> | $Enums.EstabelecimentoStatus
    ativadoEm?: DateTimeNullableFilter<"estabelecimentos"> | Date | string | null
    logo?: StringNullableFilter<"estabelecimentos"> | string | null
    asaasId?: StringNullableFilter<"estabelecimentos"> | string | null
    createdAt?: DateTimeFilter<"estabelecimentos"> | Date | string
    updatedAt?: DateTimeFilter<"estabelecimentos"> | Date | string
    franqueadoId?: StringFilter<"estabelecimentos"> | string
    cartoes?: CartoesListRelationFilter
    comissoes?: ComissoesListRelationFilter
    cobrancas?: CobrancasListRelationFilter
    displays?: DisplaysListRelationFilter
    estabelecimento_coords?: XOR<Estabelecimento_coordsNullableScalarRelationFilter, estabelecimento_coordsWhereInput> | null
    franqueados?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
    logs?: LogsListRelationFilter
    solicitacoes_cartao?: Solicitacoes_cartaoListRelationFilter
    transacoes?: TransacoesListRelationFilter
    users?: UsersListRelationFilter
  }

  export type estabelecimentosOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    category?: SortOrder
    status?: SortOrder
    ativadoEm?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    asaasId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    cartoes?: cartoesOrderByRelationAggregateInput
    comissoes?: comissoesOrderByRelationAggregateInput
    cobrancas?: cobrancasOrderByRelationAggregateInput
    displays?: displaysOrderByRelationAggregateInput
    estabelecimento_coords?: estabelecimento_coordsOrderByWithRelationInput
    franqueados?: franqueadosOrderByWithRelationInput
    logs?: logsOrderByRelationAggregateInput
    solicitacoes_cartao?: solicitacoes_cartaoOrderByRelationAggregateInput
    transacoes?: transacoesOrderByRelationAggregateInput
    users?: usersOrderByRelationAggregateInput
  }

  export type estabelecimentosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    cnpj?: string
    email?: string
    asaasId?: string
    AND?: estabelecimentosWhereInput | estabelecimentosWhereInput[]
    OR?: estabelecimentosWhereInput[]
    NOT?: estabelecimentosWhereInput | estabelecimentosWhereInput[]
    name?: StringFilter<"estabelecimentos"> | string
    phone?: StringFilter<"estabelecimentos"> | string
    address?: StringFilter<"estabelecimentos"> | string
    category?: StringFilter<"estabelecimentos"> | string
    status?: EnumEstabelecimentoStatusFilter<"estabelecimentos"> | $Enums.EstabelecimentoStatus
    ativadoEm?: DateTimeNullableFilter<"estabelecimentos"> | Date | string | null
    logo?: StringNullableFilter<"estabelecimentos"> | string | null
    createdAt?: DateTimeFilter<"estabelecimentos"> | Date | string
    updatedAt?: DateTimeFilter<"estabelecimentos"> | Date | string
    franqueadoId?: StringFilter<"estabelecimentos"> | string
    cartoes?: CartoesListRelationFilter
    comissoes?: ComissoesListRelationFilter
    cobrancas?: CobrancasListRelationFilter
    displays?: DisplaysListRelationFilter
    estabelecimento_coords?: XOR<Estabelecimento_coordsNullableScalarRelationFilter, estabelecimento_coordsWhereInput> | null
    franqueados?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
    logs?: LogsListRelationFilter
    solicitacoes_cartao?: Solicitacoes_cartaoListRelationFilter
    transacoes?: TransacoesListRelationFilter
    users?: UsersListRelationFilter
  }, "id" | "cnpj" | "email" | "asaasId">

  export type estabelecimentosOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    category?: SortOrder
    status?: SortOrder
    ativadoEm?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    asaasId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    _count?: estabelecimentosCountOrderByAggregateInput
    _max?: estabelecimentosMaxOrderByAggregateInput
    _min?: estabelecimentosMinOrderByAggregateInput
  }

  export type estabelecimentosScalarWhereWithAggregatesInput = {
    AND?: estabelecimentosScalarWhereWithAggregatesInput | estabelecimentosScalarWhereWithAggregatesInput[]
    OR?: estabelecimentosScalarWhereWithAggregatesInput[]
    NOT?: estabelecimentosScalarWhereWithAggregatesInput | estabelecimentosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"estabelecimentos"> | string
    name?: StringWithAggregatesFilter<"estabelecimentos"> | string
    cnpj?: StringWithAggregatesFilter<"estabelecimentos"> | string
    email?: StringWithAggregatesFilter<"estabelecimentos"> | string
    phone?: StringWithAggregatesFilter<"estabelecimentos"> | string
    address?: StringWithAggregatesFilter<"estabelecimentos"> | string
    category?: StringWithAggregatesFilter<"estabelecimentos"> | string
    status?: EnumEstabelecimentoStatusWithAggregatesFilter<"estabelecimentos"> | $Enums.EstabelecimentoStatus
    ativadoEm?: DateTimeNullableWithAggregatesFilter<"estabelecimentos"> | Date | string | null
    logo?: StringNullableWithAggregatesFilter<"estabelecimentos"> | string | null
    asaasId?: StringNullableWithAggregatesFilter<"estabelecimentos"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"estabelecimentos"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"estabelecimentos"> | Date | string
    franqueadoId?: StringWithAggregatesFilter<"estabelecimentos"> | string
  }

  export type franqueadorasWhereInput = {
    AND?: franqueadorasWhereInput | franqueadorasWhereInput[]
    OR?: franqueadorasWhereInput[]
    NOT?: franqueadorasWhereInput | franqueadorasWhereInput[]
    id?: StringFilter<"franqueadoras"> | string
    name?: StringFilter<"franqueadoras"> | string
    cnpj?: StringFilter<"franqueadoras"> | string
    email?: StringFilter<"franqueadoras"> | string
    phone?: StringFilter<"franqueadoras"> | string
    address?: StringFilter<"franqueadoras"> | string
    logo?: StringNullableFilter<"franqueadoras"> | string | null
    status?: EnumStatusFilter<"franqueadoras"> | $Enums.Status
    createdAt?: DateTimeFilter<"franqueadoras"> | Date | string
    updatedAt?: DateTimeFilter<"franqueadoras"> | Date | string
    franqueados?: FranqueadosListRelationFilter
    logs?: LogsListRelationFilter
    users?: UsersListRelationFilter
  }

  export type franqueadorasOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    logo?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueados?: franqueadosOrderByRelationAggregateInput
    logs?: logsOrderByRelationAggregateInput
    users?: usersOrderByRelationAggregateInput
  }

  export type franqueadorasWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    cnpj?: string
    email?: string
    AND?: franqueadorasWhereInput | franqueadorasWhereInput[]
    OR?: franqueadorasWhereInput[]
    NOT?: franqueadorasWhereInput | franqueadorasWhereInput[]
    name?: StringFilter<"franqueadoras"> | string
    phone?: StringFilter<"franqueadoras"> | string
    address?: StringFilter<"franqueadoras"> | string
    logo?: StringNullableFilter<"franqueadoras"> | string | null
    status?: EnumStatusFilter<"franqueadoras"> | $Enums.Status
    createdAt?: DateTimeFilter<"franqueadoras"> | Date | string
    updatedAt?: DateTimeFilter<"franqueadoras"> | Date | string
    franqueados?: FranqueadosListRelationFilter
    logs?: LogsListRelationFilter
    users?: UsersListRelationFilter
  }, "id" | "cnpj" | "email">

  export type franqueadorasOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    logo?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: franqueadorasCountOrderByAggregateInput
    _max?: franqueadorasMaxOrderByAggregateInput
    _min?: franqueadorasMinOrderByAggregateInput
  }

  export type franqueadorasScalarWhereWithAggregatesInput = {
    AND?: franqueadorasScalarWhereWithAggregatesInput | franqueadorasScalarWhereWithAggregatesInput[]
    OR?: franqueadorasScalarWhereWithAggregatesInput[]
    NOT?: franqueadorasScalarWhereWithAggregatesInput | franqueadorasScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"franqueadoras"> | string
    name?: StringWithAggregatesFilter<"franqueadoras"> | string
    cnpj?: StringWithAggregatesFilter<"franqueadoras"> | string
    email?: StringWithAggregatesFilter<"franqueadoras"> | string
    phone?: StringWithAggregatesFilter<"franqueadoras"> | string
    address?: StringWithAggregatesFilter<"franqueadoras"> | string
    logo?: StringNullableWithAggregatesFilter<"franqueadoras"> | string | null
    status?: EnumStatusWithAggregatesFilter<"franqueadoras"> | $Enums.Status
    createdAt?: DateTimeWithAggregatesFilter<"franqueadoras"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"franqueadoras"> | Date | string
  }

  export type franqueadosWhereInput = {
    AND?: franqueadosWhereInput | franqueadosWhereInput[]
    OR?: franqueadosWhereInput[]
    NOT?: franqueadosWhereInput | franqueadosWhereInput[]
    id?: StringFilter<"franqueados"> | string
    name?: StringFilter<"franqueados"> | string
    cnpj?: StringFilter<"franqueados"> | string
    email?: StringFilter<"franqueados"> | string
    phone?: StringFilter<"franqueados"> | string
    address?: StringFilter<"franqueados"> | string
    region?: StringFilter<"franqueados"> | string
    comissionRate?: FloatFilter<"franqueados"> | number
    status?: EnumStatusFilter<"franqueados"> | $Enums.Status
    asaasCustomerId?: StringNullableFilter<"franqueados"> | string | null
    logo?: StringNullableFilter<"franqueados"> | string | null
    createdAt?: DateTimeFilter<"franqueados"> | Date | string
    updatedAt?: DateTimeFilter<"franqueados"> | Date | string
    franqueadoraId?: StringFilter<"franqueados"> | string
    cartoes?: CartoesListRelationFilter
    comissoes?: ComissoesListRelationFilter
    cobrancas?: CobrancasListRelationFilter
    displays?: DisplaysListRelationFilter
    estabelecimentos?: EstabelecimentosListRelationFilter
    franqueadoras?: XOR<FranqueadorasScalarRelationFilter, franqueadorasWhereInput>
    logs?: LogsListRelationFilter
    solicitacoes_cartao?: Solicitacoes_cartaoListRelationFilter
    users?: UsersListRelationFilter
  }

  export type franqueadosOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    region?: SortOrder
    comissionRate?: SortOrder
    status?: SortOrder
    asaasCustomerId?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoraId?: SortOrder
    cartoes?: cartoesOrderByRelationAggregateInput
    comissoes?: comissoesOrderByRelationAggregateInput
    cobrancas?: cobrancasOrderByRelationAggregateInput
    displays?: displaysOrderByRelationAggregateInput
    estabelecimentos?: estabelecimentosOrderByRelationAggregateInput
    franqueadoras?: franqueadorasOrderByWithRelationInput
    logs?: logsOrderByRelationAggregateInput
    solicitacoes_cartao?: solicitacoes_cartaoOrderByRelationAggregateInput
    users?: usersOrderByRelationAggregateInput
  }

  export type franqueadosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    cnpj?: string
    email?: string
    asaasCustomerId?: string
    AND?: franqueadosWhereInput | franqueadosWhereInput[]
    OR?: franqueadosWhereInput[]
    NOT?: franqueadosWhereInput | franqueadosWhereInput[]
    name?: StringFilter<"franqueados"> | string
    phone?: StringFilter<"franqueados"> | string
    address?: StringFilter<"franqueados"> | string
    region?: StringFilter<"franqueados"> | string
    comissionRate?: FloatFilter<"franqueados"> | number
    status?: EnumStatusFilter<"franqueados"> | $Enums.Status
    logo?: StringNullableFilter<"franqueados"> | string | null
    createdAt?: DateTimeFilter<"franqueados"> | Date | string
    updatedAt?: DateTimeFilter<"franqueados"> | Date | string
    franqueadoraId?: StringFilter<"franqueados"> | string
    cartoes?: CartoesListRelationFilter
    comissoes?: ComissoesListRelationFilter
    cobrancas?: CobrancasListRelationFilter
    displays?: DisplaysListRelationFilter
    estabelecimentos?: EstabelecimentosListRelationFilter
    franqueadoras?: XOR<FranqueadorasScalarRelationFilter, franqueadorasWhereInput>
    logs?: LogsListRelationFilter
    solicitacoes_cartao?: Solicitacoes_cartaoListRelationFilter
    users?: UsersListRelationFilter
  }, "id" | "cnpj" | "email" | "asaasCustomerId">

  export type franqueadosOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    region?: SortOrder
    comissionRate?: SortOrder
    status?: SortOrder
    asaasCustomerId?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoraId?: SortOrder
    _count?: franqueadosCountOrderByAggregateInput
    _avg?: franqueadosAvgOrderByAggregateInput
    _max?: franqueadosMaxOrderByAggregateInput
    _min?: franqueadosMinOrderByAggregateInput
    _sum?: franqueadosSumOrderByAggregateInput
  }

  export type franqueadosScalarWhereWithAggregatesInput = {
    AND?: franqueadosScalarWhereWithAggregatesInput | franqueadosScalarWhereWithAggregatesInput[]
    OR?: franqueadosScalarWhereWithAggregatesInput[]
    NOT?: franqueadosScalarWhereWithAggregatesInput | franqueadosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"franqueados"> | string
    name?: StringWithAggregatesFilter<"franqueados"> | string
    cnpj?: StringWithAggregatesFilter<"franqueados"> | string
    email?: StringWithAggregatesFilter<"franqueados"> | string
    phone?: StringWithAggregatesFilter<"franqueados"> | string
    address?: StringWithAggregatesFilter<"franqueados"> | string
    region?: StringWithAggregatesFilter<"franqueados"> | string
    comissionRate?: FloatWithAggregatesFilter<"franqueados"> | number
    status?: EnumStatusWithAggregatesFilter<"franqueados"> | $Enums.Status
    asaasCustomerId?: StringNullableWithAggregatesFilter<"franqueados"> | string | null
    logo?: StringNullableWithAggregatesFilter<"franqueados"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"franqueados"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"franqueados"> | Date | string
    franqueadoraId?: StringWithAggregatesFilter<"franqueados"> | string
  }

  export type logsWhereInput = {
    AND?: logsWhereInput | logsWhereInput[]
    OR?: logsWhereInput[]
    NOT?: logsWhereInput | logsWhereInput[]
    id?: StringFilter<"logs"> | string
    acao?: StringFilter<"logs"> | string
    entidade?: StringFilter<"logs"> | string
    entidadeId?: StringFilter<"logs"> | string
    dadosAnteriores?: JsonNullableFilter<"logs">
    dadosNovos?: JsonNullableFilter<"logs">
    ip?: StringFilter<"logs"> | string
    userAgent?: StringFilter<"logs"> | string
    createdAt?: DateTimeFilter<"logs"> | Date | string
    userId?: StringNullableFilter<"logs"> | string | null
    franqueadoraId?: StringNullableFilter<"logs"> | string | null
    franqueadoId?: StringNullableFilter<"logs"> | string | null
    estabelecimentoId?: StringNullableFilter<"logs"> | string | null
    cartaoId?: StringNullableFilter<"logs"> | string | null
    transacaoId?: StringNullableFilter<"logs"> | string | null
    comissaoId?: StringNullableFilter<"logs"> | string | null
    solicitacaoId?: StringNullableFilter<"logs"> | string | null
    displayId?: StringNullableFilter<"logs"> | string | null
    cartoes?: XOR<CartoesNullableScalarRelationFilter, cartoesWhereInput> | null
    comissoes?: XOR<ComissoesNullableScalarRelationFilter, comissoesWhereInput> | null
    displays?: XOR<DisplaysNullableScalarRelationFilter, displaysWhereInput> | null
    estabelecimentos?: XOR<EstabelecimentosNullableScalarRelationFilter, estabelecimentosWhereInput> | null
    franqueados?: XOR<FranqueadosNullableScalarRelationFilter, franqueadosWhereInput> | null
    franqueadoras?: XOR<FranqueadorasNullableScalarRelationFilter, franqueadorasWhereInput> | null
    solicitacoes_cartao?: XOR<Solicitacoes_cartaoNullableScalarRelationFilter, solicitacoes_cartaoWhereInput> | null
    transacoes?: XOR<TransacoesNullableScalarRelationFilter, transacoesWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type logsOrderByWithRelationInput = {
    id?: SortOrder
    acao?: SortOrder
    entidade?: SortOrder
    entidadeId?: SortOrder
    dadosAnteriores?: SortOrderInput | SortOrder
    dadosNovos?: SortOrderInput | SortOrder
    ip?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrderInput | SortOrder
    franqueadoraId?: SortOrderInput | SortOrder
    franqueadoId?: SortOrderInput | SortOrder
    estabelecimentoId?: SortOrderInput | SortOrder
    cartaoId?: SortOrderInput | SortOrder
    transacaoId?: SortOrderInput | SortOrder
    comissaoId?: SortOrderInput | SortOrder
    solicitacaoId?: SortOrderInput | SortOrder
    displayId?: SortOrderInput | SortOrder
    cartoes?: cartoesOrderByWithRelationInput
    comissoes?: comissoesOrderByWithRelationInput
    displays?: displaysOrderByWithRelationInput
    estabelecimentos?: estabelecimentosOrderByWithRelationInput
    franqueados?: franqueadosOrderByWithRelationInput
    franqueadoras?: franqueadorasOrderByWithRelationInput
    solicitacoes_cartao?: solicitacoes_cartaoOrderByWithRelationInput
    transacoes?: transacoesOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type logsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: logsWhereInput | logsWhereInput[]
    OR?: logsWhereInput[]
    NOT?: logsWhereInput | logsWhereInput[]
    acao?: StringFilter<"logs"> | string
    entidade?: StringFilter<"logs"> | string
    entidadeId?: StringFilter<"logs"> | string
    dadosAnteriores?: JsonNullableFilter<"logs">
    dadosNovos?: JsonNullableFilter<"logs">
    ip?: StringFilter<"logs"> | string
    userAgent?: StringFilter<"logs"> | string
    createdAt?: DateTimeFilter<"logs"> | Date | string
    userId?: StringNullableFilter<"logs"> | string | null
    franqueadoraId?: StringNullableFilter<"logs"> | string | null
    franqueadoId?: StringNullableFilter<"logs"> | string | null
    estabelecimentoId?: StringNullableFilter<"logs"> | string | null
    cartaoId?: StringNullableFilter<"logs"> | string | null
    transacaoId?: StringNullableFilter<"logs"> | string | null
    comissaoId?: StringNullableFilter<"logs"> | string | null
    solicitacaoId?: StringNullableFilter<"logs"> | string | null
    displayId?: StringNullableFilter<"logs"> | string | null
    cartoes?: XOR<CartoesNullableScalarRelationFilter, cartoesWhereInput> | null
    comissoes?: XOR<ComissoesNullableScalarRelationFilter, comissoesWhereInput> | null
    displays?: XOR<DisplaysNullableScalarRelationFilter, displaysWhereInput> | null
    estabelecimentos?: XOR<EstabelecimentosNullableScalarRelationFilter, estabelecimentosWhereInput> | null
    franqueados?: XOR<FranqueadosNullableScalarRelationFilter, franqueadosWhereInput> | null
    franqueadoras?: XOR<FranqueadorasNullableScalarRelationFilter, franqueadorasWhereInput> | null
    solicitacoes_cartao?: XOR<Solicitacoes_cartaoNullableScalarRelationFilter, solicitacoes_cartaoWhereInput> | null
    transacoes?: XOR<TransacoesNullableScalarRelationFilter, transacoesWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type logsOrderByWithAggregationInput = {
    id?: SortOrder
    acao?: SortOrder
    entidade?: SortOrder
    entidadeId?: SortOrder
    dadosAnteriores?: SortOrderInput | SortOrder
    dadosNovos?: SortOrderInput | SortOrder
    ip?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrderInput | SortOrder
    franqueadoraId?: SortOrderInput | SortOrder
    franqueadoId?: SortOrderInput | SortOrder
    estabelecimentoId?: SortOrderInput | SortOrder
    cartaoId?: SortOrderInput | SortOrder
    transacaoId?: SortOrderInput | SortOrder
    comissaoId?: SortOrderInput | SortOrder
    solicitacaoId?: SortOrderInput | SortOrder
    displayId?: SortOrderInput | SortOrder
    _count?: logsCountOrderByAggregateInput
    _max?: logsMaxOrderByAggregateInput
    _min?: logsMinOrderByAggregateInput
  }

  export type logsScalarWhereWithAggregatesInput = {
    AND?: logsScalarWhereWithAggregatesInput | logsScalarWhereWithAggregatesInput[]
    OR?: logsScalarWhereWithAggregatesInput[]
    NOT?: logsScalarWhereWithAggregatesInput | logsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"logs"> | string
    acao?: StringWithAggregatesFilter<"logs"> | string
    entidade?: StringWithAggregatesFilter<"logs"> | string
    entidadeId?: StringWithAggregatesFilter<"logs"> | string
    dadosAnteriores?: JsonNullableWithAggregatesFilter<"logs">
    dadosNovos?: JsonNullableWithAggregatesFilter<"logs">
    ip?: StringWithAggregatesFilter<"logs"> | string
    userAgent?: StringWithAggregatesFilter<"logs"> | string
    createdAt?: DateTimeWithAggregatesFilter<"logs"> | Date | string
    userId?: StringNullableWithAggregatesFilter<"logs"> | string | null
    franqueadoraId?: StringNullableWithAggregatesFilter<"logs"> | string | null
    franqueadoId?: StringNullableWithAggregatesFilter<"logs"> | string | null
    estabelecimentoId?: StringNullableWithAggregatesFilter<"logs"> | string | null
    cartaoId?: StringNullableWithAggregatesFilter<"logs"> | string | null
    transacaoId?: StringNullableWithAggregatesFilter<"logs"> | string | null
    comissaoId?: StringNullableWithAggregatesFilter<"logs"> | string | null
    solicitacaoId?: StringNullableWithAggregatesFilter<"logs"> | string | null
    displayId?: StringNullableWithAggregatesFilter<"logs"> | string | null
  }

  export type refresh_tokensWhereInput = {
    AND?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    OR?: refresh_tokensWhereInput[]
    NOT?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    id?: StringFilter<"refresh_tokens"> | string
    token?: StringFilter<"refresh_tokens"> | string
    userId?: StringFilter<"refresh_tokens"> | string
    expiresAt?: DateTimeFilter<"refresh_tokens"> | Date | string
    revoked?: BoolFilter<"refresh_tokens"> | boolean
    createdAt?: DateTimeFilter<"refresh_tokens"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type refresh_tokensOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    revoked?: SortOrder
    createdAt?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type refresh_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    OR?: refresh_tokensWhereInput[]
    NOT?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    userId?: StringFilter<"refresh_tokens"> | string
    expiresAt?: DateTimeFilter<"refresh_tokens"> | Date | string
    revoked?: BoolFilter<"refresh_tokens"> | boolean
    createdAt?: DateTimeFilter<"refresh_tokens"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "token">

  export type refresh_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    revoked?: SortOrder
    createdAt?: SortOrder
    _count?: refresh_tokensCountOrderByAggregateInput
    _max?: refresh_tokensMaxOrderByAggregateInput
    _min?: refresh_tokensMinOrderByAggregateInput
  }

  export type refresh_tokensScalarWhereWithAggregatesInput = {
    AND?: refresh_tokensScalarWhereWithAggregatesInput | refresh_tokensScalarWhereWithAggregatesInput[]
    OR?: refresh_tokensScalarWhereWithAggregatesInput[]
    NOT?: refresh_tokensScalarWhereWithAggregatesInput | refresh_tokensScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"refresh_tokens"> | string
    token?: StringWithAggregatesFilter<"refresh_tokens"> | string
    userId?: StringWithAggregatesFilter<"refresh_tokens"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"refresh_tokens"> | Date | string
    revoked?: BoolWithAggregatesFilter<"refresh_tokens"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"refresh_tokens"> | Date | string
  }

  export type solicitacoes_cartaoWhereInput = {
    AND?: solicitacoes_cartaoWhereInput | solicitacoes_cartaoWhereInput[]
    OR?: solicitacoes_cartaoWhereInput[]
    NOT?: solicitacoes_cartaoWhereInput | solicitacoes_cartaoWhereInput[]
    id?: StringFilter<"solicitacoes_cartao"> | string
    quantidade?: IntFilter<"solicitacoes_cartao"> | number
    status?: EnumSolicitacaoStatusFilter<"solicitacoes_cartao"> | $Enums.SolicitacaoStatus
    observacoes?: StringNullableFilter<"solicitacoes_cartao"> | string | null
    dataAprovacao?: DateTimeNullableFilter<"solicitacoes_cartao"> | Date | string | null
    dataEnvio?: DateTimeNullableFilter<"solicitacoes_cartao"> | Date | string | null
    dataEntrega?: DateTimeNullableFilter<"solicitacoes_cartao"> | Date | string | null
    createdAt?: DateTimeFilter<"solicitacoes_cartao"> | Date | string
    updatedAt?: DateTimeFilter<"solicitacoes_cartao"> | Date | string
    estabelecimentoId?: StringFilter<"solicitacoes_cartao"> | string
    franqueadoId?: StringFilter<"solicitacoes_cartao"> | string
    logs?: LogsListRelationFilter
    estabelecimentos?: XOR<EstabelecimentosScalarRelationFilter, estabelecimentosWhereInput>
    franqueados?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
  }

  export type solicitacoes_cartaoOrderByWithRelationInput = {
    id?: SortOrder
    quantidade?: SortOrder
    status?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    dataAprovacao?: SortOrderInput | SortOrder
    dataEnvio?: SortOrderInput | SortOrder
    dataEntrega?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    estabelecimentoId?: SortOrder
    franqueadoId?: SortOrder
    logs?: logsOrderByRelationAggregateInput
    estabelecimentos?: estabelecimentosOrderByWithRelationInput
    franqueados?: franqueadosOrderByWithRelationInput
  }

  export type solicitacoes_cartaoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: solicitacoes_cartaoWhereInput | solicitacoes_cartaoWhereInput[]
    OR?: solicitacoes_cartaoWhereInput[]
    NOT?: solicitacoes_cartaoWhereInput | solicitacoes_cartaoWhereInput[]
    quantidade?: IntFilter<"solicitacoes_cartao"> | number
    status?: EnumSolicitacaoStatusFilter<"solicitacoes_cartao"> | $Enums.SolicitacaoStatus
    observacoes?: StringNullableFilter<"solicitacoes_cartao"> | string | null
    dataAprovacao?: DateTimeNullableFilter<"solicitacoes_cartao"> | Date | string | null
    dataEnvio?: DateTimeNullableFilter<"solicitacoes_cartao"> | Date | string | null
    dataEntrega?: DateTimeNullableFilter<"solicitacoes_cartao"> | Date | string | null
    createdAt?: DateTimeFilter<"solicitacoes_cartao"> | Date | string
    updatedAt?: DateTimeFilter<"solicitacoes_cartao"> | Date | string
    estabelecimentoId?: StringFilter<"solicitacoes_cartao"> | string
    franqueadoId?: StringFilter<"solicitacoes_cartao"> | string
    logs?: LogsListRelationFilter
    estabelecimentos?: XOR<EstabelecimentosScalarRelationFilter, estabelecimentosWhereInput>
    franqueados?: XOR<FranqueadosScalarRelationFilter, franqueadosWhereInput>
  }, "id">

  export type solicitacoes_cartaoOrderByWithAggregationInput = {
    id?: SortOrder
    quantidade?: SortOrder
    status?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    dataAprovacao?: SortOrderInput | SortOrder
    dataEnvio?: SortOrderInput | SortOrder
    dataEntrega?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    estabelecimentoId?: SortOrder
    franqueadoId?: SortOrder
    _count?: solicitacoes_cartaoCountOrderByAggregateInput
    _avg?: solicitacoes_cartaoAvgOrderByAggregateInput
    _max?: solicitacoes_cartaoMaxOrderByAggregateInput
    _min?: solicitacoes_cartaoMinOrderByAggregateInput
    _sum?: solicitacoes_cartaoSumOrderByAggregateInput
  }

  export type solicitacoes_cartaoScalarWhereWithAggregatesInput = {
    AND?: solicitacoes_cartaoScalarWhereWithAggregatesInput | solicitacoes_cartaoScalarWhereWithAggregatesInput[]
    OR?: solicitacoes_cartaoScalarWhereWithAggregatesInput[]
    NOT?: solicitacoes_cartaoScalarWhereWithAggregatesInput | solicitacoes_cartaoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"solicitacoes_cartao"> | string
    quantidade?: IntWithAggregatesFilter<"solicitacoes_cartao"> | number
    status?: EnumSolicitacaoStatusWithAggregatesFilter<"solicitacoes_cartao"> | $Enums.SolicitacaoStatus
    observacoes?: StringNullableWithAggregatesFilter<"solicitacoes_cartao"> | string | null
    dataAprovacao?: DateTimeNullableWithAggregatesFilter<"solicitacoes_cartao"> | Date | string | null
    dataEnvio?: DateTimeNullableWithAggregatesFilter<"solicitacoes_cartao"> | Date | string | null
    dataEntrega?: DateTimeNullableWithAggregatesFilter<"solicitacoes_cartao"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"solicitacoes_cartao"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"solicitacoes_cartao"> | Date | string
    estabelecimentoId?: StringWithAggregatesFilter<"solicitacoes_cartao"> | string
    franqueadoId?: StringWithAggregatesFilter<"solicitacoes_cartao"> | string
  }

  export type transacoesWhereInput = {
    AND?: transacoesWhereInput | transacoesWhereInput[]
    OR?: transacoesWhereInput[]
    NOT?: transacoesWhereInput | transacoesWhereInput[]
    id?: StringFilter<"transacoes"> | string
    tipo?: EnumTransacaoTipoFilter<"transacoes"> | $Enums.TransacaoTipo
    valor?: FloatFilter<"transacoes"> | number
    status?: EnumTransacaoStatusFilter<"transacoes"> | $Enums.TransacaoStatus
    usuarioNome?: StringNullableFilter<"transacoes"> | string | null
    usuarioTelefone?: StringNullableFilter<"transacoes"> | string | null
    comprovante?: StringNullableFilter<"transacoes"> | string | null
    createdAt?: DateTimeFilter<"transacoes"> | Date | string
    updatedAt?: DateTimeFilter<"transacoes"> | Date | string
    cartaoId?: StringFilter<"transacoes"> | string
    estabelecimentoId?: StringFilter<"transacoes"> | string
    comissoes?: ComissoesListRelationFilter
    logs?: LogsListRelationFilter
    cartoes?: XOR<CartoesScalarRelationFilter, cartoesWhereInput>
    estabelecimentos?: XOR<EstabelecimentosScalarRelationFilter, estabelecimentosWhereInput>
  }

  export type transacoesOrderByWithRelationInput = {
    id?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    usuarioNome?: SortOrderInput | SortOrder
    usuarioTelefone?: SortOrderInput | SortOrder
    comprovante?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cartaoId?: SortOrder
    estabelecimentoId?: SortOrder
    comissoes?: comissoesOrderByRelationAggregateInput
    logs?: logsOrderByRelationAggregateInput
    cartoes?: cartoesOrderByWithRelationInput
    estabelecimentos?: estabelecimentosOrderByWithRelationInput
  }

  export type transacoesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: transacoesWhereInput | transacoesWhereInput[]
    OR?: transacoesWhereInput[]
    NOT?: transacoesWhereInput | transacoesWhereInput[]
    tipo?: EnumTransacaoTipoFilter<"transacoes"> | $Enums.TransacaoTipo
    valor?: FloatFilter<"transacoes"> | number
    status?: EnumTransacaoStatusFilter<"transacoes"> | $Enums.TransacaoStatus
    usuarioNome?: StringNullableFilter<"transacoes"> | string | null
    usuarioTelefone?: StringNullableFilter<"transacoes"> | string | null
    comprovante?: StringNullableFilter<"transacoes"> | string | null
    createdAt?: DateTimeFilter<"transacoes"> | Date | string
    updatedAt?: DateTimeFilter<"transacoes"> | Date | string
    cartaoId?: StringFilter<"transacoes"> | string
    estabelecimentoId?: StringFilter<"transacoes"> | string
    comissoes?: ComissoesListRelationFilter
    logs?: LogsListRelationFilter
    cartoes?: XOR<CartoesScalarRelationFilter, cartoesWhereInput>
    estabelecimentos?: XOR<EstabelecimentosScalarRelationFilter, estabelecimentosWhereInput>
  }, "id">

  export type transacoesOrderByWithAggregationInput = {
    id?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    usuarioNome?: SortOrderInput | SortOrder
    usuarioTelefone?: SortOrderInput | SortOrder
    comprovante?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cartaoId?: SortOrder
    estabelecimentoId?: SortOrder
    _count?: transacoesCountOrderByAggregateInput
    _avg?: transacoesAvgOrderByAggregateInput
    _max?: transacoesMaxOrderByAggregateInput
    _min?: transacoesMinOrderByAggregateInput
    _sum?: transacoesSumOrderByAggregateInput
  }

  export type transacoesScalarWhereWithAggregatesInput = {
    AND?: transacoesScalarWhereWithAggregatesInput | transacoesScalarWhereWithAggregatesInput[]
    OR?: transacoesScalarWhereWithAggregatesInput[]
    NOT?: transacoesScalarWhereWithAggregatesInput | transacoesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"transacoes"> | string
    tipo?: EnumTransacaoTipoWithAggregatesFilter<"transacoes"> | $Enums.TransacaoTipo
    valor?: FloatWithAggregatesFilter<"transacoes"> | number
    status?: EnumTransacaoStatusWithAggregatesFilter<"transacoes"> | $Enums.TransacaoStatus
    usuarioNome?: StringNullableWithAggregatesFilter<"transacoes"> | string | null
    usuarioTelefone?: StringNullableWithAggregatesFilter<"transacoes"> | string | null
    comprovante?: StringNullableWithAggregatesFilter<"transacoes"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"transacoes"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"transacoes"> | Date | string
    cartaoId?: StringWithAggregatesFilter<"transacoes"> | string
    estabelecimentoId?: StringWithAggregatesFilter<"transacoes"> | string
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: StringFilter<"users"> | string
    name?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    type?: EnumUserTypeFilter<"users"> | $Enums.UserType
    status?: EnumStatusFilter<"users"> | $Enums.Status
    lastLogin?: DateTimeNullableFilter<"users"> | Date | string | null
    createdAt?: DateTimeFilter<"users"> | Date | string
    updatedAt?: DateTimeFilter<"users"> | Date | string
    franqueadoraId?: StringNullableFilter<"users"> | string | null
    franqueadoId?: StringNullableFilter<"users"> | string | null
    estabelecimentoId?: StringNullableFilter<"users"> | string | null
    logs?: LogsListRelationFilter
    refresh_tokens?: Refresh_tokensListRelationFilter
    estabelecimentos?: XOR<EstabelecimentosNullableScalarRelationFilter, estabelecimentosWhereInput> | null
    franqueados?: XOR<FranqueadosNullableScalarRelationFilter, franqueadosWhereInput> | null
    franqueadoras?: XOR<FranqueadorasNullableScalarRelationFilter, franqueadorasWhereInput> | null
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    type?: SortOrder
    status?: SortOrder
    lastLogin?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoraId?: SortOrderInput | SortOrder
    franqueadoId?: SortOrderInput | SortOrder
    estabelecimentoId?: SortOrderInput | SortOrder
    logs?: logsOrderByRelationAggregateInput
    refresh_tokens?: refresh_tokensOrderByRelationAggregateInput
    estabelecimentos?: estabelecimentosOrderByWithRelationInput
    franqueados?: franqueadosOrderByWithRelationInput
    franqueadoras?: franqueadorasOrderByWithRelationInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    name?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    type?: EnumUserTypeFilter<"users"> | $Enums.UserType
    status?: EnumStatusFilter<"users"> | $Enums.Status
    lastLogin?: DateTimeNullableFilter<"users"> | Date | string | null
    createdAt?: DateTimeFilter<"users"> | Date | string
    updatedAt?: DateTimeFilter<"users"> | Date | string
    franqueadoraId?: StringNullableFilter<"users"> | string | null
    franqueadoId?: StringNullableFilter<"users"> | string | null
    estabelecimentoId?: StringNullableFilter<"users"> | string | null
    logs?: LogsListRelationFilter
    refresh_tokens?: Refresh_tokensListRelationFilter
    estabelecimentos?: XOR<EstabelecimentosNullableScalarRelationFilter, estabelecimentosWhereInput> | null
    franqueados?: XOR<FranqueadosNullableScalarRelationFilter, franqueadosWhereInput> | null
    franqueadoras?: XOR<FranqueadorasNullableScalarRelationFilter, franqueadorasWhereInput> | null
  }, "id" | "email">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    type?: SortOrder
    status?: SortOrder
    lastLogin?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoraId?: SortOrderInput | SortOrder
    franqueadoId?: SortOrderInput | SortOrder
    estabelecimentoId?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"users"> | string
    name?: StringWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    password?: StringWithAggregatesFilter<"users"> | string
    type?: EnumUserTypeWithAggregatesFilter<"users"> | $Enums.UserType
    status?: EnumStatusWithAggregatesFilter<"users"> | $Enums.Status
    lastLogin?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"users"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"users"> | Date | string
    franqueadoraId?: StringNullableWithAggregatesFilter<"users"> | string | null
    franqueadoId?: StringNullableWithAggregatesFilter<"users"> | string | null
    estabelecimentoId?: StringNullableWithAggregatesFilter<"users"> | string | null
  }

  export type cartoesCreateInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    usuarioId?: string | null
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutCartoesInput
    franqueados: franqueadosCreateNestedOneWithoutCartoesInput
    logs?: logsCreateNestedManyWithoutCartoesInput
    transacoes?: transacoesCreateNestedManyWithoutCartoesInput
  }

  export type cartoesUncheckedCreateInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId?: string | null
    usuarioId?: string | null
    logs?: logsUncheckedCreateNestedManyWithoutCartoesInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutCartoesInput
  }

  export type cartoesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentos?: estabelecimentosUpdateOneWithoutCartoesNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutCartoesNestedInput
    logs?: logsUpdateManyWithoutCartoesNestedInput
    transacoes?: transacoesUpdateManyWithoutCartoesNestedInput
  }

  export type cartoesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    logs?: logsUncheckedUpdateManyWithoutCartoesNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutCartoesNestedInput
  }

  export type cartoesCreateManyInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId?: string | null
    usuarioId?: string | null
  }

  export type cartoesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cartoesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comissoesCreateInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentos: estabelecimentosCreateNestedOneWithoutComissoesInput
    franqueados: franqueadosCreateNestedOneWithoutComissoesInput
    transacoes: transacoesCreateNestedOneWithoutComissoesInput
    logs?: logsCreateNestedManyWithoutComissoesInput
  }

  export type comissoesUncheckedCreateInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId: string
    transacaoId: string
    logs?: logsUncheckedCreateNestedManyWithoutComissoesInput
  }

  export type comissoesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutComissoesNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutComissoesNestedInput
    transacoes?: transacoesUpdateOneRequiredWithoutComissoesNestedInput
    logs?: logsUpdateManyWithoutComissoesNestedInput
  }

  export type comissoesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    transacaoId?: StringFieldUpdateOperationsInput | string
    logs?: logsUncheckedUpdateManyWithoutComissoesNestedInput
  }

  export type comissoesCreateManyInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId: string
    transacaoId: string
  }

  export type comissoesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type comissoesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    transacaoId?: StringFieldUpdateOperationsInput | string
  }

  export type configuracoesCreateInput = {
    id: string
    chave: string
    valor: string
    descricao?: string | null
    tipo?: $Enums.ConfigTipo
    updatedAt: Date | string
  }

  export type configuracoesUncheckedCreateInput = {
    id: string
    chave: string
    valor: string
    descricao?: string | null
    tipo?: $Enums.ConfigTipo
    updatedAt: Date | string
  }

  export type configuracoesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumConfigTipoFieldUpdateOperationsInput | $Enums.ConfigTipo
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type configuracoesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumConfigTipoFieldUpdateOperationsInput | $Enums.ConfigTipo
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type configuracoesCreateManyInput = {
    id: string
    chave: string
    valor: string
    descricao?: string | null
    tipo?: $Enums.ConfigTipo
    updatedAt: Date | string
  }

  export type configuracoesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumConfigTipoFieldUpdateOperationsInput | $Enums.ConfigTipo
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type configuracoesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumConfigTipoFieldUpdateOperationsInput | $Enums.ConfigTipo
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type configuracoes_sistemaCreateInput = {
    id?: string
    chave: string
    valor: string
    tipo: string
  }

  export type configuracoes_sistemaUncheckedCreateInput = {
    id?: string
    chave: string
    valor: string
    tipo: string
  }

  export type configuracoes_sistemaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type configuracoes_sistemaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type configuracoes_sistemaCreateManyInput = {
    id?: string
    chave: string
    valor: string
    tipo: string
  }

  export type configuracoes_sistemaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type configuracoes_sistemaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    chave?: StringFieldUpdateOperationsInput | string
    valor?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type cobrancasCreateInput = {
    id?: string
    asaasChargeId?: string | null
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.CobrancaStatus
    tipo: $Enums.TipoCobranca
    vencimento: Date | string
    urlPagamento?: string | null
    pixQrCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
    estabelecimento: estabelecimentosCreateNestedOneWithoutCobrancasInput
    franqueado: franqueadosCreateNestedOneWithoutCobrancasInput
  }

  export type cobrancasUncheckedCreateInput = {
    id?: string
    estabelecimentoId: string
    franqueadoId: string
    asaasChargeId?: string | null
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.CobrancaStatus
    tipo: $Enums.TipoCobranca
    vencimento: Date | string
    urlPagamento?: string | null
    pixQrCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type cobrancasUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    asaasChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFieldUpdateOperationsInput | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFieldUpdateOperationsInput | $Enums.TipoCobranca
    vencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    urlPagamento?: NullableStringFieldUpdateOperationsInput | string | null
    pixQrCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estabelecimento?: estabelecimentosUpdateOneRequiredWithoutCobrancasNestedInput
    franqueado?: franqueadosUpdateOneRequiredWithoutCobrancasNestedInput
  }

  export type cobrancasUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    asaasChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFieldUpdateOperationsInput | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFieldUpdateOperationsInput | $Enums.TipoCobranca
    vencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    urlPagamento?: NullableStringFieldUpdateOperationsInput | string | null
    pixQrCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type cobrancasCreateManyInput = {
    id?: string
    estabelecimentoId: string
    franqueadoId: string
    asaasChargeId?: string | null
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.CobrancaStatus
    tipo: $Enums.TipoCobranca
    vencimento: Date | string
    urlPagamento?: string | null
    pixQrCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type cobrancasUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    asaasChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFieldUpdateOperationsInput | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFieldUpdateOperationsInput | $Enums.TipoCobranca
    vencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    urlPagamento?: NullableStringFieldUpdateOperationsInput | string | null
    pixQrCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type cobrancasUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    asaasChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFieldUpdateOperationsInput | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFieldUpdateOperationsInput | $Enums.TipoCobranca
    vencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    urlPagamento?: NullableStringFieldUpdateOperationsInput | string | null
    pixQrCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type displaysCreateInput = {
    id: string
    tipo: $Enums.DisplayTipo
    status?: $Enums.DisplayStatus
    dataInstalacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutDisplaysInput
    franqueados: franqueadosCreateNestedOneWithoutDisplaysInput
    logs?: logsCreateNestedManyWithoutDisplaysInput
  }

  export type displaysUncheckedCreateInput = {
    id: string
    tipo: $Enums.DisplayTipo
    status?: $Enums.DisplayStatus
    dataInstalacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId?: string | null
    logs?: logsUncheckedCreateNestedManyWithoutDisplaysInput
  }

  export type displaysUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentos?: estabelecimentosUpdateOneWithoutDisplaysNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutDisplaysNestedInput
    logs?: logsUpdateManyWithoutDisplaysNestedInput
  }

  export type displaysUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    logs?: logsUncheckedUpdateManyWithoutDisplaysNestedInput
  }

  export type displaysCreateManyInput = {
    id: string
    tipo: $Enums.DisplayTipo
    status?: $Enums.DisplayStatus
    dataInstalacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId?: string | null
  }

  export type displaysUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type displaysUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type estabelecimento_coordsCreateInput = {
    id: string
    lat: number
    lng: number
    estabelecimentos: estabelecimentosCreateNestedOneWithoutEstabelecimento_coordsInput
  }

  export type estabelecimento_coordsUncheckedCreateInput = {
    id: string
    lat: number
    lng: number
    estabelecimentoId: string
  }

  export type estabelecimento_coordsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    lat?: FloatFieldUpdateOperationsInput | number
    lng?: FloatFieldUpdateOperationsInput | number
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutEstabelecimento_coordsNestedInput
  }

  export type estabelecimento_coordsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    lat?: FloatFieldUpdateOperationsInput | number
    lng?: FloatFieldUpdateOperationsInput | number
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
  }

  export type estabelecimento_coordsCreateManyInput = {
    id: string
    lat: number
    lng: number
    estabelecimentoId: string
  }

  export type estabelecimento_coordsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    lat?: FloatFieldUpdateOperationsInput | number
    lng?: FloatFieldUpdateOperationsInput | number
  }

  export type estabelecimento_coordsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    lat?: FloatFieldUpdateOperationsInput | number
    lng?: FloatFieldUpdateOperationsInput | number
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
  }

  export type estabelecimentosCreateInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsCreateNestedOneWithoutEstabelecimentosInput
    franqueados: franqueadosCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesCreateNestedManyWithoutEstabelecimentosInput
    users?: usersCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUncheckedCreateInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysUncheckedCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsUncheckedCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    users?: usersUncheckedCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUpdateOneWithoutEstabelecimentosNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutEstabelecimentosNestedInput
    logs?: logsUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedUpdateOneWithoutEstabelecimentosNestedInput
    logs?: logsUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUncheckedUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosCreateManyInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
  }

  export type estabelecimentosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type estabelecimentosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
  }

  export type franqueadorasCreateInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    logo?: string | null
    status?: $Enums.Status
    createdAt?: Date | string
    updatedAt: Date | string
    franqueados?: franqueadosCreateNestedManyWithoutFranqueadorasInput
    logs?: logsCreateNestedManyWithoutFranqueadorasInput
    users?: usersCreateNestedManyWithoutFranqueadorasInput
  }

  export type franqueadorasUncheckedCreateInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    logo?: string | null
    status?: $Enums.Status
    createdAt?: Date | string
    updatedAt: Date | string
    franqueados?: franqueadosUncheckedCreateNestedManyWithoutFranqueadorasInput
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadorasInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadorasInput
  }

  export type franqueadorasUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueados?: franqueadosUpdateManyWithoutFranqueadorasNestedInput
    logs?: logsUpdateManyWithoutFranqueadorasNestedInput
    users?: usersUpdateManyWithoutFranqueadorasNestedInput
  }

  export type franqueadorasUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueados?: franqueadosUncheckedUpdateManyWithoutFranqueadorasNestedInput
    logs?: logsUncheckedUpdateManyWithoutFranqueadorasNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadorasNestedInput
  }

  export type franqueadorasCreateManyInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    logo?: string | null
    status?: $Enums.Status
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type franqueadorasUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type franqueadorasUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type franqueadosCreateInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasCreateNestedManyWithoutFranqueadoInput
    displays?: displaysCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosCreateNestedManyWithoutFranqueadosInput
    franqueadoras: franqueadorasCreateNestedOneWithoutFranqueadosInput
    logs?: logsCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutFranqueadosInput
    users?: usersCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosUncheckedCreateInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutFranqueadoInput
    displays?: displaysUncheckedCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosUncheckedCreateNestedManyWithoutFranqueadosInput
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutFranqueadosInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUpdateManyWithoutFranqueadosNestedInput
    franqueadoras?: franqueadorasUpdateOneRequiredWithoutFranqueadosNestedInput
    logs?: logsUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutFranqueadosNestedInput
    users?: usersUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUncheckedUpdateManyWithoutFranqueadosNestedInput
    logs?: logsUncheckedUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosCreateManyInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId: string
  }

  export type franqueadosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type franqueadosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: StringFieldUpdateOperationsInput | string
  }

  export type logsCreateInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    cartoes?: cartoesCreateNestedOneWithoutLogsInput
    comissoes?: comissoesCreateNestedOneWithoutLogsInput
    displays?: displaysCreateNestedOneWithoutLogsInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutLogsInput
    franqueados?: franqueadosCreateNestedOneWithoutLogsInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutLogsInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedOneWithoutLogsInput
    transacoes?: transacoesCreateNestedOneWithoutLogsInput
    users?: usersCreateNestedOneWithoutLogsInput
  }

  export type logsUncheckedCreateInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type logsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateOneWithoutLogsNestedInput
    comissoes?: comissoesUpdateOneWithoutLogsNestedInput
    displays?: displaysUpdateOneWithoutLogsNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutLogsNestedInput
    franqueados?: franqueadosUpdateOneWithoutLogsNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutLogsNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateOneWithoutLogsNestedInput
    transacoes?: transacoesUpdateOneWithoutLogsNestedInput
    users?: usersUpdateOneWithoutLogsNestedInput
  }

  export type logsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsCreateManyInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type logsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type logsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensCreateInput = {
    id: string
    token: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
    users: usersCreateNestedOneWithoutRefresh_tokensInput
  }

  export type refresh_tokensUncheckedCreateInput = {
    id: string
    token: string
    userId: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
  }

  export type refresh_tokensUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutRefresh_tokensNestedInput
  }

  export type refresh_tokensUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type refresh_tokensCreateManyInput = {
    id: string
    token: string
    userId: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
  }

  export type refresh_tokensUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type refresh_tokensUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type solicitacoes_cartaoCreateInput = {
    id: string
    quantidade: number
    status?: $Enums.SolicitacaoStatus
    observacoes?: string | null
    dataAprovacao?: Date | string | null
    dataEnvio?: Date | string | null
    dataEntrega?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    logs?: logsCreateNestedManyWithoutSolicitacoes_cartaoInput
    estabelecimentos: estabelecimentosCreateNestedOneWithoutSolicitacoes_cartaoInput
    franqueados: franqueadosCreateNestedOneWithoutSolicitacoes_cartaoInput
  }

  export type solicitacoes_cartaoUncheckedCreateInput = {
    id: string
    quantidade: number
    status?: $Enums.SolicitacaoStatus
    observacoes?: string | null
    dataAprovacao?: Date | string | null
    dataEnvio?: Date | string | null
    dataEntrega?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId: string
    franqueadoId: string
    logs?: logsUncheckedCreateNestedManyWithoutSolicitacoes_cartaoInput
  }

  export type solicitacoes_cartaoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    logs?: logsUpdateManyWithoutSolicitacoes_cartaoNestedInput
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutSolicitacoes_cartaoNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutSolicitacoes_cartaoNestedInput
  }

  export type solicitacoes_cartaoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    logs?: logsUncheckedUpdateManyWithoutSolicitacoes_cartaoNestedInput
  }

  export type solicitacoes_cartaoCreateManyInput = {
    id: string
    quantidade: number
    status?: $Enums.SolicitacaoStatus
    observacoes?: string | null
    dataAprovacao?: Date | string | null
    dataEnvio?: Date | string | null
    dataEntrega?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId: string
    franqueadoId: string
  }

  export type solicitacoes_cartaoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type solicitacoes_cartaoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
  }

  export type transacoesCreateInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    comissoes?: comissoesCreateNestedManyWithoutTransacoesInput
    logs?: logsCreateNestedManyWithoutTransacoesInput
    cartoes: cartoesCreateNestedOneWithoutTransacoesInput
    estabelecimentos: estabelecimentosCreateNestedOneWithoutTransacoesInput
  }

  export type transacoesUncheckedCreateInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartaoId: string
    estabelecimentoId: string
    comissoes?: comissoesUncheckedCreateNestedManyWithoutTransacoesInput
    logs?: logsUncheckedCreateNestedManyWithoutTransacoesInput
  }

  export type transacoesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comissoes?: comissoesUpdateManyWithoutTransacoesNestedInput
    logs?: logsUpdateManyWithoutTransacoesNestedInput
    cartoes?: cartoesUpdateOneRequiredWithoutTransacoesNestedInput
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutTransacoesNestedInput
  }

  export type transacoesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartaoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    comissoes?: comissoesUncheckedUpdateManyWithoutTransacoesNestedInput
    logs?: logsUncheckedUpdateManyWithoutTransacoesNestedInput
  }

  export type transacoesCreateManyInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartaoId: string
    estabelecimentoId: string
  }

  export type transacoesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type transacoesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartaoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
  }

  export type usersCreateInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    logs?: logsCreateNestedManyWithoutUsersInput
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutUsersInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutUsersInput
    franqueados?: franqueadosCreateNestedOneWithoutUsersInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    logs?: logsUncheckedCreateNestedManyWithoutUsersInput
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    logs?: logsUpdateManyWithoutUsersNestedInput
    refresh_tokens?: refresh_tokensUpdateManyWithoutUsersNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutUsersNestedInput
    franqueados?: franqueadosUpdateOneWithoutUsersNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    logs?: logsUncheckedUpdateManyWithoutUsersNestedInput
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
  }

  export type usersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type EnumCartaoStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CartaoStatus | EnumCartaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CartaoStatus[] | ListEnumCartaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CartaoStatus[] | ListEnumCartaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCartaoStatusFilter<$PrismaModel> | $Enums.CartaoStatus
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EstabelecimentosNullableScalarRelationFilter = {
    is?: estabelecimentosWhereInput | null
    isNot?: estabelecimentosWhereInput | null
  }

  export type FranqueadosScalarRelationFilter = {
    is?: franqueadosWhereInput
    isNot?: franqueadosWhereInput
  }

  export type LogsListRelationFilter = {
    every?: logsWhereInput
    some?: logsWhereInput
    none?: logsWhereInput
  }

  export type TransacoesListRelationFilter = {
    every?: transacoesWhereInput
    some?: transacoesWhereInput
    none?: transacoesWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type logsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type transacoesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cartoesCountOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    qrCode?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    dataAtivacao?: SortOrder
    dataUtilizacao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type cartoesAvgOrderByAggregateInput = {
    valor?: SortOrder
  }

  export type cartoesMaxOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    qrCode?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    dataAtivacao?: SortOrder
    dataUtilizacao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type cartoesMinOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    qrCode?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    dataAtivacao?: SortOrder
    dataUtilizacao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type cartoesSumOrderByAggregateInput = {
    valor?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumCartaoStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CartaoStatus | EnumCartaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CartaoStatus[] | ListEnumCartaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CartaoStatus[] | ListEnumCartaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCartaoStatusWithAggregatesFilter<$PrismaModel> | $Enums.CartaoStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCartaoStatusFilter<$PrismaModel>
    _max?: NestedEnumCartaoStatusFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumComissaoStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ComissaoStatus | EnumComissaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComissaoStatus[] | ListEnumComissaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComissaoStatus[] | ListEnumComissaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComissaoStatusFilter<$PrismaModel> | $Enums.ComissaoStatus
  }

  export type EstabelecimentosScalarRelationFilter = {
    is?: estabelecimentosWhereInput
    isNot?: estabelecimentosWhereInput
  }

  export type TransacoesScalarRelationFilter = {
    is?: transacoesWhereInput
    isNot?: transacoesWhereInput
  }

  export type comissoesCountOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    percentual?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
    transacaoId?: SortOrder
  }

  export type comissoesAvgOrderByAggregateInput = {
    valor?: SortOrder
    percentual?: SortOrder
  }

  export type comissoesMaxOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    percentual?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
    transacaoId?: SortOrder
  }

  export type comissoesMinOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    percentual?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
    transacaoId?: SortOrder
  }

  export type comissoesSumOrderByAggregateInput = {
    valor?: SortOrder
    percentual?: SortOrder
  }

  export type EnumComissaoStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ComissaoStatus | EnumComissaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComissaoStatus[] | ListEnumComissaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComissaoStatus[] | ListEnumComissaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComissaoStatusWithAggregatesFilter<$PrismaModel> | $Enums.ComissaoStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumComissaoStatusFilter<$PrismaModel>
    _max?: NestedEnumComissaoStatusFilter<$PrismaModel>
  }

  export type EnumConfigTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.ConfigTipo | EnumConfigTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ConfigTipo[] | ListEnumConfigTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConfigTipo[] | ListEnumConfigTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumConfigTipoFilter<$PrismaModel> | $Enums.ConfigTipo
  }

  export type configuracoesCountOrderByAggregateInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    descricao?: SortOrder
    tipo?: SortOrder
    updatedAt?: SortOrder
  }

  export type configuracoesMaxOrderByAggregateInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    descricao?: SortOrder
    tipo?: SortOrder
    updatedAt?: SortOrder
  }

  export type configuracoesMinOrderByAggregateInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    descricao?: SortOrder
    tipo?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumConfigTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ConfigTipo | EnumConfigTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ConfigTipo[] | ListEnumConfigTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConfigTipo[] | ListEnumConfigTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumConfigTipoWithAggregatesFilter<$PrismaModel> | $Enums.ConfigTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumConfigTipoFilter<$PrismaModel>
    _max?: NestedEnumConfigTipoFilter<$PrismaModel>
  }

  export type configuracoes_sistemaCountOrderByAggregateInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    tipo?: SortOrder
  }

  export type configuracoes_sistemaMaxOrderByAggregateInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    tipo?: SortOrder
  }

  export type configuracoes_sistemaMinOrderByAggregateInput = {
    id?: SortOrder
    chave?: SortOrder
    valor?: SortOrder
    tipo?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type EnumCobrancaStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CobrancaStatus | EnumCobrancaStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CobrancaStatus[] | ListEnumCobrancaStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CobrancaStatus[] | ListEnumCobrancaStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCobrancaStatusFilter<$PrismaModel> | $Enums.CobrancaStatus
  }

  export type EnumTipoCobrancaFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCobranca | EnumTipoCobrancaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCobranca[] | ListEnumTipoCobrancaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCobranca[] | ListEnumTipoCobrancaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCobrancaFilter<$PrismaModel> | $Enums.TipoCobranca
  }

  export type cobrancasCountOrderByAggregateInput = {
    id?: SortOrder
    estabelecimentoId?: SortOrder
    franqueadoId?: SortOrder
    asaasChargeId?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    tipo?: SortOrder
    vencimento?: SortOrder
    urlPagamento?: SortOrder
    pixQrCode?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paidAt?: SortOrder
  }

  export type cobrancasAvgOrderByAggregateInput = {
    valor?: SortOrder
  }

  export type cobrancasMaxOrderByAggregateInput = {
    id?: SortOrder
    estabelecimentoId?: SortOrder
    franqueadoId?: SortOrder
    asaasChargeId?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    tipo?: SortOrder
    vencimento?: SortOrder
    urlPagamento?: SortOrder
    pixQrCode?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paidAt?: SortOrder
  }

  export type cobrancasMinOrderByAggregateInput = {
    id?: SortOrder
    estabelecimentoId?: SortOrder
    franqueadoId?: SortOrder
    asaasChargeId?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    tipo?: SortOrder
    vencimento?: SortOrder
    urlPagamento?: SortOrder
    pixQrCode?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paidAt?: SortOrder
  }

  export type cobrancasSumOrderByAggregateInput = {
    valor?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumCobrancaStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CobrancaStatus | EnumCobrancaStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CobrancaStatus[] | ListEnumCobrancaStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CobrancaStatus[] | ListEnumCobrancaStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCobrancaStatusWithAggregatesFilter<$PrismaModel> | $Enums.CobrancaStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCobrancaStatusFilter<$PrismaModel>
    _max?: NestedEnumCobrancaStatusFilter<$PrismaModel>
  }

  export type EnumTipoCobrancaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCobranca | EnumTipoCobrancaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCobranca[] | ListEnumTipoCobrancaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCobranca[] | ListEnumTipoCobrancaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCobrancaWithAggregatesFilter<$PrismaModel> | $Enums.TipoCobranca
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoCobrancaFilter<$PrismaModel>
    _max?: NestedEnumTipoCobrancaFilter<$PrismaModel>
  }

  export type EnumDisplayTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.DisplayTipo | EnumDisplayTipoFieldRefInput<$PrismaModel>
    in?: $Enums.DisplayTipo[] | ListEnumDisplayTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisplayTipo[] | ListEnumDisplayTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumDisplayTipoFilter<$PrismaModel> | $Enums.DisplayTipo
  }

  export type EnumDisplayStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DisplayStatus | EnumDisplayStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisplayStatus[] | ListEnumDisplayStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisplayStatus[] | ListEnumDisplayStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisplayStatusFilter<$PrismaModel> | $Enums.DisplayStatus
  }

  export type displaysCountOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    status?: SortOrder
    dataInstalacao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type displaysMaxOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    status?: SortOrder
    dataInstalacao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type displaysMinOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    status?: SortOrder
    dataInstalacao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type EnumDisplayTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DisplayTipo | EnumDisplayTipoFieldRefInput<$PrismaModel>
    in?: $Enums.DisplayTipo[] | ListEnumDisplayTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisplayTipo[] | ListEnumDisplayTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumDisplayTipoWithAggregatesFilter<$PrismaModel> | $Enums.DisplayTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDisplayTipoFilter<$PrismaModel>
    _max?: NestedEnumDisplayTipoFilter<$PrismaModel>
  }

  export type EnumDisplayStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DisplayStatus | EnumDisplayStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisplayStatus[] | ListEnumDisplayStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisplayStatus[] | ListEnumDisplayStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisplayStatusWithAggregatesFilter<$PrismaModel> | $Enums.DisplayStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDisplayStatusFilter<$PrismaModel>
    _max?: NestedEnumDisplayStatusFilter<$PrismaModel>
  }

  export type estabelecimento_coordsCountOrderByAggregateInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type estabelecimento_coordsAvgOrderByAggregateInput = {
    lat?: SortOrder
    lng?: SortOrder
  }

  export type estabelecimento_coordsMaxOrderByAggregateInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type estabelecimento_coordsMinOrderByAggregateInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type estabelecimento_coordsSumOrderByAggregateInput = {
    lat?: SortOrder
    lng?: SortOrder
  }

  export type EnumEstabelecimentoStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.EstabelecimentoStatus | EnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EstabelecimentoStatus[] | ListEnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstabelecimentoStatus[] | ListEnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEstabelecimentoStatusFilter<$PrismaModel> | $Enums.EstabelecimentoStatus
  }

  export type CartoesListRelationFilter = {
    every?: cartoesWhereInput
    some?: cartoesWhereInput
    none?: cartoesWhereInput
  }

  export type ComissoesListRelationFilter = {
    every?: comissoesWhereInput
    some?: comissoesWhereInput
    none?: comissoesWhereInput
  }

  export type CobrancasListRelationFilter = {
    every?: cobrancasWhereInput
    some?: cobrancasWhereInput
    none?: cobrancasWhereInput
  }

  export type DisplaysListRelationFilter = {
    every?: displaysWhereInput
    some?: displaysWhereInput
    none?: displaysWhereInput
  }

  export type Estabelecimento_coordsNullableScalarRelationFilter = {
    is?: estabelecimento_coordsWhereInput | null
    isNot?: estabelecimento_coordsWhereInput | null
  }

  export type Solicitacoes_cartaoListRelationFilter = {
    every?: solicitacoes_cartaoWhereInput
    some?: solicitacoes_cartaoWhereInput
    none?: solicitacoes_cartaoWhereInput
  }

  export type UsersListRelationFilter = {
    every?: usersWhereInput
    some?: usersWhereInput
    none?: usersWhereInput
  }

  export type cartoesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type comissoesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cobrancasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type displaysOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type solicitacoes_cartaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type estabelecimentosCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    category?: SortOrder
    status?: SortOrder
    ativadoEm?: SortOrder
    logo?: SortOrder
    asaasId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
  }

  export type estabelecimentosMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    category?: SortOrder
    status?: SortOrder
    ativadoEm?: SortOrder
    logo?: SortOrder
    asaasId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
  }

  export type estabelecimentosMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    category?: SortOrder
    status?: SortOrder
    ativadoEm?: SortOrder
    logo?: SortOrder
    asaasId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoId?: SortOrder
  }

  export type EnumEstabelecimentoStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstabelecimentoStatus | EnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EstabelecimentoStatus[] | ListEnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstabelecimentoStatus[] | ListEnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEstabelecimentoStatusWithAggregatesFilter<$PrismaModel> | $Enums.EstabelecimentoStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstabelecimentoStatusFilter<$PrismaModel>
    _max?: NestedEnumEstabelecimentoStatusFilter<$PrismaModel>
  }

  export type EnumStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusFilter<$PrismaModel> | $Enums.Status
  }

  export type FranqueadosListRelationFilter = {
    every?: franqueadosWhereInput
    some?: franqueadosWhereInput
    none?: franqueadosWhereInput
  }

  export type franqueadosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type franqueadorasCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    logo?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type franqueadorasMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    logo?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type franqueadorasMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    logo?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusWithAggregatesFilter<$PrismaModel> | $Enums.Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusFilter<$PrismaModel>
    _max?: NestedEnumStatusFilter<$PrismaModel>
  }

  export type EstabelecimentosListRelationFilter = {
    every?: estabelecimentosWhereInput
    some?: estabelecimentosWhereInput
    none?: estabelecimentosWhereInput
  }

  export type FranqueadorasScalarRelationFilter = {
    is?: franqueadorasWhereInput
    isNot?: franqueadorasWhereInput
  }

  export type estabelecimentosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type franqueadosCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    region?: SortOrder
    comissionRate?: SortOrder
    status?: SortOrder
    asaasCustomerId?: SortOrder
    logo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoraId?: SortOrder
  }

  export type franqueadosAvgOrderByAggregateInput = {
    comissionRate?: SortOrder
  }

  export type franqueadosMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    region?: SortOrder
    comissionRate?: SortOrder
    status?: SortOrder
    asaasCustomerId?: SortOrder
    logo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoraId?: SortOrder
  }

  export type franqueadosMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cnpj?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    region?: SortOrder
    comissionRate?: SortOrder
    status?: SortOrder
    asaasCustomerId?: SortOrder
    logo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoraId?: SortOrder
  }

  export type franqueadosSumOrderByAggregateInput = {
    comissionRate?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type CartoesNullableScalarRelationFilter = {
    is?: cartoesWhereInput | null
    isNot?: cartoesWhereInput | null
  }

  export type ComissoesNullableScalarRelationFilter = {
    is?: comissoesWhereInput | null
    isNot?: comissoesWhereInput | null
  }

  export type DisplaysNullableScalarRelationFilter = {
    is?: displaysWhereInput | null
    isNot?: displaysWhereInput | null
  }

  export type FranqueadosNullableScalarRelationFilter = {
    is?: franqueadosWhereInput | null
    isNot?: franqueadosWhereInput | null
  }

  export type FranqueadorasNullableScalarRelationFilter = {
    is?: franqueadorasWhereInput | null
    isNot?: franqueadorasWhereInput | null
  }

  export type Solicitacoes_cartaoNullableScalarRelationFilter = {
    is?: solicitacoes_cartaoWhereInput | null
    isNot?: solicitacoes_cartaoWhereInput | null
  }

  export type TransacoesNullableScalarRelationFilter = {
    is?: transacoesWhereInput | null
    isNot?: transacoesWhereInput | null
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type logsCountOrderByAggregateInput = {
    id?: SortOrder
    acao?: SortOrder
    entidade?: SortOrder
    entidadeId?: SortOrder
    dadosAnteriores?: SortOrder
    dadosNovos?: SortOrder
    ip?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    franqueadoraId?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
    cartaoId?: SortOrder
    transacaoId?: SortOrder
    comissaoId?: SortOrder
    solicitacaoId?: SortOrder
    displayId?: SortOrder
  }

  export type logsMaxOrderByAggregateInput = {
    id?: SortOrder
    acao?: SortOrder
    entidade?: SortOrder
    entidadeId?: SortOrder
    ip?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    franqueadoraId?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
    cartaoId?: SortOrder
    transacaoId?: SortOrder
    comissaoId?: SortOrder
    solicitacaoId?: SortOrder
    displayId?: SortOrder
  }

  export type logsMinOrderByAggregateInput = {
    id?: SortOrder
    acao?: SortOrder
    entidade?: SortOrder
    entidadeId?: SortOrder
    ip?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    franqueadoraId?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
    cartaoId?: SortOrder
    transacaoId?: SortOrder
    comissaoId?: SortOrder
    solicitacaoId?: SortOrder
    displayId?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type refresh_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    revoked?: SortOrder
    createdAt?: SortOrder
  }

  export type refresh_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    revoked?: SortOrder
    createdAt?: SortOrder
  }

  export type refresh_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    revoked?: SortOrder
    createdAt?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type EnumSolicitacaoStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SolicitacaoStatus | EnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SolicitacaoStatus[] | ListEnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SolicitacaoStatus[] | ListEnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSolicitacaoStatusFilter<$PrismaModel> | $Enums.SolicitacaoStatus
  }

  export type solicitacoes_cartaoCountOrderByAggregateInput = {
    id?: SortOrder
    quantidade?: SortOrder
    status?: SortOrder
    observacoes?: SortOrder
    dataAprovacao?: SortOrder
    dataEnvio?: SortOrder
    dataEntrega?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    estabelecimentoId?: SortOrder
    franqueadoId?: SortOrder
  }

  export type solicitacoes_cartaoAvgOrderByAggregateInput = {
    quantidade?: SortOrder
  }

  export type solicitacoes_cartaoMaxOrderByAggregateInput = {
    id?: SortOrder
    quantidade?: SortOrder
    status?: SortOrder
    observacoes?: SortOrder
    dataAprovacao?: SortOrder
    dataEnvio?: SortOrder
    dataEntrega?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    estabelecimentoId?: SortOrder
    franqueadoId?: SortOrder
  }

  export type solicitacoes_cartaoMinOrderByAggregateInput = {
    id?: SortOrder
    quantidade?: SortOrder
    status?: SortOrder
    observacoes?: SortOrder
    dataAprovacao?: SortOrder
    dataEnvio?: SortOrder
    dataEntrega?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    estabelecimentoId?: SortOrder
    franqueadoId?: SortOrder
  }

  export type solicitacoes_cartaoSumOrderByAggregateInput = {
    quantidade?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumSolicitacaoStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SolicitacaoStatus | EnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SolicitacaoStatus[] | ListEnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SolicitacaoStatus[] | ListEnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSolicitacaoStatusWithAggregatesFilter<$PrismaModel> | $Enums.SolicitacaoStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSolicitacaoStatusFilter<$PrismaModel>
    _max?: NestedEnumSolicitacaoStatusFilter<$PrismaModel>
  }

  export type EnumTransacaoTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.TransacaoTipo | EnumTransacaoTipoFieldRefInput<$PrismaModel>
    in?: $Enums.TransacaoTipo[] | ListEnumTransacaoTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransacaoTipo[] | ListEnumTransacaoTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumTransacaoTipoFilter<$PrismaModel> | $Enums.TransacaoTipo
  }

  export type EnumTransacaoStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransacaoStatus | EnumTransacaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransacaoStatus[] | ListEnumTransacaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransacaoStatus[] | ListEnumTransacaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransacaoStatusFilter<$PrismaModel> | $Enums.TransacaoStatus
  }

  export type CartoesScalarRelationFilter = {
    is?: cartoesWhereInput
    isNot?: cartoesWhereInput
  }

  export type transacoesCountOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    usuarioNome?: SortOrder
    usuarioTelefone?: SortOrder
    comprovante?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cartaoId?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type transacoesAvgOrderByAggregateInput = {
    valor?: SortOrder
  }

  export type transacoesMaxOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    usuarioNome?: SortOrder
    usuarioTelefone?: SortOrder
    comprovante?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cartaoId?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type transacoesMinOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    status?: SortOrder
    usuarioNome?: SortOrder
    usuarioTelefone?: SortOrder
    comprovante?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cartaoId?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type transacoesSumOrderByAggregateInput = {
    valor?: SortOrder
  }

  export type EnumTransacaoTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransacaoTipo | EnumTransacaoTipoFieldRefInput<$PrismaModel>
    in?: $Enums.TransacaoTipo[] | ListEnumTransacaoTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransacaoTipo[] | ListEnumTransacaoTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumTransacaoTipoWithAggregatesFilter<$PrismaModel> | $Enums.TransacaoTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransacaoTipoFilter<$PrismaModel>
    _max?: NestedEnumTransacaoTipoFilter<$PrismaModel>
  }

  export type EnumTransacaoStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransacaoStatus | EnumTransacaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransacaoStatus[] | ListEnumTransacaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransacaoStatus[] | ListEnumTransacaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransacaoStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransacaoStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransacaoStatusFilter<$PrismaModel>
    _max?: NestedEnumTransacaoStatusFilter<$PrismaModel>
  }

  export type EnumUserTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeFilter<$PrismaModel> | $Enums.UserType
  }

  export type Refresh_tokensListRelationFilter = {
    every?: refresh_tokensWhereInput
    some?: refresh_tokensWhereInput
    none?: refresh_tokensWhereInput
  }

  export type refresh_tokensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    type?: SortOrder
    status?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoraId?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    type?: SortOrder
    status?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoraId?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    type?: SortOrder
    status?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    franqueadoraId?: SortOrder
    franqueadoId?: SortOrder
    estabelecimentoId?: SortOrder
  }

  export type EnumUserTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeWithAggregatesFilter<$PrismaModel> | $Enums.UserType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserTypeFilter<$PrismaModel>
    _max?: NestedEnumUserTypeFilter<$PrismaModel>
  }

  export type estabelecimentosCreateNestedOneWithoutCartoesInput = {
    create?: XOR<estabelecimentosCreateWithoutCartoesInput, estabelecimentosUncheckedCreateWithoutCartoesInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutCartoesInput
    connect?: estabelecimentosWhereUniqueInput
  }

  export type franqueadosCreateNestedOneWithoutCartoesInput = {
    create?: XOR<franqueadosCreateWithoutCartoesInput, franqueadosUncheckedCreateWithoutCartoesInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutCartoesInput
    connect?: franqueadosWhereUniqueInput
  }

  export type logsCreateNestedManyWithoutCartoesInput = {
    create?: XOR<logsCreateWithoutCartoesInput, logsUncheckedCreateWithoutCartoesInput> | logsCreateWithoutCartoesInput[] | logsUncheckedCreateWithoutCartoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutCartoesInput | logsCreateOrConnectWithoutCartoesInput[]
    createMany?: logsCreateManyCartoesInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type transacoesCreateNestedManyWithoutCartoesInput = {
    create?: XOR<transacoesCreateWithoutCartoesInput, transacoesUncheckedCreateWithoutCartoesInput> | transacoesCreateWithoutCartoesInput[] | transacoesUncheckedCreateWithoutCartoesInput[]
    connectOrCreate?: transacoesCreateOrConnectWithoutCartoesInput | transacoesCreateOrConnectWithoutCartoesInput[]
    createMany?: transacoesCreateManyCartoesInputEnvelope
    connect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
  }

  export type logsUncheckedCreateNestedManyWithoutCartoesInput = {
    create?: XOR<logsCreateWithoutCartoesInput, logsUncheckedCreateWithoutCartoesInput> | logsCreateWithoutCartoesInput[] | logsUncheckedCreateWithoutCartoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutCartoesInput | logsCreateOrConnectWithoutCartoesInput[]
    createMany?: logsCreateManyCartoesInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type transacoesUncheckedCreateNestedManyWithoutCartoesInput = {
    create?: XOR<transacoesCreateWithoutCartoesInput, transacoesUncheckedCreateWithoutCartoesInput> | transacoesCreateWithoutCartoesInput[] | transacoesUncheckedCreateWithoutCartoesInput[]
    connectOrCreate?: transacoesCreateOrConnectWithoutCartoesInput | transacoesCreateOrConnectWithoutCartoesInput[]
    createMany?: transacoesCreateManyCartoesInputEnvelope
    connect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumCartaoStatusFieldUpdateOperationsInput = {
    set?: $Enums.CartaoStatus
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type estabelecimentosUpdateOneWithoutCartoesNestedInput = {
    create?: XOR<estabelecimentosCreateWithoutCartoesInput, estabelecimentosUncheckedCreateWithoutCartoesInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutCartoesInput
    upsert?: estabelecimentosUpsertWithoutCartoesInput
    disconnect?: estabelecimentosWhereInput | boolean
    delete?: estabelecimentosWhereInput | boolean
    connect?: estabelecimentosWhereUniqueInput
    update?: XOR<XOR<estabelecimentosUpdateToOneWithWhereWithoutCartoesInput, estabelecimentosUpdateWithoutCartoesInput>, estabelecimentosUncheckedUpdateWithoutCartoesInput>
  }

  export type franqueadosUpdateOneRequiredWithoutCartoesNestedInput = {
    create?: XOR<franqueadosCreateWithoutCartoesInput, franqueadosUncheckedCreateWithoutCartoesInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutCartoesInput
    upsert?: franqueadosUpsertWithoutCartoesInput
    connect?: franqueadosWhereUniqueInput
    update?: XOR<XOR<franqueadosUpdateToOneWithWhereWithoutCartoesInput, franqueadosUpdateWithoutCartoesInput>, franqueadosUncheckedUpdateWithoutCartoesInput>
  }

  export type logsUpdateManyWithoutCartoesNestedInput = {
    create?: XOR<logsCreateWithoutCartoesInput, logsUncheckedCreateWithoutCartoesInput> | logsCreateWithoutCartoesInput[] | logsUncheckedCreateWithoutCartoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutCartoesInput | logsCreateOrConnectWithoutCartoesInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutCartoesInput | logsUpsertWithWhereUniqueWithoutCartoesInput[]
    createMany?: logsCreateManyCartoesInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutCartoesInput | logsUpdateWithWhereUniqueWithoutCartoesInput[]
    updateMany?: logsUpdateManyWithWhereWithoutCartoesInput | logsUpdateManyWithWhereWithoutCartoesInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type transacoesUpdateManyWithoutCartoesNestedInput = {
    create?: XOR<transacoesCreateWithoutCartoesInput, transacoesUncheckedCreateWithoutCartoesInput> | transacoesCreateWithoutCartoesInput[] | transacoesUncheckedCreateWithoutCartoesInput[]
    connectOrCreate?: transacoesCreateOrConnectWithoutCartoesInput | transacoesCreateOrConnectWithoutCartoesInput[]
    upsert?: transacoesUpsertWithWhereUniqueWithoutCartoesInput | transacoesUpsertWithWhereUniqueWithoutCartoesInput[]
    createMany?: transacoesCreateManyCartoesInputEnvelope
    set?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    disconnect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    delete?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    connect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    update?: transacoesUpdateWithWhereUniqueWithoutCartoesInput | transacoesUpdateWithWhereUniqueWithoutCartoesInput[]
    updateMany?: transacoesUpdateManyWithWhereWithoutCartoesInput | transacoesUpdateManyWithWhereWithoutCartoesInput[]
    deleteMany?: transacoesScalarWhereInput | transacoesScalarWhereInput[]
  }

  export type logsUncheckedUpdateManyWithoutCartoesNestedInput = {
    create?: XOR<logsCreateWithoutCartoesInput, logsUncheckedCreateWithoutCartoesInput> | logsCreateWithoutCartoesInput[] | logsUncheckedCreateWithoutCartoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutCartoesInput | logsCreateOrConnectWithoutCartoesInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutCartoesInput | logsUpsertWithWhereUniqueWithoutCartoesInput[]
    createMany?: logsCreateManyCartoesInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutCartoesInput | logsUpdateWithWhereUniqueWithoutCartoesInput[]
    updateMany?: logsUpdateManyWithWhereWithoutCartoesInput | logsUpdateManyWithWhereWithoutCartoesInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type transacoesUncheckedUpdateManyWithoutCartoesNestedInput = {
    create?: XOR<transacoesCreateWithoutCartoesInput, transacoesUncheckedCreateWithoutCartoesInput> | transacoesCreateWithoutCartoesInput[] | transacoesUncheckedCreateWithoutCartoesInput[]
    connectOrCreate?: transacoesCreateOrConnectWithoutCartoesInput | transacoesCreateOrConnectWithoutCartoesInput[]
    upsert?: transacoesUpsertWithWhereUniqueWithoutCartoesInput | transacoesUpsertWithWhereUniqueWithoutCartoesInput[]
    createMany?: transacoesCreateManyCartoesInputEnvelope
    set?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    disconnect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    delete?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    connect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    update?: transacoesUpdateWithWhereUniqueWithoutCartoesInput | transacoesUpdateWithWhereUniqueWithoutCartoesInput[]
    updateMany?: transacoesUpdateManyWithWhereWithoutCartoesInput | transacoesUpdateManyWithWhereWithoutCartoesInput[]
    deleteMany?: transacoesScalarWhereInput | transacoesScalarWhereInput[]
  }

  export type estabelecimentosCreateNestedOneWithoutComissoesInput = {
    create?: XOR<estabelecimentosCreateWithoutComissoesInput, estabelecimentosUncheckedCreateWithoutComissoesInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutComissoesInput
    connect?: estabelecimentosWhereUniqueInput
  }

  export type franqueadosCreateNestedOneWithoutComissoesInput = {
    create?: XOR<franqueadosCreateWithoutComissoesInput, franqueadosUncheckedCreateWithoutComissoesInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutComissoesInput
    connect?: franqueadosWhereUniqueInput
  }

  export type transacoesCreateNestedOneWithoutComissoesInput = {
    create?: XOR<transacoesCreateWithoutComissoesInput, transacoesUncheckedCreateWithoutComissoesInput>
    connectOrCreate?: transacoesCreateOrConnectWithoutComissoesInput
    connect?: transacoesWhereUniqueInput
  }

  export type logsCreateNestedManyWithoutComissoesInput = {
    create?: XOR<logsCreateWithoutComissoesInput, logsUncheckedCreateWithoutComissoesInput> | logsCreateWithoutComissoesInput[] | logsUncheckedCreateWithoutComissoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutComissoesInput | logsCreateOrConnectWithoutComissoesInput[]
    createMany?: logsCreateManyComissoesInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type logsUncheckedCreateNestedManyWithoutComissoesInput = {
    create?: XOR<logsCreateWithoutComissoesInput, logsUncheckedCreateWithoutComissoesInput> | logsCreateWithoutComissoesInput[] | logsUncheckedCreateWithoutComissoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutComissoesInput | logsCreateOrConnectWithoutComissoesInput[]
    createMany?: logsCreateManyComissoesInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type EnumComissaoStatusFieldUpdateOperationsInput = {
    set?: $Enums.ComissaoStatus
  }

  export type estabelecimentosUpdateOneRequiredWithoutComissoesNestedInput = {
    create?: XOR<estabelecimentosCreateWithoutComissoesInput, estabelecimentosUncheckedCreateWithoutComissoesInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutComissoesInput
    upsert?: estabelecimentosUpsertWithoutComissoesInput
    connect?: estabelecimentosWhereUniqueInput
    update?: XOR<XOR<estabelecimentosUpdateToOneWithWhereWithoutComissoesInput, estabelecimentosUpdateWithoutComissoesInput>, estabelecimentosUncheckedUpdateWithoutComissoesInput>
  }

  export type franqueadosUpdateOneRequiredWithoutComissoesNestedInput = {
    create?: XOR<franqueadosCreateWithoutComissoesInput, franqueadosUncheckedCreateWithoutComissoesInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutComissoesInput
    upsert?: franqueadosUpsertWithoutComissoesInput
    connect?: franqueadosWhereUniqueInput
    update?: XOR<XOR<franqueadosUpdateToOneWithWhereWithoutComissoesInput, franqueadosUpdateWithoutComissoesInput>, franqueadosUncheckedUpdateWithoutComissoesInput>
  }

  export type transacoesUpdateOneRequiredWithoutComissoesNestedInput = {
    create?: XOR<transacoesCreateWithoutComissoesInput, transacoesUncheckedCreateWithoutComissoesInput>
    connectOrCreate?: transacoesCreateOrConnectWithoutComissoesInput
    upsert?: transacoesUpsertWithoutComissoesInput
    connect?: transacoesWhereUniqueInput
    update?: XOR<XOR<transacoesUpdateToOneWithWhereWithoutComissoesInput, transacoesUpdateWithoutComissoesInput>, transacoesUncheckedUpdateWithoutComissoesInput>
  }

  export type logsUpdateManyWithoutComissoesNestedInput = {
    create?: XOR<logsCreateWithoutComissoesInput, logsUncheckedCreateWithoutComissoesInput> | logsCreateWithoutComissoesInput[] | logsUncheckedCreateWithoutComissoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutComissoesInput | logsCreateOrConnectWithoutComissoesInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutComissoesInput | logsUpsertWithWhereUniqueWithoutComissoesInput[]
    createMany?: logsCreateManyComissoesInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutComissoesInput | logsUpdateWithWhereUniqueWithoutComissoesInput[]
    updateMany?: logsUpdateManyWithWhereWithoutComissoesInput | logsUpdateManyWithWhereWithoutComissoesInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type logsUncheckedUpdateManyWithoutComissoesNestedInput = {
    create?: XOR<logsCreateWithoutComissoesInput, logsUncheckedCreateWithoutComissoesInput> | logsCreateWithoutComissoesInput[] | logsUncheckedCreateWithoutComissoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutComissoesInput | logsCreateOrConnectWithoutComissoesInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutComissoesInput | logsUpsertWithWhereUniqueWithoutComissoesInput[]
    createMany?: logsCreateManyComissoesInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutComissoesInput | logsUpdateWithWhereUniqueWithoutComissoesInput[]
    updateMany?: logsUpdateManyWithWhereWithoutComissoesInput | logsUpdateManyWithWhereWithoutComissoesInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type EnumConfigTipoFieldUpdateOperationsInput = {
    set?: $Enums.ConfigTipo
  }

  export type estabelecimentosCreateNestedOneWithoutCobrancasInput = {
    create?: XOR<estabelecimentosCreateWithoutCobrancasInput, estabelecimentosUncheckedCreateWithoutCobrancasInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutCobrancasInput
    connect?: estabelecimentosWhereUniqueInput
  }

  export type franqueadosCreateNestedOneWithoutCobrancasInput = {
    create?: XOR<franqueadosCreateWithoutCobrancasInput, franqueadosUncheckedCreateWithoutCobrancasInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutCobrancasInput
    connect?: franqueadosWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumCobrancaStatusFieldUpdateOperationsInput = {
    set?: $Enums.CobrancaStatus
  }

  export type EnumTipoCobrancaFieldUpdateOperationsInput = {
    set?: $Enums.TipoCobranca
  }

  export type estabelecimentosUpdateOneRequiredWithoutCobrancasNestedInput = {
    create?: XOR<estabelecimentosCreateWithoutCobrancasInput, estabelecimentosUncheckedCreateWithoutCobrancasInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutCobrancasInput
    upsert?: estabelecimentosUpsertWithoutCobrancasInput
    connect?: estabelecimentosWhereUniqueInput
    update?: XOR<XOR<estabelecimentosUpdateToOneWithWhereWithoutCobrancasInput, estabelecimentosUpdateWithoutCobrancasInput>, estabelecimentosUncheckedUpdateWithoutCobrancasInput>
  }

  export type franqueadosUpdateOneRequiredWithoutCobrancasNestedInput = {
    create?: XOR<franqueadosCreateWithoutCobrancasInput, franqueadosUncheckedCreateWithoutCobrancasInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutCobrancasInput
    upsert?: franqueadosUpsertWithoutCobrancasInput
    connect?: franqueadosWhereUniqueInput
    update?: XOR<XOR<franqueadosUpdateToOneWithWhereWithoutCobrancasInput, franqueadosUpdateWithoutCobrancasInput>, franqueadosUncheckedUpdateWithoutCobrancasInput>
  }

  export type estabelecimentosCreateNestedOneWithoutDisplaysInput = {
    create?: XOR<estabelecimentosCreateWithoutDisplaysInput, estabelecimentosUncheckedCreateWithoutDisplaysInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutDisplaysInput
    connect?: estabelecimentosWhereUniqueInput
  }

  export type franqueadosCreateNestedOneWithoutDisplaysInput = {
    create?: XOR<franqueadosCreateWithoutDisplaysInput, franqueadosUncheckedCreateWithoutDisplaysInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutDisplaysInput
    connect?: franqueadosWhereUniqueInput
  }

  export type logsCreateNestedManyWithoutDisplaysInput = {
    create?: XOR<logsCreateWithoutDisplaysInput, logsUncheckedCreateWithoutDisplaysInput> | logsCreateWithoutDisplaysInput[] | logsUncheckedCreateWithoutDisplaysInput[]
    connectOrCreate?: logsCreateOrConnectWithoutDisplaysInput | logsCreateOrConnectWithoutDisplaysInput[]
    createMany?: logsCreateManyDisplaysInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type logsUncheckedCreateNestedManyWithoutDisplaysInput = {
    create?: XOR<logsCreateWithoutDisplaysInput, logsUncheckedCreateWithoutDisplaysInput> | logsCreateWithoutDisplaysInput[] | logsUncheckedCreateWithoutDisplaysInput[]
    connectOrCreate?: logsCreateOrConnectWithoutDisplaysInput | logsCreateOrConnectWithoutDisplaysInput[]
    createMany?: logsCreateManyDisplaysInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type EnumDisplayTipoFieldUpdateOperationsInput = {
    set?: $Enums.DisplayTipo
  }

  export type EnumDisplayStatusFieldUpdateOperationsInput = {
    set?: $Enums.DisplayStatus
  }

  export type estabelecimentosUpdateOneWithoutDisplaysNestedInput = {
    create?: XOR<estabelecimentosCreateWithoutDisplaysInput, estabelecimentosUncheckedCreateWithoutDisplaysInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutDisplaysInput
    upsert?: estabelecimentosUpsertWithoutDisplaysInput
    disconnect?: estabelecimentosWhereInput | boolean
    delete?: estabelecimentosWhereInput | boolean
    connect?: estabelecimentosWhereUniqueInput
    update?: XOR<XOR<estabelecimentosUpdateToOneWithWhereWithoutDisplaysInput, estabelecimentosUpdateWithoutDisplaysInput>, estabelecimentosUncheckedUpdateWithoutDisplaysInput>
  }

  export type franqueadosUpdateOneRequiredWithoutDisplaysNestedInput = {
    create?: XOR<franqueadosCreateWithoutDisplaysInput, franqueadosUncheckedCreateWithoutDisplaysInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutDisplaysInput
    upsert?: franqueadosUpsertWithoutDisplaysInput
    connect?: franqueadosWhereUniqueInput
    update?: XOR<XOR<franqueadosUpdateToOneWithWhereWithoutDisplaysInput, franqueadosUpdateWithoutDisplaysInput>, franqueadosUncheckedUpdateWithoutDisplaysInput>
  }

  export type logsUpdateManyWithoutDisplaysNestedInput = {
    create?: XOR<logsCreateWithoutDisplaysInput, logsUncheckedCreateWithoutDisplaysInput> | logsCreateWithoutDisplaysInput[] | logsUncheckedCreateWithoutDisplaysInput[]
    connectOrCreate?: logsCreateOrConnectWithoutDisplaysInput | logsCreateOrConnectWithoutDisplaysInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutDisplaysInput | logsUpsertWithWhereUniqueWithoutDisplaysInput[]
    createMany?: logsCreateManyDisplaysInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutDisplaysInput | logsUpdateWithWhereUniqueWithoutDisplaysInput[]
    updateMany?: logsUpdateManyWithWhereWithoutDisplaysInput | logsUpdateManyWithWhereWithoutDisplaysInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type logsUncheckedUpdateManyWithoutDisplaysNestedInput = {
    create?: XOR<logsCreateWithoutDisplaysInput, logsUncheckedCreateWithoutDisplaysInput> | logsCreateWithoutDisplaysInput[] | logsUncheckedCreateWithoutDisplaysInput[]
    connectOrCreate?: logsCreateOrConnectWithoutDisplaysInput | logsCreateOrConnectWithoutDisplaysInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutDisplaysInput | logsUpsertWithWhereUniqueWithoutDisplaysInput[]
    createMany?: logsCreateManyDisplaysInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutDisplaysInput | logsUpdateWithWhereUniqueWithoutDisplaysInput[]
    updateMany?: logsUpdateManyWithWhereWithoutDisplaysInput | logsUpdateManyWithWhereWithoutDisplaysInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type estabelecimentosCreateNestedOneWithoutEstabelecimento_coordsInput = {
    create?: XOR<estabelecimentosCreateWithoutEstabelecimento_coordsInput, estabelecimentosUncheckedCreateWithoutEstabelecimento_coordsInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutEstabelecimento_coordsInput
    connect?: estabelecimentosWhereUniqueInput
  }

  export type estabelecimentosUpdateOneRequiredWithoutEstabelecimento_coordsNestedInput = {
    create?: XOR<estabelecimentosCreateWithoutEstabelecimento_coordsInput, estabelecimentosUncheckedCreateWithoutEstabelecimento_coordsInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutEstabelecimento_coordsInput
    upsert?: estabelecimentosUpsertWithoutEstabelecimento_coordsInput
    connect?: estabelecimentosWhereUniqueInput
    update?: XOR<XOR<estabelecimentosUpdateToOneWithWhereWithoutEstabelecimento_coordsInput, estabelecimentosUpdateWithoutEstabelecimento_coordsInput>, estabelecimentosUncheckedUpdateWithoutEstabelecimento_coordsInput>
  }

  export type cartoesCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<cartoesCreateWithoutEstabelecimentosInput, cartoesUncheckedCreateWithoutEstabelecimentosInput> | cartoesCreateWithoutEstabelecimentosInput[] | cartoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: cartoesCreateOrConnectWithoutEstabelecimentosInput | cartoesCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: cartoesCreateManyEstabelecimentosInputEnvelope
    connect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
  }

  export type comissoesCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<comissoesCreateWithoutEstabelecimentosInput, comissoesUncheckedCreateWithoutEstabelecimentosInput> | comissoesCreateWithoutEstabelecimentosInput[] | comissoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutEstabelecimentosInput | comissoesCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: comissoesCreateManyEstabelecimentosInputEnvelope
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
  }

  export type cobrancasCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<cobrancasCreateWithoutEstabelecimentoInput, cobrancasUncheckedCreateWithoutEstabelecimentoInput> | cobrancasCreateWithoutEstabelecimentoInput[] | cobrancasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: cobrancasCreateOrConnectWithoutEstabelecimentoInput | cobrancasCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: cobrancasCreateManyEstabelecimentoInputEnvelope
    connect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
  }

  export type displaysCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<displaysCreateWithoutEstabelecimentosInput, displaysUncheckedCreateWithoutEstabelecimentosInput> | displaysCreateWithoutEstabelecimentosInput[] | displaysUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: displaysCreateOrConnectWithoutEstabelecimentosInput | displaysCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: displaysCreateManyEstabelecimentosInputEnvelope
    connect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
  }

  export type estabelecimento_coordsCreateNestedOneWithoutEstabelecimentosInput = {
    create?: XOR<estabelecimento_coordsCreateWithoutEstabelecimentosInput, estabelecimento_coordsUncheckedCreateWithoutEstabelecimentosInput>
    connectOrCreate?: estabelecimento_coordsCreateOrConnectWithoutEstabelecimentosInput
    connect?: estabelecimento_coordsWhereUniqueInput
  }

  export type franqueadosCreateNestedOneWithoutEstabelecimentosInput = {
    create?: XOR<franqueadosCreateWithoutEstabelecimentosInput, franqueadosUncheckedCreateWithoutEstabelecimentosInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutEstabelecimentosInput
    connect?: franqueadosWhereUniqueInput
  }

  export type logsCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<logsCreateWithoutEstabelecimentosInput, logsUncheckedCreateWithoutEstabelecimentosInput> | logsCreateWithoutEstabelecimentosInput[] | logsUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: logsCreateOrConnectWithoutEstabelecimentosInput | logsCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: logsCreateManyEstabelecimentosInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type solicitacoes_cartaoCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<solicitacoes_cartaoCreateWithoutEstabelecimentosInput, solicitacoes_cartaoUncheckedCreateWithoutEstabelecimentosInput> | solicitacoes_cartaoCreateWithoutEstabelecimentosInput[] | solicitacoes_cartaoUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: solicitacoes_cartaoCreateOrConnectWithoutEstabelecimentosInput | solicitacoes_cartaoCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: solicitacoes_cartaoCreateManyEstabelecimentosInputEnvelope
    connect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
  }

  export type transacoesCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<transacoesCreateWithoutEstabelecimentosInput, transacoesUncheckedCreateWithoutEstabelecimentosInput> | transacoesCreateWithoutEstabelecimentosInput[] | transacoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: transacoesCreateOrConnectWithoutEstabelecimentosInput | transacoesCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: transacoesCreateManyEstabelecimentosInputEnvelope
    connect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
  }

  export type usersCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<usersCreateWithoutEstabelecimentosInput, usersUncheckedCreateWithoutEstabelecimentosInput> | usersCreateWithoutEstabelecimentosInput[] | usersUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: usersCreateOrConnectWithoutEstabelecimentosInput | usersCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: usersCreateManyEstabelecimentosInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type cartoesUncheckedCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<cartoesCreateWithoutEstabelecimentosInput, cartoesUncheckedCreateWithoutEstabelecimentosInput> | cartoesCreateWithoutEstabelecimentosInput[] | cartoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: cartoesCreateOrConnectWithoutEstabelecimentosInput | cartoesCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: cartoesCreateManyEstabelecimentosInputEnvelope
    connect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
  }

  export type comissoesUncheckedCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<comissoesCreateWithoutEstabelecimentosInput, comissoesUncheckedCreateWithoutEstabelecimentosInput> | comissoesCreateWithoutEstabelecimentosInput[] | comissoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutEstabelecimentosInput | comissoesCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: comissoesCreateManyEstabelecimentosInputEnvelope
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
  }

  export type cobrancasUncheckedCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<cobrancasCreateWithoutEstabelecimentoInput, cobrancasUncheckedCreateWithoutEstabelecimentoInput> | cobrancasCreateWithoutEstabelecimentoInput[] | cobrancasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: cobrancasCreateOrConnectWithoutEstabelecimentoInput | cobrancasCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: cobrancasCreateManyEstabelecimentoInputEnvelope
    connect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
  }

  export type displaysUncheckedCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<displaysCreateWithoutEstabelecimentosInput, displaysUncheckedCreateWithoutEstabelecimentosInput> | displaysCreateWithoutEstabelecimentosInput[] | displaysUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: displaysCreateOrConnectWithoutEstabelecimentosInput | displaysCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: displaysCreateManyEstabelecimentosInputEnvelope
    connect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
  }

  export type estabelecimento_coordsUncheckedCreateNestedOneWithoutEstabelecimentosInput = {
    create?: XOR<estabelecimento_coordsCreateWithoutEstabelecimentosInput, estabelecimento_coordsUncheckedCreateWithoutEstabelecimentosInput>
    connectOrCreate?: estabelecimento_coordsCreateOrConnectWithoutEstabelecimentosInput
    connect?: estabelecimento_coordsWhereUniqueInput
  }

  export type logsUncheckedCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<logsCreateWithoutEstabelecimentosInput, logsUncheckedCreateWithoutEstabelecimentosInput> | logsCreateWithoutEstabelecimentosInput[] | logsUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: logsCreateOrConnectWithoutEstabelecimentosInput | logsCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: logsCreateManyEstabelecimentosInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type solicitacoes_cartaoUncheckedCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<solicitacoes_cartaoCreateWithoutEstabelecimentosInput, solicitacoes_cartaoUncheckedCreateWithoutEstabelecimentosInput> | solicitacoes_cartaoCreateWithoutEstabelecimentosInput[] | solicitacoes_cartaoUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: solicitacoes_cartaoCreateOrConnectWithoutEstabelecimentosInput | solicitacoes_cartaoCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: solicitacoes_cartaoCreateManyEstabelecimentosInputEnvelope
    connect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
  }

  export type transacoesUncheckedCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<transacoesCreateWithoutEstabelecimentosInput, transacoesUncheckedCreateWithoutEstabelecimentosInput> | transacoesCreateWithoutEstabelecimentosInput[] | transacoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: transacoesCreateOrConnectWithoutEstabelecimentosInput | transacoesCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: transacoesCreateManyEstabelecimentosInputEnvelope
    connect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
  }

  export type usersUncheckedCreateNestedManyWithoutEstabelecimentosInput = {
    create?: XOR<usersCreateWithoutEstabelecimentosInput, usersUncheckedCreateWithoutEstabelecimentosInput> | usersCreateWithoutEstabelecimentosInput[] | usersUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: usersCreateOrConnectWithoutEstabelecimentosInput | usersCreateOrConnectWithoutEstabelecimentosInput[]
    createMany?: usersCreateManyEstabelecimentosInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type EnumEstabelecimentoStatusFieldUpdateOperationsInput = {
    set?: $Enums.EstabelecimentoStatus
  }

  export type cartoesUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<cartoesCreateWithoutEstabelecimentosInput, cartoesUncheckedCreateWithoutEstabelecimentosInput> | cartoesCreateWithoutEstabelecimentosInput[] | cartoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: cartoesCreateOrConnectWithoutEstabelecimentosInput | cartoesCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: cartoesUpsertWithWhereUniqueWithoutEstabelecimentosInput | cartoesUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: cartoesCreateManyEstabelecimentosInputEnvelope
    set?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    disconnect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    delete?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    connect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    update?: cartoesUpdateWithWhereUniqueWithoutEstabelecimentosInput | cartoesUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: cartoesUpdateManyWithWhereWithoutEstabelecimentosInput | cartoesUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: cartoesScalarWhereInput | cartoesScalarWhereInput[]
  }

  export type comissoesUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<comissoesCreateWithoutEstabelecimentosInput, comissoesUncheckedCreateWithoutEstabelecimentosInput> | comissoesCreateWithoutEstabelecimentosInput[] | comissoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutEstabelecimentosInput | comissoesCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: comissoesUpsertWithWhereUniqueWithoutEstabelecimentosInput | comissoesUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: comissoesCreateManyEstabelecimentosInputEnvelope
    set?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    disconnect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    delete?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    update?: comissoesUpdateWithWhereUniqueWithoutEstabelecimentosInput | comissoesUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: comissoesUpdateManyWithWhereWithoutEstabelecimentosInput | comissoesUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: comissoesScalarWhereInput | comissoesScalarWhereInput[]
  }

  export type cobrancasUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<cobrancasCreateWithoutEstabelecimentoInput, cobrancasUncheckedCreateWithoutEstabelecimentoInput> | cobrancasCreateWithoutEstabelecimentoInput[] | cobrancasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: cobrancasCreateOrConnectWithoutEstabelecimentoInput | cobrancasCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: cobrancasUpsertWithWhereUniqueWithoutEstabelecimentoInput | cobrancasUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: cobrancasCreateManyEstabelecimentoInputEnvelope
    set?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    disconnect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    delete?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    connect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    update?: cobrancasUpdateWithWhereUniqueWithoutEstabelecimentoInput | cobrancasUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: cobrancasUpdateManyWithWhereWithoutEstabelecimentoInput | cobrancasUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: cobrancasScalarWhereInput | cobrancasScalarWhereInput[]
  }

  export type displaysUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<displaysCreateWithoutEstabelecimentosInput, displaysUncheckedCreateWithoutEstabelecimentosInput> | displaysCreateWithoutEstabelecimentosInput[] | displaysUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: displaysCreateOrConnectWithoutEstabelecimentosInput | displaysCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: displaysUpsertWithWhereUniqueWithoutEstabelecimentosInput | displaysUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: displaysCreateManyEstabelecimentosInputEnvelope
    set?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    disconnect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    delete?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    connect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    update?: displaysUpdateWithWhereUniqueWithoutEstabelecimentosInput | displaysUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: displaysUpdateManyWithWhereWithoutEstabelecimentosInput | displaysUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: displaysScalarWhereInput | displaysScalarWhereInput[]
  }

  export type estabelecimento_coordsUpdateOneWithoutEstabelecimentosNestedInput = {
    create?: XOR<estabelecimento_coordsCreateWithoutEstabelecimentosInput, estabelecimento_coordsUncheckedCreateWithoutEstabelecimentosInput>
    connectOrCreate?: estabelecimento_coordsCreateOrConnectWithoutEstabelecimentosInput
    upsert?: estabelecimento_coordsUpsertWithoutEstabelecimentosInput
    disconnect?: estabelecimento_coordsWhereInput | boolean
    delete?: estabelecimento_coordsWhereInput | boolean
    connect?: estabelecimento_coordsWhereUniqueInput
    update?: XOR<XOR<estabelecimento_coordsUpdateToOneWithWhereWithoutEstabelecimentosInput, estabelecimento_coordsUpdateWithoutEstabelecimentosInput>, estabelecimento_coordsUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type franqueadosUpdateOneRequiredWithoutEstabelecimentosNestedInput = {
    create?: XOR<franqueadosCreateWithoutEstabelecimentosInput, franqueadosUncheckedCreateWithoutEstabelecimentosInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutEstabelecimentosInput
    upsert?: franqueadosUpsertWithoutEstabelecimentosInput
    connect?: franqueadosWhereUniqueInput
    update?: XOR<XOR<franqueadosUpdateToOneWithWhereWithoutEstabelecimentosInput, franqueadosUpdateWithoutEstabelecimentosInput>, franqueadosUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type logsUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<logsCreateWithoutEstabelecimentosInput, logsUncheckedCreateWithoutEstabelecimentosInput> | logsCreateWithoutEstabelecimentosInput[] | logsUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: logsCreateOrConnectWithoutEstabelecimentosInput | logsCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutEstabelecimentosInput | logsUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: logsCreateManyEstabelecimentosInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutEstabelecimentosInput | logsUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: logsUpdateManyWithWhereWithoutEstabelecimentosInput | logsUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type solicitacoes_cartaoUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<solicitacoes_cartaoCreateWithoutEstabelecimentosInput, solicitacoes_cartaoUncheckedCreateWithoutEstabelecimentosInput> | solicitacoes_cartaoCreateWithoutEstabelecimentosInput[] | solicitacoes_cartaoUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: solicitacoes_cartaoCreateOrConnectWithoutEstabelecimentosInput | solicitacoes_cartaoCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: solicitacoes_cartaoUpsertWithWhereUniqueWithoutEstabelecimentosInput | solicitacoes_cartaoUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: solicitacoes_cartaoCreateManyEstabelecimentosInputEnvelope
    set?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    disconnect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    delete?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    connect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    update?: solicitacoes_cartaoUpdateWithWhereUniqueWithoutEstabelecimentosInput | solicitacoes_cartaoUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: solicitacoes_cartaoUpdateManyWithWhereWithoutEstabelecimentosInput | solicitacoes_cartaoUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: solicitacoes_cartaoScalarWhereInput | solicitacoes_cartaoScalarWhereInput[]
  }

  export type transacoesUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<transacoesCreateWithoutEstabelecimentosInput, transacoesUncheckedCreateWithoutEstabelecimentosInput> | transacoesCreateWithoutEstabelecimentosInput[] | transacoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: transacoesCreateOrConnectWithoutEstabelecimentosInput | transacoesCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: transacoesUpsertWithWhereUniqueWithoutEstabelecimentosInput | transacoesUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: transacoesCreateManyEstabelecimentosInputEnvelope
    set?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    disconnect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    delete?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    connect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    update?: transacoesUpdateWithWhereUniqueWithoutEstabelecimentosInput | transacoesUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: transacoesUpdateManyWithWhereWithoutEstabelecimentosInput | transacoesUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: transacoesScalarWhereInput | transacoesScalarWhereInput[]
  }

  export type usersUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<usersCreateWithoutEstabelecimentosInput, usersUncheckedCreateWithoutEstabelecimentosInput> | usersCreateWithoutEstabelecimentosInput[] | usersUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: usersCreateOrConnectWithoutEstabelecimentosInput | usersCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutEstabelecimentosInput | usersUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: usersCreateManyEstabelecimentosInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutEstabelecimentosInput | usersUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: usersUpdateManyWithWhereWithoutEstabelecimentosInput | usersUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type cartoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<cartoesCreateWithoutEstabelecimentosInput, cartoesUncheckedCreateWithoutEstabelecimentosInput> | cartoesCreateWithoutEstabelecimentosInput[] | cartoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: cartoesCreateOrConnectWithoutEstabelecimentosInput | cartoesCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: cartoesUpsertWithWhereUniqueWithoutEstabelecimentosInput | cartoesUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: cartoesCreateManyEstabelecimentosInputEnvelope
    set?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    disconnect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    delete?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    connect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    update?: cartoesUpdateWithWhereUniqueWithoutEstabelecimentosInput | cartoesUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: cartoesUpdateManyWithWhereWithoutEstabelecimentosInput | cartoesUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: cartoesScalarWhereInput | cartoesScalarWhereInput[]
  }

  export type comissoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<comissoesCreateWithoutEstabelecimentosInput, comissoesUncheckedCreateWithoutEstabelecimentosInput> | comissoesCreateWithoutEstabelecimentosInput[] | comissoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutEstabelecimentosInput | comissoesCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: comissoesUpsertWithWhereUniqueWithoutEstabelecimentosInput | comissoesUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: comissoesCreateManyEstabelecimentosInputEnvelope
    set?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    disconnect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    delete?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    update?: comissoesUpdateWithWhereUniqueWithoutEstabelecimentosInput | comissoesUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: comissoesUpdateManyWithWhereWithoutEstabelecimentosInput | comissoesUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: comissoesScalarWhereInput | comissoesScalarWhereInput[]
  }

  export type cobrancasUncheckedUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<cobrancasCreateWithoutEstabelecimentoInput, cobrancasUncheckedCreateWithoutEstabelecimentoInput> | cobrancasCreateWithoutEstabelecimentoInput[] | cobrancasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: cobrancasCreateOrConnectWithoutEstabelecimentoInput | cobrancasCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: cobrancasUpsertWithWhereUniqueWithoutEstabelecimentoInput | cobrancasUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: cobrancasCreateManyEstabelecimentoInputEnvelope
    set?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    disconnect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    delete?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    connect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    update?: cobrancasUpdateWithWhereUniqueWithoutEstabelecimentoInput | cobrancasUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: cobrancasUpdateManyWithWhereWithoutEstabelecimentoInput | cobrancasUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: cobrancasScalarWhereInput | cobrancasScalarWhereInput[]
  }

  export type displaysUncheckedUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<displaysCreateWithoutEstabelecimentosInput, displaysUncheckedCreateWithoutEstabelecimentosInput> | displaysCreateWithoutEstabelecimentosInput[] | displaysUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: displaysCreateOrConnectWithoutEstabelecimentosInput | displaysCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: displaysUpsertWithWhereUniqueWithoutEstabelecimentosInput | displaysUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: displaysCreateManyEstabelecimentosInputEnvelope
    set?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    disconnect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    delete?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    connect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    update?: displaysUpdateWithWhereUniqueWithoutEstabelecimentosInput | displaysUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: displaysUpdateManyWithWhereWithoutEstabelecimentosInput | displaysUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: displaysScalarWhereInput | displaysScalarWhereInput[]
  }

  export type estabelecimento_coordsUncheckedUpdateOneWithoutEstabelecimentosNestedInput = {
    create?: XOR<estabelecimento_coordsCreateWithoutEstabelecimentosInput, estabelecimento_coordsUncheckedCreateWithoutEstabelecimentosInput>
    connectOrCreate?: estabelecimento_coordsCreateOrConnectWithoutEstabelecimentosInput
    upsert?: estabelecimento_coordsUpsertWithoutEstabelecimentosInput
    disconnect?: estabelecimento_coordsWhereInput | boolean
    delete?: estabelecimento_coordsWhereInput | boolean
    connect?: estabelecimento_coordsWhereUniqueInput
    update?: XOR<XOR<estabelecimento_coordsUpdateToOneWithWhereWithoutEstabelecimentosInput, estabelecimento_coordsUpdateWithoutEstabelecimentosInput>, estabelecimento_coordsUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type logsUncheckedUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<logsCreateWithoutEstabelecimentosInput, logsUncheckedCreateWithoutEstabelecimentosInput> | logsCreateWithoutEstabelecimentosInput[] | logsUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: logsCreateOrConnectWithoutEstabelecimentosInput | logsCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutEstabelecimentosInput | logsUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: logsCreateManyEstabelecimentosInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutEstabelecimentosInput | logsUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: logsUpdateManyWithWhereWithoutEstabelecimentosInput | logsUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<solicitacoes_cartaoCreateWithoutEstabelecimentosInput, solicitacoes_cartaoUncheckedCreateWithoutEstabelecimentosInput> | solicitacoes_cartaoCreateWithoutEstabelecimentosInput[] | solicitacoes_cartaoUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: solicitacoes_cartaoCreateOrConnectWithoutEstabelecimentosInput | solicitacoes_cartaoCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: solicitacoes_cartaoUpsertWithWhereUniqueWithoutEstabelecimentosInput | solicitacoes_cartaoUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: solicitacoes_cartaoCreateManyEstabelecimentosInputEnvelope
    set?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    disconnect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    delete?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    connect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    update?: solicitacoes_cartaoUpdateWithWhereUniqueWithoutEstabelecimentosInput | solicitacoes_cartaoUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: solicitacoes_cartaoUpdateManyWithWhereWithoutEstabelecimentosInput | solicitacoes_cartaoUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: solicitacoes_cartaoScalarWhereInput | solicitacoes_cartaoScalarWhereInput[]
  }

  export type transacoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<transacoesCreateWithoutEstabelecimentosInput, transacoesUncheckedCreateWithoutEstabelecimentosInput> | transacoesCreateWithoutEstabelecimentosInput[] | transacoesUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: transacoesCreateOrConnectWithoutEstabelecimentosInput | transacoesCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: transacoesUpsertWithWhereUniqueWithoutEstabelecimentosInput | transacoesUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: transacoesCreateManyEstabelecimentosInputEnvelope
    set?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    disconnect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    delete?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    connect?: transacoesWhereUniqueInput | transacoesWhereUniqueInput[]
    update?: transacoesUpdateWithWhereUniqueWithoutEstabelecimentosInput | transacoesUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: transacoesUpdateManyWithWhereWithoutEstabelecimentosInput | transacoesUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: transacoesScalarWhereInput | transacoesScalarWhereInput[]
  }

  export type usersUncheckedUpdateManyWithoutEstabelecimentosNestedInput = {
    create?: XOR<usersCreateWithoutEstabelecimentosInput, usersUncheckedCreateWithoutEstabelecimentosInput> | usersCreateWithoutEstabelecimentosInput[] | usersUncheckedCreateWithoutEstabelecimentosInput[]
    connectOrCreate?: usersCreateOrConnectWithoutEstabelecimentosInput | usersCreateOrConnectWithoutEstabelecimentosInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutEstabelecimentosInput | usersUpsertWithWhereUniqueWithoutEstabelecimentosInput[]
    createMany?: usersCreateManyEstabelecimentosInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutEstabelecimentosInput | usersUpdateWithWhereUniqueWithoutEstabelecimentosInput[]
    updateMany?: usersUpdateManyWithWhereWithoutEstabelecimentosInput | usersUpdateManyWithWhereWithoutEstabelecimentosInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type franqueadosCreateNestedManyWithoutFranqueadorasInput = {
    create?: XOR<franqueadosCreateWithoutFranqueadorasInput, franqueadosUncheckedCreateWithoutFranqueadorasInput> | franqueadosCreateWithoutFranqueadorasInput[] | franqueadosUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: franqueadosCreateOrConnectWithoutFranqueadorasInput | franqueadosCreateOrConnectWithoutFranqueadorasInput[]
    createMany?: franqueadosCreateManyFranqueadorasInputEnvelope
    connect?: franqueadosWhereUniqueInput | franqueadosWhereUniqueInput[]
  }

  export type logsCreateNestedManyWithoutFranqueadorasInput = {
    create?: XOR<logsCreateWithoutFranqueadorasInput, logsUncheckedCreateWithoutFranqueadorasInput> | logsCreateWithoutFranqueadorasInput[] | logsUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: logsCreateOrConnectWithoutFranqueadorasInput | logsCreateOrConnectWithoutFranqueadorasInput[]
    createMany?: logsCreateManyFranqueadorasInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type usersCreateNestedManyWithoutFranqueadorasInput = {
    create?: XOR<usersCreateWithoutFranqueadorasInput, usersUncheckedCreateWithoutFranqueadorasInput> | usersCreateWithoutFranqueadorasInput[] | usersUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: usersCreateOrConnectWithoutFranqueadorasInput | usersCreateOrConnectWithoutFranqueadorasInput[]
    createMany?: usersCreateManyFranqueadorasInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type franqueadosUncheckedCreateNestedManyWithoutFranqueadorasInput = {
    create?: XOR<franqueadosCreateWithoutFranqueadorasInput, franqueadosUncheckedCreateWithoutFranqueadorasInput> | franqueadosCreateWithoutFranqueadorasInput[] | franqueadosUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: franqueadosCreateOrConnectWithoutFranqueadorasInput | franqueadosCreateOrConnectWithoutFranqueadorasInput[]
    createMany?: franqueadosCreateManyFranqueadorasInputEnvelope
    connect?: franqueadosWhereUniqueInput | franqueadosWhereUniqueInput[]
  }

  export type logsUncheckedCreateNestedManyWithoutFranqueadorasInput = {
    create?: XOR<logsCreateWithoutFranqueadorasInput, logsUncheckedCreateWithoutFranqueadorasInput> | logsCreateWithoutFranqueadorasInput[] | logsUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: logsCreateOrConnectWithoutFranqueadorasInput | logsCreateOrConnectWithoutFranqueadorasInput[]
    createMany?: logsCreateManyFranqueadorasInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type usersUncheckedCreateNestedManyWithoutFranqueadorasInput = {
    create?: XOR<usersCreateWithoutFranqueadorasInput, usersUncheckedCreateWithoutFranqueadorasInput> | usersCreateWithoutFranqueadorasInput[] | usersUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: usersCreateOrConnectWithoutFranqueadorasInput | usersCreateOrConnectWithoutFranqueadorasInput[]
    createMany?: usersCreateManyFranqueadorasInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type EnumStatusFieldUpdateOperationsInput = {
    set?: $Enums.Status
  }

  export type franqueadosUpdateManyWithoutFranqueadorasNestedInput = {
    create?: XOR<franqueadosCreateWithoutFranqueadorasInput, franqueadosUncheckedCreateWithoutFranqueadorasInput> | franqueadosCreateWithoutFranqueadorasInput[] | franqueadosUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: franqueadosCreateOrConnectWithoutFranqueadorasInput | franqueadosCreateOrConnectWithoutFranqueadorasInput[]
    upsert?: franqueadosUpsertWithWhereUniqueWithoutFranqueadorasInput | franqueadosUpsertWithWhereUniqueWithoutFranqueadorasInput[]
    createMany?: franqueadosCreateManyFranqueadorasInputEnvelope
    set?: franqueadosWhereUniqueInput | franqueadosWhereUniqueInput[]
    disconnect?: franqueadosWhereUniqueInput | franqueadosWhereUniqueInput[]
    delete?: franqueadosWhereUniqueInput | franqueadosWhereUniqueInput[]
    connect?: franqueadosWhereUniqueInput | franqueadosWhereUniqueInput[]
    update?: franqueadosUpdateWithWhereUniqueWithoutFranqueadorasInput | franqueadosUpdateWithWhereUniqueWithoutFranqueadorasInput[]
    updateMany?: franqueadosUpdateManyWithWhereWithoutFranqueadorasInput | franqueadosUpdateManyWithWhereWithoutFranqueadorasInput[]
    deleteMany?: franqueadosScalarWhereInput | franqueadosScalarWhereInput[]
  }

  export type logsUpdateManyWithoutFranqueadorasNestedInput = {
    create?: XOR<logsCreateWithoutFranqueadorasInput, logsUncheckedCreateWithoutFranqueadorasInput> | logsCreateWithoutFranqueadorasInput[] | logsUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: logsCreateOrConnectWithoutFranqueadorasInput | logsCreateOrConnectWithoutFranqueadorasInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutFranqueadorasInput | logsUpsertWithWhereUniqueWithoutFranqueadorasInput[]
    createMany?: logsCreateManyFranqueadorasInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutFranqueadorasInput | logsUpdateWithWhereUniqueWithoutFranqueadorasInput[]
    updateMany?: logsUpdateManyWithWhereWithoutFranqueadorasInput | logsUpdateManyWithWhereWithoutFranqueadorasInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type usersUpdateManyWithoutFranqueadorasNestedInput = {
    create?: XOR<usersCreateWithoutFranqueadorasInput, usersUncheckedCreateWithoutFranqueadorasInput> | usersCreateWithoutFranqueadorasInput[] | usersUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: usersCreateOrConnectWithoutFranqueadorasInput | usersCreateOrConnectWithoutFranqueadorasInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutFranqueadorasInput | usersUpsertWithWhereUniqueWithoutFranqueadorasInput[]
    createMany?: usersCreateManyFranqueadorasInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutFranqueadorasInput | usersUpdateWithWhereUniqueWithoutFranqueadorasInput[]
    updateMany?: usersUpdateManyWithWhereWithoutFranqueadorasInput | usersUpdateManyWithWhereWithoutFranqueadorasInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type franqueadosUncheckedUpdateManyWithoutFranqueadorasNestedInput = {
    create?: XOR<franqueadosCreateWithoutFranqueadorasInput, franqueadosUncheckedCreateWithoutFranqueadorasInput> | franqueadosCreateWithoutFranqueadorasInput[] | franqueadosUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: franqueadosCreateOrConnectWithoutFranqueadorasInput | franqueadosCreateOrConnectWithoutFranqueadorasInput[]
    upsert?: franqueadosUpsertWithWhereUniqueWithoutFranqueadorasInput | franqueadosUpsertWithWhereUniqueWithoutFranqueadorasInput[]
    createMany?: franqueadosCreateManyFranqueadorasInputEnvelope
    set?: franqueadosWhereUniqueInput | franqueadosWhereUniqueInput[]
    disconnect?: franqueadosWhereUniqueInput | franqueadosWhereUniqueInput[]
    delete?: franqueadosWhereUniqueInput | franqueadosWhereUniqueInput[]
    connect?: franqueadosWhereUniqueInput | franqueadosWhereUniqueInput[]
    update?: franqueadosUpdateWithWhereUniqueWithoutFranqueadorasInput | franqueadosUpdateWithWhereUniqueWithoutFranqueadorasInput[]
    updateMany?: franqueadosUpdateManyWithWhereWithoutFranqueadorasInput | franqueadosUpdateManyWithWhereWithoutFranqueadorasInput[]
    deleteMany?: franqueadosScalarWhereInput | franqueadosScalarWhereInput[]
  }

  export type logsUncheckedUpdateManyWithoutFranqueadorasNestedInput = {
    create?: XOR<logsCreateWithoutFranqueadorasInput, logsUncheckedCreateWithoutFranqueadorasInput> | logsCreateWithoutFranqueadorasInput[] | logsUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: logsCreateOrConnectWithoutFranqueadorasInput | logsCreateOrConnectWithoutFranqueadorasInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutFranqueadorasInput | logsUpsertWithWhereUniqueWithoutFranqueadorasInput[]
    createMany?: logsCreateManyFranqueadorasInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutFranqueadorasInput | logsUpdateWithWhereUniqueWithoutFranqueadorasInput[]
    updateMany?: logsUpdateManyWithWhereWithoutFranqueadorasInput | logsUpdateManyWithWhereWithoutFranqueadorasInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type usersUncheckedUpdateManyWithoutFranqueadorasNestedInput = {
    create?: XOR<usersCreateWithoutFranqueadorasInput, usersUncheckedCreateWithoutFranqueadorasInput> | usersCreateWithoutFranqueadorasInput[] | usersUncheckedCreateWithoutFranqueadorasInput[]
    connectOrCreate?: usersCreateOrConnectWithoutFranqueadorasInput | usersCreateOrConnectWithoutFranqueadorasInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutFranqueadorasInput | usersUpsertWithWhereUniqueWithoutFranqueadorasInput[]
    createMany?: usersCreateManyFranqueadorasInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutFranqueadorasInput | usersUpdateWithWhereUniqueWithoutFranqueadorasInput[]
    updateMany?: usersUpdateManyWithWhereWithoutFranqueadorasInput | usersUpdateManyWithWhereWithoutFranqueadorasInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type cartoesCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<cartoesCreateWithoutFranqueadosInput, cartoesUncheckedCreateWithoutFranqueadosInput> | cartoesCreateWithoutFranqueadosInput[] | cartoesUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: cartoesCreateOrConnectWithoutFranqueadosInput | cartoesCreateOrConnectWithoutFranqueadosInput[]
    createMany?: cartoesCreateManyFranqueadosInputEnvelope
    connect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
  }

  export type comissoesCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<comissoesCreateWithoutFranqueadosInput, comissoesUncheckedCreateWithoutFranqueadosInput> | comissoesCreateWithoutFranqueadosInput[] | comissoesUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutFranqueadosInput | comissoesCreateOrConnectWithoutFranqueadosInput[]
    createMany?: comissoesCreateManyFranqueadosInputEnvelope
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
  }

  export type cobrancasCreateNestedManyWithoutFranqueadoInput = {
    create?: XOR<cobrancasCreateWithoutFranqueadoInput, cobrancasUncheckedCreateWithoutFranqueadoInput> | cobrancasCreateWithoutFranqueadoInput[] | cobrancasUncheckedCreateWithoutFranqueadoInput[]
    connectOrCreate?: cobrancasCreateOrConnectWithoutFranqueadoInput | cobrancasCreateOrConnectWithoutFranqueadoInput[]
    createMany?: cobrancasCreateManyFranqueadoInputEnvelope
    connect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
  }

  export type displaysCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<displaysCreateWithoutFranqueadosInput, displaysUncheckedCreateWithoutFranqueadosInput> | displaysCreateWithoutFranqueadosInput[] | displaysUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: displaysCreateOrConnectWithoutFranqueadosInput | displaysCreateOrConnectWithoutFranqueadosInput[]
    createMany?: displaysCreateManyFranqueadosInputEnvelope
    connect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
  }

  export type estabelecimentosCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<estabelecimentosCreateWithoutFranqueadosInput, estabelecimentosUncheckedCreateWithoutFranqueadosInput> | estabelecimentosCreateWithoutFranqueadosInput[] | estabelecimentosUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutFranqueadosInput | estabelecimentosCreateOrConnectWithoutFranqueadosInput[]
    createMany?: estabelecimentosCreateManyFranqueadosInputEnvelope
    connect?: estabelecimentosWhereUniqueInput | estabelecimentosWhereUniqueInput[]
  }

  export type franqueadorasCreateNestedOneWithoutFranqueadosInput = {
    create?: XOR<franqueadorasCreateWithoutFranqueadosInput, franqueadorasUncheckedCreateWithoutFranqueadosInput>
    connectOrCreate?: franqueadorasCreateOrConnectWithoutFranqueadosInput
    connect?: franqueadorasWhereUniqueInput
  }

  export type logsCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<logsCreateWithoutFranqueadosInput, logsUncheckedCreateWithoutFranqueadosInput> | logsCreateWithoutFranqueadosInput[] | logsUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: logsCreateOrConnectWithoutFranqueadosInput | logsCreateOrConnectWithoutFranqueadosInput[]
    createMany?: logsCreateManyFranqueadosInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type solicitacoes_cartaoCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<solicitacoes_cartaoCreateWithoutFranqueadosInput, solicitacoes_cartaoUncheckedCreateWithoutFranqueadosInput> | solicitacoes_cartaoCreateWithoutFranqueadosInput[] | solicitacoes_cartaoUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: solicitacoes_cartaoCreateOrConnectWithoutFranqueadosInput | solicitacoes_cartaoCreateOrConnectWithoutFranqueadosInput[]
    createMany?: solicitacoes_cartaoCreateManyFranqueadosInputEnvelope
    connect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
  }

  export type usersCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<usersCreateWithoutFranqueadosInput, usersUncheckedCreateWithoutFranqueadosInput> | usersCreateWithoutFranqueadosInput[] | usersUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: usersCreateOrConnectWithoutFranqueadosInput | usersCreateOrConnectWithoutFranqueadosInput[]
    createMany?: usersCreateManyFranqueadosInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type cartoesUncheckedCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<cartoesCreateWithoutFranqueadosInput, cartoesUncheckedCreateWithoutFranqueadosInput> | cartoesCreateWithoutFranqueadosInput[] | cartoesUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: cartoesCreateOrConnectWithoutFranqueadosInput | cartoesCreateOrConnectWithoutFranqueadosInput[]
    createMany?: cartoesCreateManyFranqueadosInputEnvelope
    connect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
  }

  export type comissoesUncheckedCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<comissoesCreateWithoutFranqueadosInput, comissoesUncheckedCreateWithoutFranqueadosInput> | comissoesCreateWithoutFranqueadosInput[] | comissoesUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutFranqueadosInput | comissoesCreateOrConnectWithoutFranqueadosInput[]
    createMany?: comissoesCreateManyFranqueadosInputEnvelope
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
  }

  export type cobrancasUncheckedCreateNestedManyWithoutFranqueadoInput = {
    create?: XOR<cobrancasCreateWithoutFranqueadoInput, cobrancasUncheckedCreateWithoutFranqueadoInput> | cobrancasCreateWithoutFranqueadoInput[] | cobrancasUncheckedCreateWithoutFranqueadoInput[]
    connectOrCreate?: cobrancasCreateOrConnectWithoutFranqueadoInput | cobrancasCreateOrConnectWithoutFranqueadoInput[]
    createMany?: cobrancasCreateManyFranqueadoInputEnvelope
    connect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
  }

  export type displaysUncheckedCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<displaysCreateWithoutFranqueadosInput, displaysUncheckedCreateWithoutFranqueadosInput> | displaysCreateWithoutFranqueadosInput[] | displaysUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: displaysCreateOrConnectWithoutFranqueadosInput | displaysCreateOrConnectWithoutFranqueadosInput[]
    createMany?: displaysCreateManyFranqueadosInputEnvelope
    connect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
  }

  export type estabelecimentosUncheckedCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<estabelecimentosCreateWithoutFranqueadosInput, estabelecimentosUncheckedCreateWithoutFranqueadosInput> | estabelecimentosCreateWithoutFranqueadosInput[] | estabelecimentosUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutFranqueadosInput | estabelecimentosCreateOrConnectWithoutFranqueadosInput[]
    createMany?: estabelecimentosCreateManyFranqueadosInputEnvelope
    connect?: estabelecimentosWhereUniqueInput | estabelecimentosWhereUniqueInput[]
  }

  export type logsUncheckedCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<logsCreateWithoutFranqueadosInput, logsUncheckedCreateWithoutFranqueadosInput> | logsCreateWithoutFranqueadosInput[] | logsUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: logsCreateOrConnectWithoutFranqueadosInput | logsCreateOrConnectWithoutFranqueadosInput[]
    createMany?: logsCreateManyFranqueadosInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type solicitacoes_cartaoUncheckedCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<solicitacoes_cartaoCreateWithoutFranqueadosInput, solicitacoes_cartaoUncheckedCreateWithoutFranqueadosInput> | solicitacoes_cartaoCreateWithoutFranqueadosInput[] | solicitacoes_cartaoUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: solicitacoes_cartaoCreateOrConnectWithoutFranqueadosInput | solicitacoes_cartaoCreateOrConnectWithoutFranqueadosInput[]
    createMany?: solicitacoes_cartaoCreateManyFranqueadosInputEnvelope
    connect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
  }

  export type usersUncheckedCreateNestedManyWithoutFranqueadosInput = {
    create?: XOR<usersCreateWithoutFranqueadosInput, usersUncheckedCreateWithoutFranqueadosInput> | usersCreateWithoutFranqueadosInput[] | usersUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: usersCreateOrConnectWithoutFranqueadosInput | usersCreateOrConnectWithoutFranqueadosInput[]
    createMany?: usersCreateManyFranqueadosInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type cartoesUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<cartoesCreateWithoutFranqueadosInput, cartoesUncheckedCreateWithoutFranqueadosInput> | cartoesCreateWithoutFranqueadosInput[] | cartoesUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: cartoesCreateOrConnectWithoutFranqueadosInput | cartoesCreateOrConnectWithoutFranqueadosInput[]
    upsert?: cartoesUpsertWithWhereUniqueWithoutFranqueadosInput | cartoesUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: cartoesCreateManyFranqueadosInputEnvelope
    set?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    disconnect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    delete?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    connect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    update?: cartoesUpdateWithWhereUniqueWithoutFranqueadosInput | cartoesUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: cartoesUpdateManyWithWhereWithoutFranqueadosInput | cartoesUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: cartoesScalarWhereInput | cartoesScalarWhereInput[]
  }

  export type comissoesUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<comissoesCreateWithoutFranqueadosInput, comissoesUncheckedCreateWithoutFranqueadosInput> | comissoesCreateWithoutFranqueadosInput[] | comissoesUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutFranqueadosInput | comissoesCreateOrConnectWithoutFranqueadosInput[]
    upsert?: comissoesUpsertWithWhereUniqueWithoutFranqueadosInput | comissoesUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: comissoesCreateManyFranqueadosInputEnvelope
    set?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    disconnect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    delete?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    update?: comissoesUpdateWithWhereUniqueWithoutFranqueadosInput | comissoesUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: comissoesUpdateManyWithWhereWithoutFranqueadosInput | comissoesUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: comissoesScalarWhereInput | comissoesScalarWhereInput[]
  }

  export type cobrancasUpdateManyWithoutFranqueadoNestedInput = {
    create?: XOR<cobrancasCreateWithoutFranqueadoInput, cobrancasUncheckedCreateWithoutFranqueadoInput> | cobrancasCreateWithoutFranqueadoInput[] | cobrancasUncheckedCreateWithoutFranqueadoInput[]
    connectOrCreate?: cobrancasCreateOrConnectWithoutFranqueadoInput | cobrancasCreateOrConnectWithoutFranqueadoInput[]
    upsert?: cobrancasUpsertWithWhereUniqueWithoutFranqueadoInput | cobrancasUpsertWithWhereUniqueWithoutFranqueadoInput[]
    createMany?: cobrancasCreateManyFranqueadoInputEnvelope
    set?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    disconnect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    delete?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    connect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    update?: cobrancasUpdateWithWhereUniqueWithoutFranqueadoInput | cobrancasUpdateWithWhereUniqueWithoutFranqueadoInput[]
    updateMany?: cobrancasUpdateManyWithWhereWithoutFranqueadoInput | cobrancasUpdateManyWithWhereWithoutFranqueadoInput[]
    deleteMany?: cobrancasScalarWhereInput | cobrancasScalarWhereInput[]
  }

  export type displaysUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<displaysCreateWithoutFranqueadosInput, displaysUncheckedCreateWithoutFranqueadosInput> | displaysCreateWithoutFranqueadosInput[] | displaysUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: displaysCreateOrConnectWithoutFranqueadosInput | displaysCreateOrConnectWithoutFranqueadosInput[]
    upsert?: displaysUpsertWithWhereUniqueWithoutFranqueadosInput | displaysUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: displaysCreateManyFranqueadosInputEnvelope
    set?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    disconnect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    delete?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    connect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    update?: displaysUpdateWithWhereUniqueWithoutFranqueadosInput | displaysUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: displaysUpdateManyWithWhereWithoutFranqueadosInput | displaysUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: displaysScalarWhereInput | displaysScalarWhereInput[]
  }

  export type estabelecimentosUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<estabelecimentosCreateWithoutFranqueadosInput, estabelecimentosUncheckedCreateWithoutFranqueadosInput> | estabelecimentosCreateWithoutFranqueadosInput[] | estabelecimentosUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutFranqueadosInput | estabelecimentosCreateOrConnectWithoutFranqueadosInput[]
    upsert?: estabelecimentosUpsertWithWhereUniqueWithoutFranqueadosInput | estabelecimentosUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: estabelecimentosCreateManyFranqueadosInputEnvelope
    set?: estabelecimentosWhereUniqueInput | estabelecimentosWhereUniqueInput[]
    disconnect?: estabelecimentosWhereUniqueInput | estabelecimentosWhereUniqueInput[]
    delete?: estabelecimentosWhereUniqueInput | estabelecimentosWhereUniqueInput[]
    connect?: estabelecimentosWhereUniqueInput | estabelecimentosWhereUniqueInput[]
    update?: estabelecimentosUpdateWithWhereUniqueWithoutFranqueadosInput | estabelecimentosUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: estabelecimentosUpdateManyWithWhereWithoutFranqueadosInput | estabelecimentosUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: estabelecimentosScalarWhereInput | estabelecimentosScalarWhereInput[]
  }

  export type franqueadorasUpdateOneRequiredWithoutFranqueadosNestedInput = {
    create?: XOR<franqueadorasCreateWithoutFranqueadosInput, franqueadorasUncheckedCreateWithoutFranqueadosInput>
    connectOrCreate?: franqueadorasCreateOrConnectWithoutFranqueadosInput
    upsert?: franqueadorasUpsertWithoutFranqueadosInput
    connect?: franqueadorasWhereUniqueInput
    update?: XOR<XOR<franqueadorasUpdateToOneWithWhereWithoutFranqueadosInput, franqueadorasUpdateWithoutFranqueadosInput>, franqueadorasUncheckedUpdateWithoutFranqueadosInput>
  }

  export type logsUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<logsCreateWithoutFranqueadosInput, logsUncheckedCreateWithoutFranqueadosInput> | logsCreateWithoutFranqueadosInput[] | logsUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: logsCreateOrConnectWithoutFranqueadosInput | logsCreateOrConnectWithoutFranqueadosInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutFranqueadosInput | logsUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: logsCreateManyFranqueadosInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutFranqueadosInput | logsUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: logsUpdateManyWithWhereWithoutFranqueadosInput | logsUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type solicitacoes_cartaoUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<solicitacoes_cartaoCreateWithoutFranqueadosInput, solicitacoes_cartaoUncheckedCreateWithoutFranqueadosInput> | solicitacoes_cartaoCreateWithoutFranqueadosInput[] | solicitacoes_cartaoUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: solicitacoes_cartaoCreateOrConnectWithoutFranqueadosInput | solicitacoes_cartaoCreateOrConnectWithoutFranqueadosInput[]
    upsert?: solicitacoes_cartaoUpsertWithWhereUniqueWithoutFranqueadosInput | solicitacoes_cartaoUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: solicitacoes_cartaoCreateManyFranqueadosInputEnvelope
    set?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    disconnect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    delete?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    connect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    update?: solicitacoes_cartaoUpdateWithWhereUniqueWithoutFranqueadosInput | solicitacoes_cartaoUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: solicitacoes_cartaoUpdateManyWithWhereWithoutFranqueadosInput | solicitacoes_cartaoUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: solicitacoes_cartaoScalarWhereInput | solicitacoes_cartaoScalarWhereInput[]
  }

  export type usersUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<usersCreateWithoutFranqueadosInput, usersUncheckedCreateWithoutFranqueadosInput> | usersCreateWithoutFranqueadosInput[] | usersUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: usersCreateOrConnectWithoutFranqueadosInput | usersCreateOrConnectWithoutFranqueadosInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutFranqueadosInput | usersUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: usersCreateManyFranqueadosInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutFranqueadosInput | usersUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: usersUpdateManyWithWhereWithoutFranqueadosInput | usersUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type cartoesUncheckedUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<cartoesCreateWithoutFranqueadosInput, cartoesUncheckedCreateWithoutFranqueadosInput> | cartoesCreateWithoutFranqueadosInput[] | cartoesUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: cartoesCreateOrConnectWithoutFranqueadosInput | cartoesCreateOrConnectWithoutFranqueadosInput[]
    upsert?: cartoesUpsertWithWhereUniqueWithoutFranqueadosInput | cartoesUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: cartoesCreateManyFranqueadosInputEnvelope
    set?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    disconnect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    delete?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    connect?: cartoesWhereUniqueInput | cartoesWhereUniqueInput[]
    update?: cartoesUpdateWithWhereUniqueWithoutFranqueadosInput | cartoesUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: cartoesUpdateManyWithWhereWithoutFranqueadosInput | cartoesUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: cartoesScalarWhereInput | cartoesScalarWhereInput[]
  }

  export type comissoesUncheckedUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<comissoesCreateWithoutFranqueadosInput, comissoesUncheckedCreateWithoutFranqueadosInput> | comissoesCreateWithoutFranqueadosInput[] | comissoesUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutFranqueadosInput | comissoesCreateOrConnectWithoutFranqueadosInput[]
    upsert?: comissoesUpsertWithWhereUniqueWithoutFranqueadosInput | comissoesUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: comissoesCreateManyFranqueadosInputEnvelope
    set?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    disconnect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    delete?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    update?: comissoesUpdateWithWhereUniqueWithoutFranqueadosInput | comissoesUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: comissoesUpdateManyWithWhereWithoutFranqueadosInput | comissoesUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: comissoesScalarWhereInput | comissoesScalarWhereInput[]
  }

  export type cobrancasUncheckedUpdateManyWithoutFranqueadoNestedInput = {
    create?: XOR<cobrancasCreateWithoutFranqueadoInput, cobrancasUncheckedCreateWithoutFranqueadoInput> | cobrancasCreateWithoutFranqueadoInput[] | cobrancasUncheckedCreateWithoutFranqueadoInput[]
    connectOrCreate?: cobrancasCreateOrConnectWithoutFranqueadoInput | cobrancasCreateOrConnectWithoutFranqueadoInput[]
    upsert?: cobrancasUpsertWithWhereUniqueWithoutFranqueadoInput | cobrancasUpsertWithWhereUniqueWithoutFranqueadoInput[]
    createMany?: cobrancasCreateManyFranqueadoInputEnvelope
    set?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    disconnect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    delete?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    connect?: cobrancasWhereUniqueInput | cobrancasWhereUniqueInput[]
    update?: cobrancasUpdateWithWhereUniqueWithoutFranqueadoInput | cobrancasUpdateWithWhereUniqueWithoutFranqueadoInput[]
    updateMany?: cobrancasUpdateManyWithWhereWithoutFranqueadoInput | cobrancasUpdateManyWithWhereWithoutFranqueadoInput[]
    deleteMany?: cobrancasScalarWhereInput | cobrancasScalarWhereInput[]
  }

  export type displaysUncheckedUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<displaysCreateWithoutFranqueadosInput, displaysUncheckedCreateWithoutFranqueadosInput> | displaysCreateWithoutFranqueadosInput[] | displaysUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: displaysCreateOrConnectWithoutFranqueadosInput | displaysCreateOrConnectWithoutFranqueadosInput[]
    upsert?: displaysUpsertWithWhereUniqueWithoutFranqueadosInput | displaysUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: displaysCreateManyFranqueadosInputEnvelope
    set?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    disconnect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    delete?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    connect?: displaysWhereUniqueInput | displaysWhereUniqueInput[]
    update?: displaysUpdateWithWhereUniqueWithoutFranqueadosInput | displaysUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: displaysUpdateManyWithWhereWithoutFranqueadosInput | displaysUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: displaysScalarWhereInput | displaysScalarWhereInput[]
  }

  export type estabelecimentosUncheckedUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<estabelecimentosCreateWithoutFranqueadosInput, estabelecimentosUncheckedCreateWithoutFranqueadosInput> | estabelecimentosCreateWithoutFranqueadosInput[] | estabelecimentosUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutFranqueadosInput | estabelecimentosCreateOrConnectWithoutFranqueadosInput[]
    upsert?: estabelecimentosUpsertWithWhereUniqueWithoutFranqueadosInput | estabelecimentosUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: estabelecimentosCreateManyFranqueadosInputEnvelope
    set?: estabelecimentosWhereUniqueInput | estabelecimentosWhereUniqueInput[]
    disconnect?: estabelecimentosWhereUniqueInput | estabelecimentosWhereUniqueInput[]
    delete?: estabelecimentosWhereUniqueInput | estabelecimentosWhereUniqueInput[]
    connect?: estabelecimentosWhereUniqueInput | estabelecimentosWhereUniqueInput[]
    update?: estabelecimentosUpdateWithWhereUniqueWithoutFranqueadosInput | estabelecimentosUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: estabelecimentosUpdateManyWithWhereWithoutFranqueadosInput | estabelecimentosUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: estabelecimentosScalarWhereInput | estabelecimentosScalarWhereInput[]
  }

  export type logsUncheckedUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<logsCreateWithoutFranqueadosInput, logsUncheckedCreateWithoutFranqueadosInput> | logsCreateWithoutFranqueadosInput[] | logsUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: logsCreateOrConnectWithoutFranqueadosInput | logsCreateOrConnectWithoutFranqueadosInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutFranqueadosInput | logsUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: logsCreateManyFranqueadosInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutFranqueadosInput | logsUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: logsUpdateManyWithWhereWithoutFranqueadosInput | logsUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<solicitacoes_cartaoCreateWithoutFranqueadosInput, solicitacoes_cartaoUncheckedCreateWithoutFranqueadosInput> | solicitacoes_cartaoCreateWithoutFranqueadosInput[] | solicitacoes_cartaoUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: solicitacoes_cartaoCreateOrConnectWithoutFranqueadosInput | solicitacoes_cartaoCreateOrConnectWithoutFranqueadosInput[]
    upsert?: solicitacoes_cartaoUpsertWithWhereUniqueWithoutFranqueadosInput | solicitacoes_cartaoUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: solicitacoes_cartaoCreateManyFranqueadosInputEnvelope
    set?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    disconnect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    delete?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    connect?: solicitacoes_cartaoWhereUniqueInput | solicitacoes_cartaoWhereUniqueInput[]
    update?: solicitacoes_cartaoUpdateWithWhereUniqueWithoutFranqueadosInput | solicitacoes_cartaoUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: solicitacoes_cartaoUpdateManyWithWhereWithoutFranqueadosInput | solicitacoes_cartaoUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: solicitacoes_cartaoScalarWhereInput | solicitacoes_cartaoScalarWhereInput[]
  }

  export type usersUncheckedUpdateManyWithoutFranqueadosNestedInput = {
    create?: XOR<usersCreateWithoutFranqueadosInput, usersUncheckedCreateWithoutFranqueadosInput> | usersCreateWithoutFranqueadosInput[] | usersUncheckedCreateWithoutFranqueadosInput[]
    connectOrCreate?: usersCreateOrConnectWithoutFranqueadosInput | usersCreateOrConnectWithoutFranqueadosInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutFranqueadosInput | usersUpsertWithWhereUniqueWithoutFranqueadosInput[]
    createMany?: usersCreateManyFranqueadosInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutFranqueadosInput | usersUpdateWithWhereUniqueWithoutFranqueadosInput[]
    updateMany?: usersUpdateManyWithWhereWithoutFranqueadosInput | usersUpdateManyWithWhereWithoutFranqueadosInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type cartoesCreateNestedOneWithoutLogsInput = {
    create?: XOR<cartoesCreateWithoutLogsInput, cartoesUncheckedCreateWithoutLogsInput>
    connectOrCreate?: cartoesCreateOrConnectWithoutLogsInput
    connect?: cartoesWhereUniqueInput
  }

  export type comissoesCreateNestedOneWithoutLogsInput = {
    create?: XOR<comissoesCreateWithoutLogsInput, comissoesUncheckedCreateWithoutLogsInput>
    connectOrCreate?: comissoesCreateOrConnectWithoutLogsInput
    connect?: comissoesWhereUniqueInput
  }

  export type displaysCreateNestedOneWithoutLogsInput = {
    create?: XOR<displaysCreateWithoutLogsInput, displaysUncheckedCreateWithoutLogsInput>
    connectOrCreate?: displaysCreateOrConnectWithoutLogsInput
    connect?: displaysWhereUniqueInput
  }

  export type estabelecimentosCreateNestedOneWithoutLogsInput = {
    create?: XOR<estabelecimentosCreateWithoutLogsInput, estabelecimentosUncheckedCreateWithoutLogsInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutLogsInput
    connect?: estabelecimentosWhereUniqueInput
  }

  export type franqueadosCreateNestedOneWithoutLogsInput = {
    create?: XOR<franqueadosCreateWithoutLogsInput, franqueadosUncheckedCreateWithoutLogsInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutLogsInput
    connect?: franqueadosWhereUniqueInput
  }

  export type franqueadorasCreateNestedOneWithoutLogsInput = {
    create?: XOR<franqueadorasCreateWithoutLogsInput, franqueadorasUncheckedCreateWithoutLogsInput>
    connectOrCreate?: franqueadorasCreateOrConnectWithoutLogsInput
    connect?: franqueadorasWhereUniqueInput
  }

  export type solicitacoes_cartaoCreateNestedOneWithoutLogsInput = {
    create?: XOR<solicitacoes_cartaoCreateWithoutLogsInput, solicitacoes_cartaoUncheckedCreateWithoutLogsInput>
    connectOrCreate?: solicitacoes_cartaoCreateOrConnectWithoutLogsInput
    connect?: solicitacoes_cartaoWhereUniqueInput
  }

  export type transacoesCreateNestedOneWithoutLogsInput = {
    create?: XOR<transacoesCreateWithoutLogsInput, transacoesUncheckedCreateWithoutLogsInput>
    connectOrCreate?: transacoesCreateOrConnectWithoutLogsInput
    connect?: transacoesWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutLogsInput = {
    create?: XOR<usersCreateWithoutLogsInput, usersUncheckedCreateWithoutLogsInput>
    connectOrCreate?: usersCreateOrConnectWithoutLogsInput
    connect?: usersWhereUniqueInput
  }

  export type cartoesUpdateOneWithoutLogsNestedInput = {
    create?: XOR<cartoesCreateWithoutLogsInput, cartoesUncheckedCreateWithoutLogsInput>
    connectOrCreate?: cartoesCreateOrConnectWithoutLogsInput
    upsert?: cartoesUpsertWithoutLogsInput
    disconnect?: cartoesWhereInput | boolean
    delete?: cartoesWhereInput | boolean
    connect?: cartoesWhereUniqueInput
    update?: XOR<XOR<cartoesUpdateToOneWithWhereWithoutLogsInput, cartoesUpdateWithoutLogsInput>, cartoesUncheckedUpdateWithoutLogsInput>
  }

  export type comissoesUpdateOneWithoutLogsNestedInput = {
    create?: XOR<comissoesCreateWithoutLogsInput, comissoesUncheckedCreateWithoutLogsInput>
    connectOrCreate?: comissoesCreateOrConnectWithoutLogsInput
    upsert?: comissoesUpsertWithoutLogsInput
    disconnect?: comissoesWhereInput | boolean
    delete?: comissoesWhereInput | boolean
    connect?: comissoesWhereUniqueInput
    update?: XOR<XOR<comissoesUpdateToOneWithWhereWithoutLogsInput, comissoesUpdateWithoutLogsInput>, comissoesUncheckedUpdateWithoutLogsInput>
  }

  export type displaysUpdateOneWithoutLogsNestedInput = {
    create?: XOR<displaysCreateWithoutLogsInput, displaysUncheckedCreateWithoutLogsInput>
    connectOrCreate?: displaysCreateOrConnectWithoutLogsInput
    upsert?: displaysUpsertWithoutLogsInput
    disconnect?: displaysWhereInput | boolean
    delete?: displaysWhereInput | boolean
    connect?: displaysWhereUniqueInput
    update?: XOR<XOR<displaysUpdateToOneWithWhereWithoutLogsInput, displaysUpdateWithoutLogsInput>, displaysUncheckedUpdateWithoutLogsInput>
  }

  export type estabelecimentosUpdateOneWithoutLogsNestedInput = {
    create?: XOR<estabelecimentosCreateWithoutLogsInput, estabelecimentosUncheckedCreateWithoutLogsInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutLogsInput
    upsert?: estabelecimentosUpsertWithoutLogsInput
    disconnect?: estabelecimentosWhereInput | boolean
    delete?: estabelecimentosWhereInput | boolean
    connect?: estabelecimentosWhereUniqueInput
    update?: XOR<XOR<estabelecimentosUpdateToOneWithWhereWithoutLogsInput, estabelecimentosUpdateWithoutLogsInput>, estabelecimentosUncheckedUpdateWithoutLogsInput>
  }

  export type franqueadosUpdateOneWithoutLogsNestedInput = {
    create?: XOR<franqueadosCreateWithoutLogsInput, franqueadosUncheckedCreateWithoutLogsInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutLogsInput
    upsert?: franqueadosUpsertWithoutLogsInput
    disconnect?: franqueadosWhereInput | boolean
    delete?: franqueadosWhereInput | boolean
    connect?: franqueadosWhereUniqueInput
    update?: XOR<XOR<franqueadosUpdateToOneWithWhereWithoutLogsInput, franqueadosUpdateWithoutLogsInput>, franqueadosUncheckedUpdateWithoutLogsInput>
  }

  export type franqueadorasUpdateOneWithoutLogsNestedInput = {
    create?: XOR<franqueadorasCreateWithoutLogsInput, franqueadorasUncheckedCreateWithoutLogsInput>
    connectOrCreate?: franqueadorasCreateOrConnectWithoutLogsInput
    upsert?: franqueadorasUpsertWithoutLogsInput
    disconnect?: franqueadorasWhereInput | boolean
    delete?: franqueadorasWhereInput | boolean
    connect?: franqueadorasWhereUniqueInput
    update?: XOR<XOR<franqueadorasUpdateToOneWithWhereWithoutLogsInput, franqueadorasUpdateWithoutLogsInput>, franqueadorasUncheckedUpdateWithoutLogsInput>
  }

  export type solicitacoes_cartaoUpdateOneWithoutLogsNestedInput = {
    create?: XOR<solicitacoes_cartaoCreateWithoutLogsInput, solicitacoes_cartaoUncheckedCreateWithoutLogsInput>
    connectOrCreate?: solicitacoes_cartaoCreateOrConnectWithoutLogsInput
    upsert?: solicitacoes_cartaoUpsertWithoutLogsInput
    disconnect?: solicitacoes_cartaoWhereInput | boolean
    delete?: solicitacoes_cartaoWhereInput | boolean
    connect?: solicitacoes_cartaoWhereUniqueInput
    update?: XOR<XOR<solicitacoes_cartaoUpdateToOneWithWhereWithoutLogsInput, solicitacoes_cartaoUpdateWithoutLogsInput>, solicitacoes_cartaoUncheckedUpdateWithoutLogsInput>
  }

  export type transacoesUpdateOneWithoutLogsNestedInput = {
    create?: XOR<transacoesCreateWithoutLogsInput, transacoesUncheckedCreateWithoutLogsInput>
    connectOrCreate?: transacoesCreateOrConnectWithoutLogsInput
    upsert?: transacoesUpsertWithoutLogsInput
    disconnect?: transacoesWhereInput | boolean
    delete?: transacoesWhereInput | boolean
    connect?: transacoesWhereUniqueInput
    update?: XOR<XOR<transacoesUpdateToOneWithWhereWithoutLogsInput, transacoesUpdateWithoutLogsInput>, transacoesUncheckedUpdateWithoutLogsInput>
  }

  export type usersUpdateOneWithoutLogsNestedInput = {
    create?: XOR<usersCreateWithoutLogsInput, usersUncheckedCreateWithoutLogsInput>
    connectOrCreate?: usersCreateOrConnectWithoutLogsInput
    upsert?: usersUpsertWithoutLogsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutLogsInput, usersUpdateWithoutLogsInput>, usersUncheckedUpdateWithoutLogsInput>
  }

  export type usersCreateNestedOneWithoutRefresh_tokensInput = {
    create?: XOR<usersCreateWithoutRefresh_tokensInput, usersUncheckedCreateWithoutRefresh_tokensInput>
    connectOrCreate?: usersCreateOrConnectWithoutRefresh_tokensInput
    connect?: usersWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type usersUpdateOneRequiredWithoutRefresh_tokensNestedInput = {
    create?: XOR<usersCreateWithoutRefresh_tokensInput, usersUncheckedCreateWithoutRefresh_tokensInput>
    connectOrCreate?: usersCreateOrConnectWithoutRefresh_tokensInput
    upsert?: usersUpsertWithoutRefresh_tokensInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutRefresh_tokensInput, usersUpdateWithoutRefresh_tokensInput>, usersUncheckedUpdateWithoutRefresh_tokensInput>
  }

  export type logsCreateNestedManyWithoutSolicitacoes_cartaoInput = {
    create?: XOR<logsCreateWithoutSolicitacoes_cartaoInput, logsUncheckedCreateWithoutSolicitacoes_cartaoInput> | logsCreateWithoutSolicitacoes_cartaoInput[] | logsUncheckedCreateWithoutSolicitacoes_cartaoInput[]
    connectOrCreate?: logsCreateOrConnectWithoutSolicitacoes_cartaoInput | logsCreateOrConnectWithoutSolicitacoes_cartaoInput[]
    createMany?: logsCreateManySolicitacoes_cartaoInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type estabelecimentosCreateNestedOneWithoutSolicitacoes_cartaoInput = {
    create?: XOR<estabelecimentosCreateWithoutSolicitacoes_cartaoInput, estabelecimentosUncheckedCreateWithoutSolicitacoes_cartaoInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutSolicitacoes_cartaoInput
    connect?: estabelecimentosWhereUniqueInput
  }

  export type franqueadosCreateNestedOneWithoutSolicitacoes_cartaoInput = {
    create?: XOR<franqueadosCreateWithoutSolicitacoes_cartaoInput, franqueadosUncheckedCreateWithoutSolicitacoes_cartaoInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutSolicitacoes_cartaoInput
    connect?: franqueadosWhereUniqueInput
  }

  export type logsUncheckedCreateNestedManyWithoutSolicitacoes_cartaoInput = {
    create?: XOR<logsCreateWithoutSolicitacoes_cartaoInput, logsUncheckedCreateWithoutSolicitacoes_cartaoInput> | logsCreateWithoutSolicitacoes_cartaoInput[] | logsUncheckedCreateWithoutSolicitacoes_cartaoInput[]
    connectOrCreate?: logsCreateOrConnectWithoutSolicitacoes_cartaoInput | logsCreateOrConnectWithoutSolicitacoes_cartaoInput[]
    createMany?: logsCreateManySolicitacoes_cartaoInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumSolicitacaoStatusFieldUpdateOperationsInput = {
    set?: $Enums.SolicitacaoStatus
  }

  export type logsUpdateManyWithoutSolicitacoes_cartaoNestedInput = {
    create?: XOR<logsCreateWithoutSolicitacoes_cartaoInput, logsUncheckedCreateWithoutSolicitacoes_cartaoInput> | logsCreateWithoutSolicitacoes_cartaoInput[] | logsUncheckedCreateWithoutSolicitacoes_cartaoInput[]
    connectOrCreate?: logsCreateOrConnectWithoutSolicitacoes_cartaoInput | logsCreateOrConnectWithoutSolicitacoes_cartaoInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutSolicitacoes_cartaoInput | logsUpsertWithWhereUniqueWithoutSolicitacoes_cartaoInput[]
    createMany?: logsCreateManySolicitacoes_cartaoInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutSolicitacoes_cartaoInput | logsUpdateWithWhereUniqueWithoutSolicitacoes_cartaoInput[]
    updateMany?: logsUpdateManyWithWhereWithoutSolicitacoes_cartaoInput | logsUpdateManyWithWhereWithoutSolicitacoes_cartaoInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type estabelecimentosUpdateOneRequiredWithoutSolicitacoes_cartaoNestedInput = {
    create?: XOR<estabelecimentosCreateWithoutSolicitacoes_cartaoInput, estabelecimentosUncheckedCreateWithoutSolicitacoes_cartaoInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutSolicitacoes_cartaoInput
    upsert?: estabelecimentosUpsertWithoutSolicitacoes_cartaoInput
    connect?: estabelecimentosWhereUniqueInput
    update?: XOR<XOR<estabelecimentosUpdateToOneWithWhereWithoutSolicitacoes_cartaoInput, estabelecimentosUpdateWithoutSolicitacoes_cartaoInput>, estabelecimentosUncheckedUpdateWithoutSolicitacoes_cartaoInput>
  }

  export type franqueadosUpdateOneRequiredWithoutSolicitacoes_cartaoNestedInput = {
    create?: XOR<franqueadosCreateWithoutSolicitacoes_cartaoInput, franqueadosUncheckedCreateWithoutSolicitacoes_cartaoInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutSolicitacoes_cartaoInput
    upsert?: franqueadosUpsertWithoutSolicitacoes_cartaoInput
    connect?: franqueadosWhereUniqueInput
    update?: XOR<XOR<franqueadosUpdateToOneWithWhereWithoutSolicitacoes_cartaoInput, franqueadosUpdateWithoutSolicitacoes_cartaoInput>, franqueadosUncheckedUpdateWithoutSolicitacoes_cartaoInput>
  }

  export type logsUncheckedUpdateManyWithoutSolicitacoes_cartaoNestedInput = {
    create?: XOR<logsCreateWithoutSolicitacoes_cartaoInput, logsUncheckedCreateWithoutSolicitacoes_cartaoInput> | logsCreateWithoutSolicitacoes_cartaoInput[] | logsUncheckedCreateWithoutSolicitacoes_cartaoInput[]
    connectOrCreate?: logsCreateOrConnectWithoutSolicitacoes_cartaoInput | logsCreateOrConnectWithoutSolicitacoes_cartaoInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutSolicitacoes_cartaoInput | logsUpsertWithWhereUniqueWithoutSolicitacoes_cartaoInput[]
    createMany?: logsCreateManySolicitacoes_cartaoInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutSolicitacoes_cartaoInput | logsUpdateWithWhereUniqueWithoutSolicitacoes_cartaoInput[]
    updateMany?: logsUpdateManyWithWhereWithoutSolicitacoes_cartaoInput | logsUpdateManyWithWhereWithoutSolicitacoes_cartaoInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type comissoesCreateNestedManyWithoutTransacoesInput = {
    create?: XOR<comissoesCreateWithoutTransacoesInput, comissoesUncheckedCreateWithoutTransacoesInput> | comissoesCreateWithoutTransacoesInput[] | comissoesUncheckedCreateWithoutTransacoesInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutTransacoesInput | comissoesCreateOrConnectWithoutTransacoesInput[]
    createMany?: comissoesCreateManyTransacoesInputEnvelope
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
  }

  export type logsCreateNestedManyWithoutTransacoesInput = {
    create?: XOR<logsCreateWithoutTransacoesInput, logsUncheckedCreateWithoutTransacoesInput> | logsCreateWithoutTransacoesInput[] | logsUncheckedCreateWithoutTransacoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutTransacoesInput | logsCreateOrConnectWithoutTransacoesInput[]
    createMany?: logsCreateManyTransacoesInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type cartoesCreateNestedOneWithoutTransacoesInput = {
    create?: XOR<cartoesCreateWithoutTransacoesInput, cartoesUncheckedCreateWithoutTransacoesInput>
    connectOrCreate?: cartoesCreateOrConnectWithoutTransacoesInput
    connect?: cartoesWhereUniqueInput
  }

  export type estabelecimentosCreateNestedOneWithoutTransacoesInput = {
    create?: XOR<estabelecimentosCreateWithoutTransacoesInput, estabelecimentosUncheckedCreateWithoutTransacoesInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutTransacoesInput
    connect?: estabelecimentosWhereUniqueInput
  }

  export type comissoesUncheckedCreateNestedManyWithoutTransacoesInput = {
    create?: XOR<comissoesCreateWithoutTransacoesInput, comissoesUncheckedCreateWithoutTransacoesInput> | comissoesCreateWithoutTransacoesInput[] | comissoesUncheckedCreateWithoutTransacoesInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutTransacoesInput | comissoesCreateOrConnectWithoutTransacoesInput[]
    createMany?: comissoesCreateManyTransacoesInputEnvelope
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
  }

  export type logsUncheckedCreateNestedManyWithoutTransacoesInput = {
    create?: XOR<logsCreateWithoutTransacoesInput, logsUncheckedCreateWithoutTransacoesInput> | logsCreateWithoutTransacoesInput[] | logsUncheckedCreateWithoutTransacoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutTransacoesInput | logsCreateOrConnectWithoutTransacoesInput[]
    createMany?: logsCreateManyTransacoesInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type EnumTransacaoTipoFieldUpdateOperationsInput = {
    set?: $Enums.TransacaoTipo
  }

  export type EnumTransacaoStatusFieldUpdateOperationsInput = {
    set?: $Enums.TransacaoStatus
  }

  export type comissoesUpdateManyWithoutTransacoesNestedInput = {
    create?: XOR<comissoesCreateWithoutTransacoesInput, comissoesUncheckedCreateWithoutTransacoesInput> | comissoesCreateWithoutTransacoesInput[] | comissoesUncheckedCreateWithoutTransacoesInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutTransacoesInput | comissoesCreateOrConnectWithoutTransacoesInput[]
    upsert?: comissoesUpsertWithWhereUniqueWithoutTransacoesInput | comissoesUpsertWithWhereUniqueWithoutTransacoesInput[]
    createMany?: comissoesCreateManyTransacoesInputEnvelope
    set?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    disconnect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    delete?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    update?: comissoesUpdateWithWhereUniqueWithoutTransacoesInput | comissoesUpdateWithWhereUniqueWithoutTransacoesInput[]
    updateMany?: comissoesUpdateManyWithWhereWithoutTransacoesInput | comissoesUpdateManyWithWhereWithoutTransacoesInput[]
    deleteMany?: comissoesScalarWhereInput | comissoesScalarWhereInput[]
  }

  export type logsUpdateManyWithoutTransacoesNestedInput = {
    create?: XOR<logsCreateWithoutTransacoesInput, logsUncheckedCreateWithoutTransacoesInput> | logsCreateWithoutTransacoesInput[] | logsUncheckedCreateWithoutTransacoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutTransacoesInput | logsCreateOrConnectWithoutTransacoesInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutTransacoesInput | logsUpsertWithWhereUniqueWithoutTransacoesInput[]
    createMany?: logsCreateManyTransacoesInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutTransacoesInput | logsUpdateWithWhereUniqueWithoutTransacoesInput[]
    updateMany?: logsUpdateManyWithWhereWithoutTransacoesInput | logsUpdateManyWithWhereWithoutTransacoesInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type cartoesUpdateOneRequiredWithoutTransacoesNestedInput = {
    create?: XOR<cartoesCreateWithoutTransacoesInput, cartoesUncheckedCreateWithoutTransacoesInput>
    connectOrCreate?: cartoesCreateOrConnectWithoutTransacoesInput
    upsert?: cartoesUpsertWithoutTransacoesInput
    connect?: cartoesWhereUniqueInput
    update?: XOR<XOR<cartoesUpdateToOneWithWhereWithoutTransacoesInput, cartoesUpdateWithoutTransacoesInput>, cartoesUncheckedUpdateWithoutTransacoesInput>
  }

  export type estabelecimentosUpdateOneRequiredWithoutTransacoesNestedInput = {
    create?: XOR<estabelecimentosCreateWithoutTransacoesInput, estabelecimentosUncheckedCreateWithoutTransacoesInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutTransacoesInput
    upsert?: estabelecimentosUpsertWithoutTransacoesInput
    connect?: estabelecimentosWhereUniqueInput
    update?: XOR<XOR<estabelecimentosUpdateToOneWithWhereWithoutTransacoesInput, estabelecimentosUpdateWithoutTransacoesInput>, estabelecimentosUncheckedUpdateWithoutTransacoesInput>
  }

  export type comissoesUncheckedUpdateManyWithoutTransacoesNestedInput = {
    create?: XOR<comissoesCreateWithoutTransacoesInput, comissoesUncheckedCreateWithoutTransacoesInput> | comissoesCreateWithoutTransacoesInput[] | comissoesUncheckedCreateWithoutTransacoesInput[]
    connectOrCreate?: comissoesCreateOrConnectWithoutTransacoesInput | comissoesCreateOrConnectWithoutTransacoesInput[]
    upsert?: comissoesUpsertWithWhereUniqueWithoutTransacoesInput | comissoesUpsertWithWhereUniqueWithoutTransacoesInput[]
    createMany?: comissoesCreateManyTransacoesInputEnvelope
    set?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    disconnect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    delete?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    connect?: comissoesWhereUniqueInput | comissoesWhereUniqueInput[]
    update?: comissoesUpdateWithWhereUniqueWithoutTransacoesInput | comissoesUpdateWithWhereUniqueWithoutTransacoesInput[]
    updateMany?: comissoesUpdateManyWithWhereWithoutTransacoesInput | comissoesUpdateManyWithWhereWithoutTransacoesInput[]
    deleteMany?: comissoesScalarWhereInput | comissoesScalarWhereInput[]
  }

  export type logsUncheckedUpdateManyWithoutTransacoesNestedInput = {
    create?: XOR<logsCreateWithoutTransacoesInput, logsUncheckedCreateWithoutTransacoesInput> | logsCreateWithoutTransacoesInput[] | logsUncheckedCreateWithoutTransacoesInput[]
    connectOrCreate?: logsCreateOrConnectWithoutTransacoesInput | logsCreateOrConnectWithoutTransacoesInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutTransacoesInput | logsUpsertWithWhereUniqueWithoutTransacoesInput[]
    createMany?: logsCreateManyTransacoesInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutTransacoesInput | logsUpdateWithWhereUniqueWithoutTransacoesInput[]
    updateMany?: logsUpdateManyWithWhereWithoutTransacoesInput | logsUpdateManyWithWhereWithoutTransacoesInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type logsCreateNestedManyWithoutUsersInput = {
    create?: XOR<logsCreateWithoutUsersInput, logsUncheckedCreateWithoutUsersInput> | logsCreateWithoutUsersInput[] | logsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: logsCreateOrConnectWithoutUsersInput | logsCreateOrConnectWithoutUsersInput[]
    createMany?: logsCreateManyUsersInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type refresh_tokensCreateNestedManyWithoutUsersInput = {
    create?: XOR<refresh_tokensCreateWithoutUsersInput, refresh_tokensUncheckedCreateWithoutUsersInput> | refresh_tokensCreateWithoutUsersInput[] | refresh_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutUsersInput | refresh_tokensCreateOrConnectWithoutUsersInput[]
    createMany?: refresh_tokensCreateManyUsersInputEnvelope
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
  }

  export type estabelecimentosCreateNestedOneWithoutUsersInput = {
    create?: XOR<estabelecimentosCreateWithoutUsersInput, estabelecimentosUncheckedCreateWithoutUsersInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutUsersInput
    connect?: estabelecimentosWhereUniqueInput
  }

  export type franqueadosCreateNestedOneWithoutUsersInput = {
    create?: XOR<franqueadosCreateWithoutUsersInput, franqueadosUncheckedCreateWithoutUsersInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutUsersInput
    connect?: franqueadosWhereUniqueInput
  }

  export type franqueadorasCreateNestedOneWithoutUsersInput = {
    create?: XOR<franqueadorasCreateWithoutUsersInput, franqueadorasUncheckedCreateWithoutUsersInput>
    connectOrCreate?: franqueadorasCreateOrConnectWithoutUsersInput
    connect?: franqueadorasWhereUniqueInput
  }

  export type logsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<logsCreateWithoutUsersInput, logsUncheckedCreateWithoutUsersInput> | logsCreateWithoutUsersInput[] | logsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: logsCreateOrConnectWithoutUsersInput | logsCreateOrConnectWithoutUsersInput[]
    createMany?: logsCreateManyUsersInputEnvelope
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
  }

  export type refresh_tokensUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<refresh_tokensCreateWithoutUsersInput, refresh_tokensUncheckedCreateWithoutUsersInput> | refresh_tokensCreateWithoutUsersInput[] | refresh_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutUsersInput | refresh_tokensCreateOrConnectWithoutUsersInput[]
    createMany?: refresh_tokensCreateManyUsersInputEnvelope
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
  }

  export type EnumUserTypeFieldUpdateOperationsInput = {
    set?: $Enums.UserType
  }

  export type logsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<logsCreateWithoutUsersInput, logsUncheckedCreateWithoutUsersInput> | logsCreateWithoutUsersInput[] | logsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: logsCreateOrConnectWithoutUsersInput | logsCreateOrConnectWithoutUsersInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutUsersInput | logsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: logsCreateManyUsersInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutUsersInput | logsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: logsUpdateManyWithWhereWithoutUsersInput | logsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type refresh_tokensUpdateManyWithoutUsersNestedInput = {
    create?: XOR<refresh_tokensCreateWithoutUsersInput, refresh_tokensUncheckedCreateWithoutUsersInput> | refresh_tokensCreateWithoutUsersInput[] | refresh_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutUsersInput | refresh_tokensCreateOrConnectWithoutUsersInput[]
    upsert?: refresh_tokensUpsertWithWhereUniqueWithoutUsersInput | refresh_tokensUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: refresh_tokensCreateManyUsersInputEnvelope
    set?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    disconnect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    delete?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    update?: refresh_tokensUpdateWithWhereUniqueWithoutUsersInput | refresh_tokensUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: refresh_tokensUpdateManyWithWhereWithoutUsersInput | refresh_tokensUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
  }

  export type estabelecimentosUpdateOneWithoutUsersNestedInput = {
    create?: XOR<estabelecimentosCreateWithoutUsersInput, estabelecimentosUncheckedCreateWithoutUsersInput>
    connectOrCreate?: estabelecimentosCreateOrConnectWithoutUsersInput
    upsert?: estabelecimentosUpsertWithoutUsersInput
    disconnect?: estabelecimentosWhereInput | boolean
    delete?: estabelecimentosWhereInput | boolean
    connect?: estabelecimentosWhereUniqueInput
    update?: XOR<XOR<estabelecimentosUpdateToOneWithWhereWithoutUsersInput, estabelecimentosUpdateWithoutUsersInput>, estabelecimentosUncheckedUpdateWithoutUsersInput>
  }

  export type franqueadosUpdateOneWithoutUsersNestedInput = {
    create?: XOR<franqueadosCreateWithoutUsersInput, franqueadosUncheckedCreateWithoutUsersInput>
    connectOrCreate?: franqueadosCreateOrConnectWithoutUsersInput
    upsert?: franqueadosUpsertWithoutUsersInput
    disconnect?: franqueadosWhereInput | boolean
    delete?: franqueadosWhereInput | boolean
    connect?: franqueadosWhereUniqueInput
    update?: XOR<XOR<franqueadosUpdateToOneWithWhereWithoutUsersInput, franqueadosUpdateWithoutUsersInput>, franqueadosUncheckedUpdateWithoutUsersInput>
  }

  export type franqueadorasUpdateOneWithoutUsersNestedInput = {
    create?: XOR<franqueadorasCreateWithoutUsersInput, franqueadorasUncheckedCreateWithoutUsersInput>
    connectOrCreate?: franqueadorasCreateOrConnectWithoutUsersInput
    upsert?: franqueadorasUpsertWithoutUsersInput
    disconnect?: franqueadorasWhereInput | boolean
    delete?: franqueadorasWhereInput | boolean
    connect?: franqueadorasWhereUniqueInput
    update?: XOR<XOR<franqueadorasUpdateToOneWithWhereWithoutUsersInput, franqueadorasUpdateWithoutUsersInput>, franqueadorasUncheckedUpdateWithoutUsersInput>
  }

  export type logsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<logsCreateWithoutUsersInput, logsUncheckedCreateWithoutUsersInput> | logsCreateWithoutUsersInput[] | logsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: logsCreateOrConnectWithoutUsersInput | logsCreateOrConnectWithoutUsersInput[]
    upsert?: logsUpsertWithWhereUniqueWithoutUsersInput | logsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: logsCreateManyUsersInputEnvelope
    set?: logsWhereUniqueInput | logsWhereUniqueInput[]
    disconnect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    delete?: logsWhereUniqueInput | logsWhereUniqueInput[]
    connect?: logsWhereUniqueInput | logsWhereUniqueInput[]
    update?: logsUpdateWithWhereUniqueWithoutUsersInput | logsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: logsUpdateManyWithWhereWithoutUsersInput | logsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: logsScalarWhereInput | logsScalarWhereInput[]
  }

  export type refresh_tokensUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<refresh_tokensCreateWithoutUsersInput, refresh_tokensUncheckedCreateWithoutUsersInput> | refresh_tokensCreateWithoutUsersInput[] | refresh_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutUsersInput | refresh_tokensCreateOrConnectWithoutUsersInput[]
    upsert?: refresh_tokensUpsertWithWhereUniqueWithoutUsersInput | refresh_tokensUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: refresh_tokensCreateManyUsersInputEnvelope
    set?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    disconnect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    delete?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    update?: refresh_tokensUpdateWithWhereUniqueWithoutUsersInput | refresh_tokensUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: refresh_tokensUpdateManyWithWhereWithoutUsersInput | refresh_tokensUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumCartaoStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CartaoStatus | EnumCartaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CartaoStatus[] | ListEnumCartaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CartaoStatus[] | ListEnumCartaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCartaoStatusFilter<$PrismaModel> | $Enums.CartaoStatus
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumCartaoStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CartaoStatus | EnumCartaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CartaoStatus[] | ListEnumCartaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CartaoStatus[] | ListEnumCartaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCartaoStatusWithAggregatesFilter<$PrismaModel> | $Enums.CartaoStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCartaoStatusFilter<$PrismaModel>
    _max?: NestedEnumCartaoStatusFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumComissaoStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ComissaoStatus | EnumComissaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComissaoStatus[] | ListEnumComissaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComissaoStatus[] | ListEnumComissaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComissaoStatusFilter<$PrismaModel> | $Enums.ComissaoStatus
  }

  export type NestedEnumComissaoStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ComissaoStatus | EnumComissaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComissaoStatus[] | ListEnumComissaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComissaoStatus[] | ListEnumComissaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComissaoStatusWithAggregatesFilter<$PrismaModel> | $Enums.ComissaoStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumComissaoStatusFilter<$PrismaModel>
    _max?: NestedEnumComissaoStatusFilter<$PrismaModel>
  }

  export type NestedEnumConfigTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.ConfigTipo | EnumConfigTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ConfigTipo[] | ListEnumConfigTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConfigTipo[] | ListEnumConfigTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumConfigTipoFilter<$PrismaModel> | $Enums.ConfigTipo
  }

  export type NestedEnumConfigTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ConfigTipo | EnumConfigTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ConfigTipo[] | ListEnumConfigTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConfigTipo[] | ListEnumConfigTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumConfigTipoWithAggregatesFilter<$PrismaModel> | $Enums.ConfigTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumConfigTipoFilter<$PrismaModel>
    _max?: NestedEnumConfigTipoFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumCobrancaStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CobrancaStatus | EnumCobrancaStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CobrancaStatus[] | ListEnumCobrancaStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CobrancaStatus[] | ListEnumCobrancaStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCobrancaStatusFilter<$PrismaModel> | $Enums.CobrancaStatus
  }

  export type NestedEnumTipoCobrancaFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCobranca | EnumTipoCobrancaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCobranca[] | ListEnumTipoCobrancaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCobranca[] | ListEnumTipoCobrancaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCobrancaFilter<$PrismaModel> | $Enums.TipoCobranca
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumCobrancaStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CobrancaStatus | EnumCobrancaStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CobrancaStatus[] | ListEnumCobrancaStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CobrancaStatus[] | ListEnumCobrancaStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCobrancaStatusWithAggregatesFilter<$PrismaModel> | $Enums.CobrancaStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCobrancaStatusFilter<$PrismaModel>
    _max?: NestedEnumCobrancaStatusFilter<$PrismaModel>
  }

  export type NestedEnumTipoCobrancaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCobranca | EnumTipoCobrancaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCobranca[] | ListEnumTipoCobrancaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCobranca[] | ListEnumTipoCobrancaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCobrancaWithAggregatesFilter<$PrismaModel> | $Enums.TipoCobranca
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoCobrancaFilter<$PrismaModel>
    _max?: NestedEnumTipoCobrancaFilter<$PrismaModel>
  }

  export type NestedEnumDisplayTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.DisplayTipo | EnumDisplayTipoFieldRefInput<$PrismaModel>
    in?: $Enums.DisplayTipo[] | ListEnumDisplayTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisplayTipo[] | ListEnumDisplayTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumDisplayTipoFilter<$PrismaModel> | $Enums.DisplayTipo
  }

  export type NestedEnumDisplayStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DisplayStatus | EnumDisplayStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisplayStatus[] | ListEnumDisplayStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisplayStatus[] | ListEnumDisplayStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisplayStatusFilter<$PrismaModel> | $Enums.DisplayStatus
  }

  export type NestedEnumDisplayTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DisplayTipo | EnumDisplayTipoFieldRefInput<$PrismaModel>
    in?: $Enums.DisplayTipo[] | ListEnumDisplayTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisplayTipo[] | ListEnumDisplayTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumDisplayTipoWithAggregatesFilter<$PrismaModel> | $Enums.DisplayTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDisplayTipoFilter<$PrismaModel>
    _max?: NestedEnumDisplayTipoFilter<$PrismaModel>
  }

  export type NestedEnumDisplayStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DisplayStatus | EnumDisplayStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisplayStatus[] | ListEnumDisplayStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisplayStatus[] | ListEnumDisplayStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisplayStatusWithAggregatesFilter<$PrismaModel> | $Enums.DisplayStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDisplayStatusFilter<$PrismaModel>
    _max?: NestedEnumDisplayStatusFilter<$PrismaModel>
  }

  export type NestedEnumEstabelecimentoStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.EstabelecimentoStatus | EnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EstabelecimentoStatus[] | ListEnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstabelecimentoStatus[] | ListEnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEstabelecimentoStatusFilter<$PrismaModel> | $Enums.EstabelecimentoStatus
  }

  export type NestedEnumEstabelecimentoStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstabelecimentoStatus | EnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EstabelecimentoStatus[] | ListEnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstabelecimentoStatus[] | ListEnumEstabelecimentoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEstabelecimentoStatusWithAggregatesFilter<$PrismaModel> | $Enums.EstabelecimentoStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstabelecimentoStatusFilter<$PrismaModel>
    _max?: NestedEnumEstabelecimentoStatusFilter<$PrismaModel>
  }

  export type NestedEnumStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusFilter<$PrismaModel> | $Enums.Status
  }

  export type NestedEnumStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusWithAggregatesFilter<$PrismaModel> | $Enums.Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusFilter<$PrismaModel>
    _max?: NestedEnumStatusFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumSolicitacaoStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SolicitacaoStatus | EnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SolicitacaoStatus[] | ListEnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SolicitacaoStatus[] | ListEnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSolicitacaoStatusFilter<$PrismaModel> | $Enums.SolicitacaoStatus
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedEnumSolicitacaoStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SolicitacaoStatus | EnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SolicitacaoStatus[] | ListEnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SolicitacaoStatus[] | ListEnumSolicitacaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSolicitacaoStatusWithAggregatesFilter<$PrismaModel> | $Enums.SolicitacaoStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSolicitacaoStatusFilter<$PrismaModel>
    _max?: NestedEnumSolicitacaoStatusFilter<$PrismaModel>
  }

  export type NestedEnumTransacaoTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.TransacaoTipo | EnumTransacaoTipoFieldRefInput<$PrismaModel>
    in?: $Enums.TransacaoTipo[] | ListEnumTransacaoTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransacaoTipo[] | ListEnumTransacaoTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumTransacaoTipoFilter<$PrismaModel> | $Enums.TransacaoTipo
  }

  export type NestedEnumTransacaoStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransacaoStatus | EnumTransacaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransacaoStatus[] | ListEnumTransacaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransacaoStatus[] | ListEnumTransacaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransacaoStatusFilter<$PrismaModel> | $Enums.TransacaoStatus
  }

  export type NestedEnumTransacaoTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransacaoTipo | EnumTransacaoTipoFieldRefInput<$PrismaModel>
    in?: $Enums.TransacaoTipo[] | ListEnumTransacaoTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransacaoTipo[] | ListEnumTransacaoTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumTransacaoTipoWithAggregatesFilter<$PrismaModel> | $Enums.TransacaoTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransacaoTipoFilter<$PrismaModel>
    _max?: NestedEnumTransacaoTipoFilter<$PrismaModel>
  }

  export type NestedEnumTransacaoStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransacaoStatus | EnumTransacaoStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransacaoStatus[] | ListEnumTransacaoStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransacaoStatus[] | ListEnumTransacaoStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransacaoStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransacaoStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransacaoStatusFilter<$PrismaModel>
    _max?: NestedEnumTransacaoStatusFilter<$PrismaModel>
  }

  export type NestedEnumUserTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeFilter<$PrismaModel> | $Enums.UserType
  }

  export type NestedEnumUserTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeWithAggregatesFilter<$PrismaModel> | $Enums.UserType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserTypeFilter<$PrismaModel>
    _max?: NestedEnumUserTypeFilter<$PrismaModel>
  }

  export type estabelecimentosCreateWithoutCartoesInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    comissoes?: comissoesCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsCreateNestedOneWithoutEstabelecimentosInput
    franqueados: franqueadosCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesCreateNestedManyWithoutEstabelecimentosInput
    users?: usersCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUncheckedCreateWithoutCartoesInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    comissoes?: comissoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysUncheckedCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsUncheckedCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    users?: usersUncheckedCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosCreateOrConnectWithoutCartoesInput = {
    where: estabelecimentosWhereUniqueInput
    create: XOR<estabelecimentosCreateWithoutCartoesInput, estabelecimentosUncheckedCreateWithoutCartoesInput>
  }

  export type franqueadosCreateWithoutCartoesInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    comissoes?: comissoesCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasCreateNestedManyWithoutFranqueadoInput
    displays?: displaysCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosCreateNestedManyWithoutFranqueadosInput
    franqueadoras: franqueadorasCreateNestedOneWithoutFranqueadosInput
    logs?: logsCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutFranqueadosInput
    users?: usersCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosUncheckedCreateWithoutCartoesInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId: string
    comissoes?: comissoesUncheckedCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutFranqueadoInput
    displays?: displaysUncheckedCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosUncheckedCreateNestedManyWithoutFranqueadosInput
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutFranqueadosInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosCreateOrConnectWithoutCartoesInput = {
    where: franqueadosWhereUniqueInput
    create: XOR<franqueadosCreateWithoutCartoesInput, franqueadosUncheckedCreateWithoutCartoesInput>
  }

  export type logsCreateWithoutCartoesInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    comissoes?: comissoesCreateNestedOneWithoutLogsInput
    displays?: displaysCreateNestedOneWithoutLogsInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutLogsInput
    franqueados?: franqueadosCreateNestedOneWithoutLogsInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutLogsInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedOneWithoutLogsInput
    transacoes?: transacoesCreateNestedOneWithoutLogsInput
    users?: usersCreateNestedOneWithoutLogsInput
  }

  export type logsUncheckedCreateWithoutCartoesInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type logsCreateOrConnectWithoutCartoesInput = {
    where: logsWhereUniqueInput
    create: XOR<logsCreateWithoutCartoesInput, logsUncheckedCreateWithoutCartoesInput>
  }

  export type logsCreateManyCartoesInputEnvelope = {
    data: logsCreateManyCartoesInput | logsCreateManyCartoesInput[]
    skipDuplicates?: boolean
  }

  export type transacoesCreateWithoutCartoesInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    comissoes?: comissoesCreateNestedManyWithoutTransacoesInput
    logs?: logsCreateNestedManyWithoutTransacoesInput
    estabelecimentos: estabelecimentosCreateNestedOneWithoutTransacoesInput
  }

  export type transacoesUncheckedCreateWithoutCartoesInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId: string
    comissoes?: comissoesUncheckedCreateNestedManyWithoutTransacoesInput
    logs?: logsUncheckedCreateNestedManyWithoutTransacoesInput
  }

  export type transacoesCreateOrConnectWithoutCartoesInput = {
    where: transacoesWhereUniqueInput
    create: XOR<transacoesCreateWithoutCartoesInput, transacoesUncheckedCreateWithoutCartoesInput>
  }

  export type transacoesCreateManyCartoesInputEnvelope = {
    data: transacoesCreateManyCartoesInput | transacoesCreateManyCartoesInput[]
    skipDuplicates?: boolean
  }

  export type estabelecimentosUpsertWithoutCartoesInput = {
    update: XOR<estabelecimentosUpdateWithoutCartoesInput, estabelecimentosUncheckedUpdateWithoutCartoesInput>
    create: XOR<estabelecimentosCreateWithoutCartoesInput, estabelecimentosUncheckedCreateWithoutCartoesInput>
    where?: estabelecimentosWhereInput
  }

  export type estabelecimentosUpdateToOneWithWhereWithoutCartoesInput = {
    where?: estabelecimentosWhereInput
    data: XOR<estabelecimentosUpdateWithoutCartoesInput, estabelecimentosUncheckedUpdateWithoutCartoesInput>
  }

  export type estabelecimentosUpdateWithoutCartoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comissoes?: comissoesUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUpdateOneWithoutEstabelecimentosNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutEstabelecimentosNestedInput
    logs?: logsUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateWithoutCartoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    comissoes?: comissoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedUpdateOneWithoutEstabelecimentosNestedInput
    logs?: logsUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUncheckedUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type franqueadosUpsertWithoutCartoesInput = {
    update: XOR<franqueadosUpdateWithoutCartoesInput, franqueadosUncheckedUpdateWithoutCartoesInput>
    create: XOR<franqueadosCreateWithoutCartoesInput, franqueadosUncheckedCreateWithoutCartoesInput>
    where?: franqueadosWhereInput
  }

  export type franqueadosUpdateToOneWithWhereWithoutCartoesInput = {
    where?: franqueadosWhereInput
    data: XOR<franqueadosUpdateWithoutCartoesInput, franqueadosUncheckedUpdateWithoutCartoesInput>
  }

  export type franqueadosUpdateWithoutCartoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comissoes?: comissoesUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUpdateManyWithoutFranqueadosNestedInput
    franqueadoras?: franqueadorasUpdateOneRequiredWithoutFranqueadosNestedInput
    logs?: logsUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutFranqueadosNestedInput
    users?: usersUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosUncheckedUpdateWithoutCartoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: StringFieldUpdateOperationsInput | string
    comissoes?: comissoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUncheckedUpdateManyWithoutFranqueadosNestedInput
    logs?: logsUncheckedUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadosNestedInput
  }

  export type logsUpsertWithWhereUniqueWithoutCartoesInput = {
    where: logsWhereUniqueInput
    update: XOR<logsUpdateWithoutCartoesInput, logsUncheckedUpdateWithoutCartoesInput>
    create: XOR<logsCreateWithoutCartoesInput, logsUncheckedCreateWithoutCartoesInput>
  }

  export type logsUpdateWithWhereUniqueWithoutCartoesInput = {
    where: logsWhereUniqueInput
    data: XOR<logsUpdateWithoutCartoesInput, logsUncheckedUpdateWithoutCartoesInput>
  }

  export type logsUpdateManyWithWhereWithoutCartoesInput = {
    where: logsScalarWhereInput
    data: XOR<logsUpdateManyMutationInput, logsUncheckedUpdateManyWithoutCartoesInput>
  }

  export type logsScalarWhereInput = {
    AND?: logsScalarWhereInput | logsScalarWhereInput[]
    OR?: logsScalarWhereInput[]
    NOT?: logsScalarWhereInput | logsScalarWhereInput[]
    id?: StringFilter<"logs"> | string
    acao?: StringFilter<"logs"> | string
    entidade?: StringFilter<"logs"> | string
    entidadeId?: StringFilter<"logs"> | string
    dadosAnteriores?: JsonNullableFilter<"logs">
    dadosNovos?: JsonNullableFilter<"logs">
    ip?: StringFilter<"logs"> | string
    userAgent?: StringFilter<"logs"> | string
    createdAt?: DateTimeFilter<"logs"> | Date | string
    userId?: StringNullableFilter<"logs"> | string | null
    franqueadoraId?: StringNullableFilter<"logs"> | string | null
    franqueadoId?: StringNullableFilter<"logs"> | string | null
    estabelecimentoId?: StringNullableFilter<"logs"> | string | null
    cartaoId?: StringNullableFilter<"logs"> | string | null
    transacaoId?: StringNullableFilter<"logs"> | string | null
    comissaoId?: StringNullableFilter<"logs"> | string | null
    solicitacaoId?: StringNullableFilter<"logs"> | string | null
    displayId?: StringNullableFilter<"logs"> | string | null
  }

  export type transacoesUpsertWithWhereUniqueWithoutCartoesInput = {
    where: transacoesWhereUniqueInput
    update: XOR<transacoesUpdateWithoutCartoesInput, transacoesUncheckedUpdateWithoutCartoesInput>
    create: XOR<transacoesCreateWithoutCartoesInput, transacoesUncheckedCreateWithoutCartoesInput>
  }

  export type transacoesUpdateWithWhereUniqueWithoutCartoesInput = {
    where: transacoesWhereUniqueInput
    data: XOR<transacoesUpdateWithoutCartoesInput, transacoesUncheckedUpdateWithoutCartoesInput>
  }

  export type transacoesUpdateManyWithWhereWithoutCartoesInput = {
    where: transacoesScalarWhereInput
    data: XOR<transacoesUpdateManyMutationInput, transacoesUncheckedUpdateManyWithoutCartoesInput>
  }

  export type transacoesScalarWhereInput = {
    AND?: transacoesScalarWhereInput | transacoesScalarWhereInput[]
    OR?: transacoesScalarWhereInput[]
    NOT?: transacoesScalarWhereInput | transacoesScalarWhereInput[]
    id?: StringFilter<"transacoes"> | string
    tipo?: EnumTransacaoTipoFilter<"transacoes"> | $Enums.TransacaoTipo
    valor?: FloatFilter<"transacoes"> | number
    status?: EnumTransacaoStatusFilter<"transacoes"> | $Enums.TransacaoStatus
    usuarioNome?: StringNullableFilter<"transacoes"> | string | null
    usuarioTelefone?: StringNullableFilter<"transacoes"> | string | null
    comprovante?: StringNullableFilter<"transacoes"> | string | null
    createdAt?: DateTimeFilter<"transacoes"> | Date | string
    updatedAt?: DateTimeFilter<"transacoes"> | Date | string
    cartaoId?: StringFilter<"transacoes"> | string
    estabelecimentoId?: StringFilter<"transacoes"> | string
  }

  export type estabelecimentosCreateWithoutComissoesInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsCreateNestedOneWithoutEstabelecimentosInput
    franqueados: franqueadosCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesCreateNestedManyWithoutEstabelecimentosInput
    users?: usersCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUncheckedCreateWithoutComissoesInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysUncheckedCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsUncheckedCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    users?: usersUncheckedCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosCreateOrConnectWithoutComissoesInput = {
    where: estabelecimentosWhereUniqueInput
    create: XOR<estabelecimentosCreateWithoutComissoesInput, estabelecimentosUncheckedCreateWithoutComissoesInput>
  }

  export type franqueadosCreateWithoutComissoesInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasCreateNestedManyWithoutFranqueadoInput
    displays?: displaysCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosCreateNestedManyWithoutFranqueadosInput
    franqueadoras: franqueadorasCreateNestedOneWithoutFranqueadosInput
    logs?: logsCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutFranqueadosInput
    users?: usersCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosUncheckedCreateWithoutComissoesInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutFranqueadoInput
    displays?: displaysUncheckedCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosUncheckedCreateNestedManyWithoutFranqueadosInput
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutFranqueadosInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosCreateOrConnectWithoutComissoesInput = {
    where: franqueadosWhereUniqueInput
    create: XOR<franqueadosCreateWithoutComissoesInput, franqueadosUncheckedCreateWithoutComissoesInput>
  }

  export type transacoesCreateWithoutComissoesInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    logs?: logsCreateNestedManyWithoutTransacoesInput
    cartoes: cartoesCreateNestedOneWithoutTransacoesInput
    estabelecimentos: estabelecimentosCreateNestedOneWithoutTransacoesInput
  }

  export type transacoesUncheckedCreateWithoutComissoesInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartaoId: string
    estabelecimentoId: string
    logs?: logsUncheckedCreateNestedManyWithoutTransacoesInput
  }

  export type transacoesCreateOrConnectWithoutComissoesInput = {
    where: transacoesWhereUniqueInput
    create: XOR<transacoesCreateWithoutComissoesInput, transacoesUncheckedCreateWithoutComissoesInput>
  }

  export type logsCreateWithoutComissoesInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    cartoes?: cartoesCreateNestedOneWithoutLogsInput
    displays?: displaysCreateNestedOneWithoutLogsInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutLogsInput
    franqueados?: franqueadosCreateNestedOneWithoutLogsInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutLogsInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedOneWithoutLogsInput
    transacoes?: transacoesCreateNestedOneWithoutLogsInput
    users?: usersCreateNestedOneWithoutLogsInput
  }

  export type logsUncheckedCreateWithoutComissoesInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type logsCreateOrConnectWithoutComissoesInput = {
    where: logsWhereUniqueInput
    create: XOR<logsCreateWithoutComissoesInput, logsUncheckedCreateWithoutComissoesInput>
  }

  export type logsCreateManyComissoesInputEnvelope = {
    data: logsCreateManyComissoesInput | logsCreateManyComissoesInput[]
    skipDuplicates?: boolean
  }

  export type estabelecimentosUpsertWithoutComissoesInput = {
    update: XOR<estabelecimentosUpdateWithoutComissoesInput, estabelecimentosUncheckedUpdateWithoutComissoesInput>
    create: XOR<estabelecimentosCreateWithoutComissoesInput, estabelecimentosUncheckedCreateWithoutComissoesInput>
    where?: estabelecimentosWhereInput
  }

  export type estabelecimentosUpdateToOneWithWhereWithoutComissoesInput = {
    where?: estabelecimentosWhereInput
    data: XOR<estabelecimentosUpdateWithoutComissoesInput, estabelecimentosUncheckedUpdateWithoutComissoesInput>
  }

  export type estabelecimentosUpdateWithoutComissoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUpdateOneWithoutEstabelecimentosNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutEstabelecimentosNestedInput
    logs?: logsUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateWithoutComissoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedUpdateOneWithoutEstabelecimentosNestedInput
    logs?: logsUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUncheckedUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type franqueadosUpsertWithoutComissoesInput = {
    update: XOR<franqueadosUpdateWithoutComissoesInput, franqueadosUncheckedUpdateWithoutComissoesInput>
    create: XOR<franqueadosCreateWithoutComissoesInput, franqueadosUncheckedCreateWithoutComissoesInput>
    where?: franqueadosWhereInput
  }

  export type franqueadosUpdateToOneWithWhereWithoutComissoesInput = {
    where?: franqueadosWhereInput
    data: XOR<franqueadosUpdateWithoutComissoesInput, franqueadosUncheckedUpdateWithoutComissoesInput>
  }

  export type franqueadosUpdateWithoutComissoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUpdateManyWithoutFranqueadosNestedInput
    franqueadoras?: franqueadorasUpdateOneRequiredWithoutFranqueadosNestedInput
    logs?: logsUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutFranqueadosNestedInput
    users?: usersUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosUncheckedUpdateWithoutComissoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUncheckedUpdateManyWithoutFranqueadosNestedInput
    logs?: logsUncheckedUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadosNestedInput
  }

  export type transacoesUpsertWithoutComissoesInput = {
    update: XOR<transacoesUpdateWithoutComissoesInput, transacoesUncheckedUpdateWithoutComissoesInput>
    create: XOR<transacoesCreateWithoutComissoesInput, transacoesUncheckedCreateWithoutComissoesInput>
    where?: transacoesWhereInput
  }

  export type transacoesUpdateToOneWithWhereWithoutComissoesInput = {
    where?: transacoesWhereInput
    data: XOR<transacoesUpdateWithoutComissoesInput, transacoesUncheckedUpdateWithoutComissoesInput>
  }

  export type transacoesUpdateWithoutComissoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    logs?: logsUpdateManyWithoutTransacoesNestedInput
    cartoes?: cartoesUpdateOneRequiredWithoutTransacoesNestedInput
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutTransacoesNestedInput
  }

  export type transacoesUncheckedUpdateWithoutComissoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartaoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    logs?: logsUncheckedUpdateManyWithoutTransacoesNestedInput
  }

  export type logsUpsertWithWhereUniqueWithoutComissoesInput = {
    where: logsWhereUniqueInput
    update: XOR<logsUpdateWithoutComissoesInput, logsUncheckedUpdateWithoutComissoesInput>
    create: XOR<logsCreateWithoutComissoesInput, logsUncheckedCreateWithoutComissoesInput>
  }

  export type logsUpdateWithWhereUniqueWithoutComissoesInput = {
    where: logsWhereUniqueInput
    data: XOR<logsUpdateWithoutComissoesInput, logsUncheckedUpdateWithoutComissoesInput>
  }

  export type logsUpdateManyWithWhereWithoutComissoesInput = {
    where: logsScalarWhereInput
    data: XOR<logsUpdateManyMutationInput, logsUncheckedUpdateManyWithoutComissoesInput>
  }

  export type estabelecimentosCreateWithoutCobrancasInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesCreateNestedManyWithoutEstabelecimentosInput
    displays?: displaysCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsCreateNestedOneWithoutEstabelecimentosInput
    franqueados: franqueadosCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesCreateNestedManyWithoutEstabelecimentosInput
    users?: usersCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUncheckedCreateWithoutCobrancasInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    displays?: displaysUncheckedCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsUncheckedCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    users?: usersUncheckedCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosCreateOrConnectWithoutCobrancasInput = {
    where: estabelecimentosWhereUniqueInput
    create: XOR<estabelecimentosCreateWithoutCobrancasInput, estabelecimentosUncheckedCreateWithoutCobrancasInput>
  }

  export type franqueadosCreateWithoutCobrancasInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesCreateNestedManyWithoutFranqueadosInput
    displays?: displaysCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosCreateNestedManyWithoutFranqueadosInput
    franqueadoras: franqueadorasCreateNestedOneWithoutFranqueadosInput
    logs?: logsCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutFranqueadosInput
    users?: usersCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosUncheckedCreateWithoutCobrancasInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutFranqueadosInput
    displays?: displaysUncheckedCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosUncheckedCreateNestedManyWithoutFranqueadosInput
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutFranqueadosInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosCreateOrConnectWithoutCobrancasInput = {
    where: franqueadosWhereUniqueInput
    create: XOR<franqueadosCreateWithoutCobrancasInput, franqueadosUncheckedCreateWithoutCobrancasInput>
  }

  export type estabelecimentosUpsertWithoutCobrancasInput = {
    update: XOR<estabelecimentosUpdateWithoutCobrancasInput, estabelecimentosUncheckedUpdateWithoutCobrancasInput>
    create: XOR<estabelecimentosCreateWithoutCobrancasInput, estabelecimentosUncheckedCreateWithoutCobrancasInput>
    where?: estabelecimentosWhereInput
  }

  export type estabelecimentosUpdateToOneWithWhereWithoutCobrancasInput = {
    where?: estabelecimentosWhereInput
    data: XOR<estabelecimentosUpdateWithoutCobrancasInput, estabelecimentosUncheckedUpdateWithoutCobrancasInput>
  }

  export type estabelecimentosUpdateWithoutCobrancasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUpdateManyWithoutEstabelecimentosNestedInput
    displays?: displaysUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUpdateOneWithoutEstabelecimentosNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutEstabelecimentosNestedInput
    logs?: logsUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateWithoutCobrancasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    displays?: displaysUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedUpdateOneWithoutEstabelecimentosNestedInput
    logs?: logsUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUncheckedUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type franqueadosUpsertWithoutCobrancasInput = {
    update: XOR<franqueadosUpdateWithoutCobrancasInput, franqueadosUncheckedUpdateWithoutCobrancasInput>
    create: XOR<franqueadosCreateWithoutCobrancasInput, franqueadosUncheckedCreateWithoutCobrancasInput>
    where?: franqueadosWhereInput
  }

  export type franqueadosUpdateToOneWithWhereWithoutCobrancasInput = {
    where?: franqueadosWhereInput
    data: XOR<franqueadosUpdateWithoutCobrancasInput, franqueadosUncheckedUpdateWithoutCobrancasInput>
  }

  export type franqueadosUpdateWithoutCobrancasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUpdateManyWithoutFranqueadosNestedInput
    displays?: displaysUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUpdateManyWithoutFranqueadosNestedInput
    franqueadoras?: franqueadorasUpdateOneRequiredWithoutFranqueadosNestedInput
    logs?: logsUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutFranqueadosNestedInput
    users?: usersUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosUncheckedUpdateWithoutCobrancasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    displays?: displaysUncheckedUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUncheckedUpdateManyWithoutFranqueadosNestedInput
    logs?: logsUncheckedUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadosNestedInput
  }

  export type estabelecimentosCreateWithoutDisplaysInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasCreateNestedManyWithoutEstabelecimentoInput
    estabelecimento_coords?: estabelecimento_coordsCreateNestedOneWithoutEstabelecimentosInput
    franqueados: franqueadosCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesCreateNestedManyWithoutEstabelecimentosInput
    users?: usersCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUncheckedCreateWithoutDisplaysInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsUncheckedCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    users?: usersUncheckedCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosCreateOrConnectWithoutDisplaysInput = {
    where: estabelecimentosWhereUniqueInput
    create: XOR<estabelecimentosCreateWithoutDisplaysInput, estabelecimentosUncheckedCreateWithoutDisplaysInput>
  }

  export type franqueadosCreateWithoutDisplaysInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasCreateNestedManyWithoutFranqueadoInput
    estabelecimentos?: estabelecimentosCreateNestedManyWithoutFranqueadosInput
    franqueadoras: franqueadorasCreateNestedOneWithoutFranqueadosInput
    logs?: logsCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutFranqueadosInput
    users?: usersCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosUncheckedCreateWithoutDisplaysInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutFranqueadoInput
    estabelecimentos?: estabelecimentosUncheckedCreateNestedManyWithoutFranqueadosInput
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutFranqueadosInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosCreateOrConnectWithoutDisplaysInput = {
    where: franqueadosWhereUniqueInput
    create: XOR<franqueadosCreateWithoutDisplaysInput, franqueadosUncheckedCreateWithoutDisplaysInput>
  }

  export type logsCreateWithoutDisplaysInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    cartoes?: cartoesCreateNestedOneWithoutLogsInput
    comissoes?: comissoesCreateNestedOneWithoutLogsInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutLogsInput
    franqueados?: franqueadosCreateNestedOneWithoutLogsInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutLogsInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedOneWithoutLogsInput
    transacoes?: transacoesCreateNestedOneWithoutLogsInput
    users?: usersCreateNestedOneWithoutLogsInput
  }

  export type logsUncheckedCreateWithoutDisplaysInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
  }

  export type logsCreateOrConnectWithoutDisplaysInput = {
    where: logsWhereUniqueInput
    create: XOR<logsCreateWithoutDisplaysInput, logsUncheckedCreateWithoutDisplaysInput>
  }

  export type logsCreateManyDisplaysInputEnvelope = {
    data: logsCreateManyDisplaysInput | logsCreateManyDisplaysInput[]
    skipDuplicates?: boolean
  }

  export type estabelecimentosUpsertWithoutDisplaysInput = {
    update: XOR<estabelecimentosUpdateWithoutDisplaysInput, estabelecimentosUncheckedUpdateWithoutDisplaysInput>
    create: XOR<estabelecimentosCreateWithoutDisplaysInput, estabelecimentosUncheckedCreateWithoutDisplaysInput>
    where?: estabelecimentosWhereInput
  }

  export type estabelecimentosUpdateToOneWithWhereWithoutDisplaysInput = {
    where?: estabelecimentosWhereInput
    data: XOR<estabelecimentosUpdateWithoutDisplaysInput, estabelecimentosUncheckedUpdateWithoutDisplaysInput>
  }

  export type estabelecimentosUpdateWithoutDisplaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutEstabelecimentoNestedInput
    estabelecimento_coords?: estabelecimento_coordsUpdateOneWithoutEstabelecimentosNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutEstabelecimentosNestedInput
    logs?: logsUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateWithoutDisplaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedUpdateOneWithoutEstabelecimentosNestedInput
    logs?: logsUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUncheckedUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type franqueadosUpsertWithoutDisplaysInput = {
    update: XOR<franqueadosUpdateWithoutDisplaysInput, franqueadosUncheckedUpdateWithoutDisplaysInput>
    create: XOR<franqueadosCreateWithoutDisplaysInput, franqueadosUncheckedCreateWithoutDisplaysInput>
    where?: franqueadosWhereInput
  }

  export type franqueadosUpdateToOneWithWhereWithoutDisplaysInput = {
    where?: franqueadosWhereInput
    data: XOR<franqueadosUpdateWithoutDisplaysInput, franqueadosUncheckedUpdateWithoutDisplaysInput>
  }

  export type franqueadosUpdateWithoutDisplaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutFranqueadoNestedInput
    estabelecimentos?: estabelecimentosUpdateManyWithoutFranqueadosNestedInput
    franqueadoras?: franqueadorasUpdateOneRequiredWithoutFranqueadosNestedInput
    logs?: logsUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutFranqueadosNestedInput
    users?: usersUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosUncheckedUpdateWithoutDisplaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutFranqueadoNestedInput
    estabelecimentos?: estabelecimentosUncheckedUpdateManyWithoutFranqueadosNestedInput
    logs?: logsUncheckedUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadosNestedInput
  }

  export type logsUpsertWithWhereUniqueWithoutDisplaysInput = {
    where: logsWhereUniqueInput
    update: XOR<logsUpdateWithoutDisplaysInput, logsUncheckedUpdateWithoutDisplaysInput>
    create: XOR<logsCreateWithoutDisplaysInput, logsUncheckedCreateWithoutDisplaysInput>
  }

  export type logsUpdateWithWhereUniqueWithoutDisplaysInput = {
    where: logsWhereUniqueInput
    data: XOR<logsUpdateWithoutDisplaysInput, logsUncheckedUpdateWithoutDisplaysInput>
  }

  export type logsUpdateManyWithWhereWithoutDisplaysInput = {
    where: logsScalarWhereInput
    data: XOR<logsUpdateManyMutationInput, logsUncheckedUpdateManyWithoutDisplaysInput>
  }

  export type estabelecimentosCreateWithoutEstabelecimento_coordsInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysCreateNestedManyWithoutEstabelecimentosInput
    franqueados: franqueadosCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesCreateNestedManyWithoutEstabelecimentosInput
    users?: usersCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUncheckedCreateWithoutEstabelecimento_coordsInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysUncheckedCreateNestedManyWithoutEstabelecimentosInput
    logs?: logsUncheckedCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    users?: usersUncheckedCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosCreateOrConnectWithoutEstabelecimento_coordsInput = {
    where: estabelecimentosWhereUniqueInput
    create: XOR<estabelecimentosCreateWithoutEstabelecimento_coordsInput, estabelecimentosUncheckedCreateWithoutEstabelecimento_coordsInput>
  }

  export type estabelecimentosUpsertWithoutEstabelecimento_coordsInput = {
    update: XOR<estabelecimentosUpdateWithoutEstabelecimento_coordsInput, estabelecimentosUncheckedUpdateWithoutEstabelecimento_coordsInput>
    create: XOR<estabelecimentosCreateWithoutEstabelecimento_coordsInput, estabelecimentosUncheckedCreateWithoutEstabelecimento_coordsInput>
    where?: estabelecimentosWhereInput
  }

  export type estabelecimentosUpdateToOneWithWhereWithoutEstabelecimento_coordsInput = {
    where?: estabelecimentosWhereInput
    data: XOR<estabelecimentosUpdateWithoutEstabelecimento_coordsInput, estabelecimentosUncheckedUpdateWithoutEstabelecimento_coordsInput>
  }

  export type estabelecimentosUpdateWithoutEstabelecimento_coordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUpdateManyWithoutEstabelecimentosNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutEstabelecimentosNestedInput
    logs?: logsUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateWithoutEstabelecimento_coordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    logs?: logsUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUncheckedUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type cartoesCreateWithoutEstabelecimentosInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    usuarioId?: string | null
    franqueados: franqueadosCreateNestedOneWithoutCartoesInput
    logs?: logsCreateNestedManyWithoutCartoesInput
    transacoes?: transacoesCreateNestedManyWithoutCartoesInput
  }

  export type cartoesUncheckedCreateWithoutEstabelecimentosInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    usuarioId?: string | null
    logs?: logsUncheckedCreateNestedManyWithoutCartoesInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutCartoesInput
  }

  export type cartoesCreateOrConnectWithoutEstabelecimentosInput = {
    where: cartoesWhereUniqueInput
    create: XOR<cartoesCreateWithoutEstabelecimentosInput, cartoesUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type cartoesCreateManyEstabelecimentosInputEnvelope = {
    data: cartoesCreateManyEstabelecimentosInput | cartoesCreateManyEstabelecimentosInput[]
    skipDuplicates?: boolean
  }

  export type comissoesCreateWithoutEstabelecimentosInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    franqueados: franqueadosCreateNestedOneWithoutComissoesInput
    transacoes: transacoesCreateNestedOneWithoutComissoesInput
    logs?: logsCreateNestedManyWithoutComissoesInput
  }

  export type comissoesUncheckedCreateWithoutEstabelecimentosInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    transacaoId: string
    logs?: logsUncheckedCreateNestedManyWithoutComissoesInput
  }

  export type comissoesCreateOrConnectWithoutEstabelecimentosInput = {
    where: comissoesWhereUniqueInput
    create: XOR<comissoesCreateWithoutEstabelecimentosInput, comissoesUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type comissoesCreateManyEstabelecimentosInputEnvelope = {
    data: comissoesCreateManyEstabelecimentosInput | comissoesCreateManyEstabelecimentosInput[]
    skipDuplicates?: boolean
  }

  export type cobrancasCreateWithoutEstabelecimentoInput = {
    id?: string
    asaasChargeId?: string | null
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.CobrancaStatus
    tipo: $Enums.TipoCobranca
    vencimento: Date | string
    urlPagamento?: string | null
    pixQrCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
    franqueado: franqueadosCreateNestedOneWithoutCobrancasInput
  }

  export type cobrancasUncheckedCreateWithoutEstabelecimentoInput = {
    id?: string
    franqueadoId: string
    asaasChargeId?: string | null
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.CobrancaStatus
    tipo: $Enums.TipoCobranca
    vencimento: Date | string
    urlPagamento?: string | null
    pixQrCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type cobrancasCreateOrConnectWithoutEstabelecimentoInput = {
    where: cobrancasWhereUniqueInput
    create: XOR<cobrancasCreateWithoutEstabelecimentoInput, cobrancasUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type cobrancasCreateManyEstabelecimentoInputEnvelope = {
    data: cobrancasCreateManyEstabelecimentoInput | cobrancasCreateManyEstabelecimentoInput[]
    skipDuplicates?: boolean
  }

  export type displaysCreateWithoutEstabelecimentosInput = {
    id: string
    tipo: $Enums.DisplayTipo
    status?: $Enums.DisplayStatus
    dataInstalacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueados: franqueadosCreateNestedOneWithoutDisplaysInput
    logs?: logsCreateNestedManyWithoutDisplaysInput
  }

  export type displaysUncheckedCreateWithoutEstabelecimentosInput = {
    id: string
    tipo: $Enums.DisplayTipo
    status?: $Enums.DisplayStatus
    dataInstalacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    logs?: logsUncheckedCreateNestedManyWithoutDisplaysInput
  }

  export type displaysCreateOrConnectWithoutEstabelecimentosInput = {
    where: displaysWhereUniqueInput
    create: XOR<displaysCreateWithoutEstabelecimentosInput, displaysUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type displaysCreateManyEstabelecimentosInputEnvelope = {
    data: displaysCreateManyEstabelecimentosInput | displaysCreateManyEstabelecimentosInput[]
    skipDuplicates?: boolean
  }

  export type estabelecimento_coordsCreateWithoutEstabelecimentosInput = {
    id: string
    lat: number
    lng: number
  }

  export type estabelecimento_coordsUncheckedCreateWithoutEstabelecimentosInput = {
    id: string
    lat: number
    lng: number
  }

  export type estabelecimento_coordsCreateOrConnectWithoutEstabelecimentosInput = {
    where: estabelecimento_coordsWhereUniqueInput
    create: XOR<estabelecimento_coordsCreateWithoutEstabelecimentosInput, estabelecimento_coordsUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type franqueadosCreateWithoutEstabelecimentosInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasCreateNestedManyWithoutFranqueadoInput
    displays?: displaysCreateNestedManyWithoutFranqueadosInput
    franqueadoras: franqueadorasCreateNestedOneWithoutFranqueadosInput
    logs?: logsCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutFranqueadosInput
    users?: usersCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosUncheckedCreateWithoutEstabelecimentosInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutFranqueadoInput
    displays?: displaysUncheckedCreateNestedManyWithoutFranqueadosInput
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutFranqueadosInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosCreateOrConnectWithoutEstabelecimentosInput = {
    where: franqueadosWhereUniqueInput
    create: XOR<franqueadosCreateWithoutEstabelecimentosInput, franqueadosUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type logsCreateWithoutEstabelecimentosInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    cartoes?: cartoesCreateNestedOneWithoutLogsInput
    comissoes?: comissoesCreateNestedOneWithoutLogsInput
    displays?: displaysCreateNestedOneWithoutLogsInput
    franqueados?: franqueadosCreateNestedOneWithoutLogsInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutLogsInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedOneWithoutLogsInput
    transacoes?: transacoesCreateNestedOneWithoutLogsInput
    users?: usersCreateNestedOneWithoutLogsInput
  }

  export type logsUncheckedCreateWithoutEstabelecimentosInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type logsCreateOrConnectWithoutEstabelecimentosInput = {
    where: logsWhereUniqueInput
    create: XOR<logsCreateWithoutEstabelecimentosInput, logsUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type logsCreateManyEstabelecimentosInputEnvelope = {
    data: logsCreateManyEstabelecimentosInput | logsCreateManyEstabelecimentosInput[]
    skipDuplicates?: boolean
  }

  export type solicitacoes_cartaoCreateWithoutEstabelecimentosInput = {
    id: string
    quantidade: number
    status?: $Enums.SolicitacaoStatus
    observacoes?: string | null
    dataAprovacao?: Date | string | null
    dataEnvio?: Date | string | null
    dataEntrega?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    logs?: logsCreateNestedManyWithoutSolicitacoes_cartaoInput
    franqueados: franqueadosCreateNestedOneWithoutSolicitacoes_cartaoInput
  }

  export type solicitacoes_cartaoUncheckedCreateWithoutEstabelecimentosInput = {
    id: string
    quantidade: number
    status?: $Enums.SolicitacaoStatus
    observacoes?: string | null
    dataAprovacao?: Date | string | null
    dataEnvio?: Date | string | null
    dataEntrega?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    logs?: logsUncheckedCreateNestedManyWithoutSolicitacoes_cartaoInput
  }

  export type solicitacoes_cartaoCreateOrConnectWithoutEstabelecimentosInput = {
    where: solicitacoes_cartaoWhereUniqueInput
    create: XOR<solicitacoes_cartaoCreateWithoutEstabelecimentosInput, solicitacoes_cartaoUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type solicitacoes_cartaoCreateManyEstabelecimentosInputEnvelope = {
    data: solicitacoes_cartaoCreateManyEstabelecimentosInput | solicitacoes_cartaoCreateManyEstabelecimentosInput[]
    skipDuplicates?: boolean
  }

  export type transacoesCreateWithoutEstabelecimentosInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    comissoes?: comissoesCreateNestedManyWithoutTransacoesInput
    logs?: logsCreateNestedManyWithoutTransacoesInput
    cartoes: cartoesCreateNestedOneWithoutTransacoesInput
  }

  export type transacoesUncheckedCreateWithoutEstabelecimentosInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartaoId: string
    comissoes?: comissoesUncheckedCreateNestedManyWithoutTransacoesInput
    logs?: logsUncheckedCreateNestedManyWithoutTransacoesInput
  }

  export type transacoesCreateOrConnectWithoutEstabelecimentosInput = {
    where: transacoesWhereUniqueInput
    create: XOR<transacoesCreateWithoutEstabelecimentosInput, transacoesUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type transacoesCreateManyEstabelecimentosInputEnvelope = {
    data: transacoesCreateManyEstabelecimentosInput | transacoesCreateManyEstabelecimentosInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutEstabelecimentosInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    logs?: logsCreateNestedManyWithoutUsersInput
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutUsersInput
    franqueados?: franqueadosCreateNestedOneWithoutUsersInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutEstabelecimentosInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId?: string | null
    franqueadoId?: string | null
    logs?: logsUncheckedCreateNestedManyWithoutUsersInput
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutEstabelecimentosInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutEstabelecimentosInput, usersUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type usersCreateManyEstabelecimentosInputEnvelope = {
    data: usersCreateManyEstabelecimentosInput | usersCreateManyEstabelecimentosInput[]
    skipDuplicates?: boolean
  }

  export type cartoesUpsertWithWhereUniqueWithoutEstabelecimentosInput = {
    where: cartoesWhereUniqueInput
    update: XOR<cartoesUpdateWithoutEstabelecimentosInput, cartoesUncheckedUpdateWithoutEstabelecimentosInput>
    create: XOR<cartoesCreateWithoutEstabelecimentosInput, cartoesUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type cartoesUpdateWithWhereUniqueWithoutEstabelecimentosInput = {
    where: cartoesWhereUniqueInput
    data: XOR<cartoesUpdateWithoutEstabelecimentosInput, cartoesUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type cartoesUpdateManyWithWhereWithoutEstabelecimentosInput = {
    where: cartoesScalarWhereInput
    data: XOR<cartoesUpdateManyMutationInput, cartoesUncheckedUpdateManyWithoutEstabelecimentosInput>
  }

  export type cartoesScalarWhereInput = {
    AND?: cartoesScalarWhereInput | cartoesScalarWhereInput[]
    OR?: cartoesScalarWhereInput[]
    NOT?: cartoesScalarWhereInput | cartoesScalarWhereInput[]
    id?: StringFilter<"cartoes"> | string
    codigo?: StringFilter<"cartoes"> | string
    qrCode?: StringFilter<"cartoes"> | string
    valor?: FloatFilter<"cartoes"> | number
    status?: EnumCartaoStatusFilter<"cartoes"> | $Enums.CartaoStatus
    dataAtivacao?: DateTimeNullableFilter<"cartoes"> | Date | string | null
    dataUtilizacao?: DateTimeNullableFilter<"cartoes"> | Date | string | null
    createdAt?: DateTimeFilter<"cartoes"> | Date | string
    updatedAt?: DateTimeFilter<"cartoes"> | Date | string
    franqueadoId?: StringFilter<"cartoes"> | string
    estabelecimentoId?: StringNullableFilter<"cartoes"> | string | null
    usuarioId?: StringNullableFilter<"cartoes"> | string | null
  }

  export type comissoesUpsertWithWhereUniqueWithoutEstabelecimentosInput = {
    where: comissoesWhereUniqueInput
    update: XOR<comissoesUpdateWithoutEstabelecimentosInput, comissoesUncheckedUpdateWithoutEstabelecimentosInput>
    create: XOR<comissoesCreateWithoutEstabelecimentosInput, comissoesUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type comissoesUpdateWithWhereUniqueWithoutEstabelecimentosInput = {
    where: comissoesWhereUniqueInput
    data: XOR<comissoesUpdateWithoutEstabelecimentosInput, comissoesUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type comissoesUpdateManyWithWhereWithoutEstabelecimentosInput = {
    where: comissoesScalarWhereInput
    data: XOR<comissoesUpdateManyMutationInput, comissoesUncheckedUpdateManyWithoutEstabelecimentosInput>
  }

  export type comissoesScalarWhereInput = {
    AND?: comissoesScalarWhereInput | comissoesScalarWhereInput[]
    OR?: comissoesScalarWhereInput[]
    NOT?: comissoesScalarWhereInput | comissoesScalarWhereInput[]
    id?: StringFilter<"comissoes"> | string
    valor?: FloatFilter<"comissoes"> | number
    percentual?: FloatFilter<"comissoes"> | number
    status?: EnumComissaoStatusFilter<"comissoes"> | $Enums.ComissaoStatus
    createdAt?: DateTimeFilter<"comissoes"> | Date | string
    updatedAt?: DateTimeFilter<"comissoes"> | Date | string
    franqueadoId?: StringFilter<"comissoes"> | string
    estabelecimentoId?: StringFilter<"comissoes"> | string
    transacaoId?: StringFilter<"comissoes"> | string
  }

  export type cobrancasUpsertWithWhereUniqueWithoutEstabelecimentoInput = {
    where: cobrancasWhereUniqueInput
    update: XOR<cobrancasUpdateWithoutEstabelecimentoInput, cobrancasUncheckedUpdateWithoutEstabelecimentoInput>
    create: XOR<cobrancasCreateWithoutEstabelecimentoInput, cobrancasUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type cobrancasUpdateWithWhereUniqueWithoutEstabelecimentoInput = {
    where: cobrancasWhereUniqueInput
    data: XOR<cobrancasUpdateWithoutEstabelecimentoInput, cobrancasUncheckedUpdateWithoutEstabelecimentoInput>
  }

  export type cobrancasUpdateManyWithWhereWithoutEstabelecimentoInput = {
    where: cobrancasScalarWhereInput
    data: XOR<cobrancasUpdateManyMutationInput, cobrancasUncheckedUpdateManyWithoutEstabelecimentoInput>
  }

  export type cobrancasScalarWhereInput = {
    AND?: cobrancasScalarWhereInput | cobrancasScalarWhereInput[]
    OR?: cobrancasScalarWhereInput[]
    NOT?: cobrancasScalarWhereInput | cobrancasScalarWhereInput[]
    id?: StringFilter<"cobrancas"> | string
    estabelecimentoId?: StringFilter<"cobrancas"> | string
    franqueadoId?: StringFilter<"cobrancas"> | string
    asaasChargeId?: StringNullableFilter<"cobrancas"> | string | null
    valor?: DecimalFilter<"cobrancas"> | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFilter<"cobrancas"> | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFilter<"cobrancas"> | $Enums.TipoCobranca
    vencimento?: DateTimeFilter<"cobrancas"> | Date | string
    urlPagamento?: StringNullableFilter<"cobrancas"> | string | null
    pixQrCode?: StringNullableFilter<"cobrancas"> | string | null
    createdAt?: DateTimeFilter<"cobrancas"> | Date | string
    updatedAt?: DateTimeFilter<"cobrancas"> | Date | string
    paidAt?: DateTimeNullableFilter<"cobrancas"> | Date | string | null
  }

  export type displaysUpsertWithWhereUniqueWithoutEstabelecimentosInput = {
    where: displaysWhereUniqueInput
    update: XOR<displaysUpdateWithoutEstabelecimentosInput, displaysUncheckedUpdateWithoutEstabelecimentosInput>
    create: XOR<displaysCreateWithoutEstabelecimentosInput, displaysUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type displaysUpdateWithWhereUniqueWithoutEstabelecimentosInput = {
    where: displaysWhereUniqueInput
    data: XOR<displaysUpdateWithoutEstabelecimentosInput, displaysUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type displaysUpdateManyWithWhereWithoutEstabelecimentosInput = {
    where: displaysScalarWhereInput
    data: XOR<displaysUpdateManyMutationInput, displaysUncheckedUpdateManyWithoutEstabelecimentosInput>
  }

  export type displaysScalarWhereInput = {
    AND?: displaysScalarWhereInput | displaysScalarWhereInput[]
    OR?: displaysScalarWhereInput[]
    NOT?: displaysScalarWhereInput | displaysScalarWhereInput[]
    id?: StringFilter<"displays"> | string
    tipo?: EnumDisplayTipoFilter<"displays"> | $Enums.DisplayTipo
    status?: EnumDisplayStatusFilter<"displays"> | $Enums.DisplayStatus
    dataInstalacao?: DateTimeNullableFilter<"displays"> | Date | string | null
    createdAt?: DateTimeFilter<"displays"> | Date | string
    updatedAt?: DateTimeFilter<"displays"> | Date | string
    franqueadoId?: StringFilter<"displays"> | string
    estabelecimentoId?: StringNullableFilter<"displays"> | string | null
  }

  export type estabelecimento_coordsUpsertWithoutEstabelecimentosInput = {
    update: XOR<estabelecimento_coordsUpdateWithoutEstabelecimentosInput, estabelecimento_coordsUncheckedUpdateWithoutEstabelecimentosInput>
    create: XOR<estabelecimento_coordsCreateWithoutEstabelecimentosInput, estabelecimento_coordsUncheckedCreateWithoutEstabelecimentosInput>
    where?: estabelecimento_coordsWhereInput
  }

  export type estabelecimento_coordsUpdateToOneWithWhereWithoutEstabelecimentosInput = {
    where?: estabelecimento_coordsWhereInput
    data: XOR<estabelecimento_coordsUpdateWithoutEstabelecimentosInput, estabelecimento_coordsUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type estabelecimento_coordsUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    lat?: FloatFieldUpdateOperationsInput | number
    lng?: FloatFieldUpdateOperationsInput | number
  }

  export type estabelecimento_coordsUncheckedUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    lat?: FloatFieldUpdateOperationsInput | number
    lng?: FloatFieldUpdateOperationsInput | number
  }

  export type franqueadosUpsertWithoutEstabelecimentosInput = {
    update: XOR<franqueadosUpdateWithoutEstabelecimentosInput, franqueadosUncheckedUpdateWithoutEstabelecimentosInput>
    create: XOR<franqueadosCreateWithoutEstabelecimentosInput, franqueadosUncheckedCreateWithoutEstabelecimentosInput>
    where?: franqueadosWhereInput
  }

  export type franqueadosUpdateToOneWithWhereWithoutEstabelecimentosInput = {
    where?: franqueadosWhereInput
    data: XOR<franqueadosUpdateWithoutEstabelecimentosInput, franqueadosUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type franqueadosUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUpdateManyWithoutFranqueadosNestedInput
    franqueadoras?: franqueadorasUpdateOneRequiredWithoutFranqueadosNestedInput
    logs?: logsUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutFranqueadosNestedInput
    users?: usersUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosUncheckedUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutFranqueadosNestedInput
    logs?: logsUncheckedUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadosNestedInput
  }

  export type logsUpsertWithWhereUniqueWithoutEstabelecimentosInput = {
    where: logsWhereUniqueInput
    update: XOR<logsUpdateWithoutEstabelecimentosInput, logsUncheckedUpdateWithoutEstabelecimentosInput>
    create: XOR<logsCreateWithoutEstabelecimentosInput, logsUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type logsUpdateWithWhereUniqueWithoutEstabelecimentosInput = {
    where: logsWhereUniqueInput
    data: XOR<logsUpdateWithoutEstabelecimentosInput, logsUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type logsUpdateManyWithWhereWithoutEstabelecimentosInput = {
    where: logsScalarWhereInput
    data: XOR<logsUpdateManyMutationInput, logsUncheckedUpdateManyWithoutEstabelecimentosInput>
  }

  export type solicitacoes_cartaoUpsertWithWhereUniqueWithoutEstabelecimentosInput = {
    where: solicitacoes_cartaoWhereUniqueInput
    update: XOR<solicitacoes_cartaoUpdateWithoutEstabelecimentosInput, solicitacoes_cartaoUncheckedUpdateWithoutEstabelecimentosInput>
    create: XOR<solicitacoes_cartaoCreateWithoutEstabelecimentosInput, solicitacoes_cartaoUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type solicitacoes_cartaoUpdateWithWhereUniqueWithoutEstabelecimentosInput = {
    where: solicitacoes_cartaoWhereUniqueInput
    data: XOR<solicitacoes_cartaoUpdateWithoutEstabelecimentosInput, solicitacoes_cartaoUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type solicitacoes_cartaoUpdateManyWithWhereWithoutEstabelecimentosInput = {
    where: solicitacoes_cartaoScalarWhereInput
    data: XOR<solicitacoes_cartaoUpdateManyMutationInput, solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosInput>
  }

  export type solicitacoes_cartaoScalarWhereInput = {
    AND?: solicitacoes_cartaoScalarWhereInput | solicitacoes_cartaoScalarWhereInput[]
    OR?: solicitacoes_cartaoScalarWhereInput[]
    NOT?: solicitacoes_cartaoScalarWhereInput | solicitacoes_cartaoScalarWhereInput[]
    id?: StringFilter<"solicitacoes_cartao"> | string
    quantidade?: IntFilter<"solicitacoes_cartao"> | number
    status?: EnumSolicitacaoStatusFilter<"solicitacoes_cartao"> | $Enums.SolicitacaoStatus
    observacoes?: StringNullableFilter<"solicitacoes_cartao"> | string | null
    dataAprovacao?: DateTimeNullableFilter<"solicitacoes_cartao"> | Date | string | null
    dataEnvio?: DateTimeNullableFilter<"solicitacoes_cartao"> | Date | string | null
    dataEntrega?: DateTimeNullableFilter<"solicitacoes_cartao"> | Date | string | null
    createdAt?: DateTimeFilter<"solicitacoes_cartao"> | Date | string
    updatedAt?: DateTimeFilter<"solicitacoes_cartao"> | Date | string
    estabelecimentoId?: StringFilter<"solicitacoes_cartao"> | string
    franqueadoId?: StringFilter<"solicitacoes_cartao"> | string
  }

  export type transacoesUpsertWithWhereUniqueWithoutEstabelecimentosInput = {
    where: transacoesWhereUniqueInput
    update: XOR<transacoesUpdateWithoutEstabelecimentosInput, transacoesUncheckedUpdateWithoutEstabelecimentosInput>
    create: XOR<transacoesCreateWithoutEstabelecimentosInput, transacoesUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type transacoesUpdateWithWhereUniqueWithoutEstabelecimentosInput = {
    where: transacoesWhereUniqueInput
    data: XOR<transacoesUpdateWithoutEstabelecimentosInput, transacoesUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type transacoesUpdateManyWithWhereWithoutEstabelecimentosInput = {
    where: transacoesScalarWhereInput
    data: XOR<transacoesUpdateManyMutationInput, transacoesUncheckedUpdateManyWithoutEstabelecimentosInput>
  }

  export type usersUpsertWithWhereUniqueWithoutEstabelecimentosInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutEstabelecimentosInput, usersUncheckedUpdateWithoutEstabelecimentosInput>
    create: XOR<usersCreateWithoutEstabelecimentosInput, usersUncheckedCreateWithoutEstabelecimentosInput>
  }

  export type usersUpdateWithWhereUniqueWithoutEstabelecimentosInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutEstabelecimentosInput, usersUncheckedUpdateWithoutEstabelecimentosInput>
  }

  export type usersUpdateManyWithWhereWithoutEstabelecimentosInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutEstabelecimentosInput>
  }

  export type usersScalarWhereInput = {
    AND?: usersScalarWhereInput | usersScalarWhereInput[]
    OR?: usersScalarWhereInput[]
    NOT?: usersScalarWhereInput | usersScalarWhereInput[]
    id?: StringFilter<"users"> | string
    name?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    type?: EnumUserTypeFilter<"users"> | $Enums.UserType
    status?: EnumStatusFilter<"users"> | $Enums.Status
    lastLogin?: DateTimeNullableFilter<"users"> | Date | string | null
    createdAt?: DateTimeFilter<"users"> | Date | string
    updatedAt?: DateTimeFilter<"users"> | Date | string
    franqueadoraId?: StringNullableFilter<"users"> | string | null
    franqueadoId?: StringNullableFilter<"users"> | string | null
    estabelecimentoId?: StringNullableFilter<"users"> | string | null
  }

  export type franqueadosCreateWithoutFranqueadorasInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasCreateNestedManyWithoutFranqueadoInput
    displays?: displaysCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosCreateNestedManyWithoutFranqueadosInput
    logs?: logsCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutFranqueadosInput
    users?: usersCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosUncheckedCreateWithoutFranqueadorasInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutFranqueadoInput
    displays?: displaysUncheckedCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosUncheckedCreateNestedManyWithoutFranqueadosInput
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutFranqueadosInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosCreateOrConnectWithoutFranqueadorasInput = {
    where: franqueadosWhereUniqueInput
    create: XOR<franqueadosCreateWithoutFranqueadorasInput, franqueadosUncheckedCreateWithoutFranqueadorasInput>
  }

  export type franqueadosCreateManyFranqueadorasInputEnvelope = {
    data: franqueadosCreateManyFranqueadorasInput | franqueadosCreateManyFranqueadorasInput[]
    skipDuplicates?: boolean
  }

  export type logsCreateWithoutFranqueadorasInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    cartoes?: cartoesCreateNestedOneWithoutLogsInput
    comissoes?: comissoesCreateNestedOneWithoutLogsInput
    displays?: displaysCreateNestedOneWithoutLogsInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutLogsInput
    franqueados?: franqueadosCreateNestedOneWithoutLogsInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedOneWithoutLogsInput
    transacoes?: transacoesCreateNestedOneWithoutLogsInput
    users?: usersCreateNestedOneWithoutLogsInput
  }

  export type logsUncheckedCreateWithoutFranqueadorasInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type logsCreateOrConnectWithoutFranqueadorasInput = {
    where: logsWhereUniqueInput
    create: XOR<logsCreateWithoutFranqueadorasInput, logsUncheckedCreateWithoutFranqueadorasInput>
  }

  export type logsCreateManyFranqueadorasInputEnvelope = {
    data: logsCreateManyFranqueadorasInput | logsCreateManyFranqueadorasInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutFranqueadorasInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    logs?: logsCreateNestedManyWithoutUsersInput
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutUsersInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutUsersInput
    franqueados?: franqueadosCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutFranqueadorasInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    logs?: logsUncheckedCreateNestedManyWithoutUsersInput
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutFranqueadorasInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutFranqueadorasInput, usersUncheckedCreateWithoutFranqueadorasInput>
  }

  export type usersCreateManyFranqueadorasInputEnvelope = {
    data: usersCreateManyFranqueadorasInput | usersCreateManyFranqueadorasInput[]
    skipDuplicates?: boolean
  }

  export type franqueadosUpsertWithWhereUniqueWithoutFranqueadorasInput = {
    where: franqueadosWhereUniqueInput
    update: XOR<franqueadosUpdateWithoutFranqueadorasInput, franqueadosUncheckedUpdateWithoutFranqueadorasInput>
    create: XOR<franqueadosCreateWithoutFranqueadorasInput, franqueadosUncheckedCreateWithoutFranqueadorasInput>
  }

  export type franqueadosUpdateWithWhereUniqueWithoutFranqueadorasInput = {
    where: franqueadosWhereUniqueInput
    data: XOR<franqueadosUpdateWithoutFranqueadorasInput, franqueadosUncheckedUpdateWithoutFranqueadorasInput>
  }

  export type franqueadosUpdateManyWithWhereWithoutFranqueadorasInput = {
    where: franqueadosScalarWhereInput
    data: XOR<franqueadosUpdateManyMutationInput, franqueadosUncheckedUpdateManyWithoutFranqueadorasInput>
  }

  export type franqueadosScalarWhereInput = {
    AND?: franqueadosScalarWhereInput | franqueadosScalarWhereInput[]
    OR?: franqueadosScalarWhereInput[]
    NOT?: franqueadosScalarWhereInput | franqueadosScalarWhereInput[]
    id?: StringFilter<"franqueados"> | string
    name?: StringFilter<"franqueados"> | string
    cnpj?: StringFilter<"franqueados"> | string
    email?: StringFilter<"franqueados"> | string
    phone?: StringFilter<"franqueados"> | string
    address?: StringFilter<"franqueados"> | string
    region?: StringFilter<"franqueados"> | string
    comissionRate?: FloatFilter<"franqueados"> | number
    status?: EnumStatusFilter<"franqueados"> | $Enums.Status
    asaasCustomerId?: StringNullableFilter<"franqueados"> | string | null
    logo?: StringNullableFilter<"franqueados"> | string | null
    createdAt?: DateTimeFilter<"franqueados"> | Date | string
    updatedAt?: DateTimeFilter<"franqueados"> | Date | string
    franqueadoraId?: StringFilter<"franqueados"> | string
  }

  export type logsUpsertWithWhereUniqueWithoutFranqueadorasInput = {
    where: logsWhereUniqueInput
    update: XOR<logsUpdateWithoutFranqueadorasInput, logsUncheckedUpdateWithoutFranqueadorasInput>
    create: XOR<logsCreateWithoutFranqueadorasInput, logsUncheckedCreateWithoutFranqueadorasInput>
  }

  export type logsUpdateWithWhereUniqueWithoutFranqueadorasInput = {
    where: logsWhereUniqueInput
    data: XOR<logsUpdateWithoutFranqueadorasInput, logsUncheckedUpdateWithoutFranqueadorasInput>
  }

  export type logsUpdateManyWithWhereWithoutFranqueadorasInput = {
    where: logsScalarWhereInput
    data: XOR<logsUpdateManyMutationInput, logsUncheckedUpdateManyWithoutFranqueadorasInput>
  }

  export type usersUpsertWithWhereUniqueWithoutFranqueadorasInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutFranqueadorasInput, usersUncheckedUpdateWithoutFranqueadorasInput>
    create: XOR<usersCreateWithoutFranqueadorasInput, usersUncheckedCreateWithoutFranqueadorasInput>
  }

  export type usersUpdateWithWhereUniqueWithoutFranqueadorasInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutFranqueadorasInput, usersUncheckedUpdateWithoutFranqueadorasInput>
  }

  export type usersUpdateManyWithWhereWithoutFranqueadorasInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutFranqueadorasInput>
  }

  export type cartoesCreateWithoutFranqueadosInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    usuarioId?: string | null
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutCartoesInput
    logs?: logsCreateNestedManyWithoutCartoesInput
    transacoes?: transacoesCreateNestedManyWithoutCartoesInput
  }

  export type cartoesUncheckedCreateWithoutFranqueadosInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId?: string | null
    usuarioId?: string | null
    logs?: logsUncheckedCreateNestedManyWithoutCartoesInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutCartoesInput
  }

  export type cartoesCreateOrConnectWithoutFranqueadosInput = {
    where: cartoesWhereUniqueInput
    create: XOR<cartoesCreateWithoutFranqueadosInput, cartoesUncheckedCreateWithoutFranqueadosInput>
  }

  export type cartoesCreateManyFranqueadosInputEnvelope = {
    data: cartoesCreateManyFranqueadosInput | cartoesCreateManyFranqueadosInput[]
    skipDuplicates?: boolean
  }

  export type comissoesCreateWithoutFranqueadosInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentos: estabelecimentosCreateNestedOneWithoutComissoesInput
    transacoes: transacoesCreateNestedOneWithoutComissoesInput
    logs?: logsCreateNestedManyWithoutComissoesInput
  }

  export type comissoesUncheckedCreateWithoutFranqueadosInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId: string
    transacaoId: string
    logs?: logsUncheckedCreateNestedManyWithoutComissoesInput
  }

  export type comissoesCreateOrConnectWithoutFranqueadosInput = {
    where: comissoesWhereUniqueInput
    create: XOR<comissoesCreateWithoutFranqueadosInput, comissoesUncheckedCreateWithoutFranqueadosInput>
  }

  export type comissoesCreateManyFranqueadosInputEnvelope = {
    data: comissoesCreateManyFranqueadosInput | comissoesCreateManyFranqueadosInput[]
    skipDuplicates?: boolean
  }

  export type cobrancasCreateWithoutFranqueadoInput = {
    id?: string
    asaasChargeId?: string | null
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.CobrancaStatus
    tipo: $Enums.TipoCobranca
    vencimento: Date | string
    urlPagamento?: string | null
    pixQrCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
    estabelecimento: estabelecimentosCreateNestedOneWithoutCobrancasInput
  }

  export type cobrancasUncheckedCreateWithoutFranqueadoInput = {
    id?: string
    estabelecimentoId: string
    asaasChargeId?: string | null
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.CobrancaStatus
    tipo: $Enums.TipoCobranca
    vencimento: Date | string
    urlPagamento?: string | null
    pixQrCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type cobrancasCreateOrConnectWithoutFranqueadoInput = {
    where: cobrancasWhereUniqueInput
    create: XOR<cobrancasCreateWithoutFranqueadoInput, cobrancasUncheckedCreateWithoutFranqueadoInput>
  }

  export type cobrancasCreateManyFranqueadoInputEnvelope = {
    data: cobrancasCreateManyFranqueadoInput | cobrancasCreateManyFranqueadoInput[]
    skipDuplicates?: boolean
  }

  export type displaysCreateWithoutFranqueadosInput = {
    id: string
    tipo: $Enums.DisplayTipo
    status?: $Enums.DisplayStatus
    dataInstalacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutDisplaysInput
    logs?: logsCreateNestedManyWithoutDisplaysInput
  }

  export type displaysUncheckedCreateWithoutFranqueadosInput = {
    id: string
    tipo: $Enums.DisplayTipo
    status?: $Enums.DisplayStatus
    dataInstalacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId?: string | null
    logs?: logsUncheckedCreateNestedManyWithoutDisplaysInput
  }

  export type displaysCreateOrConnectWithoutFranqueadosInput = {
    where: displaysWhereUniqueInput
    create: XOR<displaysCreateWithoutFranqueadosInput, displaysUncheckedCreateWithoutFranqueadosInput>
  }

  export type displaysCreateManyFranqueadosInputEnvelope = {
    data: displaysCreateManyFranqueadosInput | displaysCreateManyFranqueadosInput[]
    skipDuplicates?: boolean
  }

  export type estabelecimentosCreateWithoutFranqueadosInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesCreateNestedManyWithoutEstabelecimentosInput
    users?: usersCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUncheckedCreateWithoutFranqueadosInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysUncheckedCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsUncheckedCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    users?: usersUncheckedCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosCreateOrConnectWithoutFranqueadosInput = {
    where: estabelecimentosWhereUniqueInput
    create: XOR<estabelecimentosCreateWithoutFranqueadosInput, estabelecimentosUncheckedCreateWithoutFranqueadosInput>
  }

  export type estabelecimentosCreateManyFranqueadosInputEnvelope = {
    data: estabelecimentosCreateManyFranqueadosInput | estabelecimentosCreateManyFranqueadosInput[]
    skipDuplicates?: boolean
  }

  export type franqueadorasCreateWithoutFranqueadosInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    logo?: string | null
    status?: $Enums.Status
    createdAt?: Date | string
    updatedAt: Date | string
    logs?: logsCreateNestedManyWithoutFranqueadorasInput
    users?: usersCreateNestedManyWithoutFranqueadorasInput
  }

  export type franqueadorasUncheckedCreateWithoutFranqueadosInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    logo?: string | null
    status?: $Enums.Status
    createdAt?: Date | string
    updatedAt: Date | string
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadorasInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadorasInput
  }

  export type franqueadorasCreateOrConnectWithoutFranqueadosInput = {
    where: franqueadorasWhereUniqueInput
    create: XOR<franqueadorasCreateWithoutFranqueadosInput, franqueadorasUncheckedCreateWithoutFranqueadosInput>
  }

  export type logsCreateWithoutFranqueadosInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    cartoes?: cartoesCreateNestedOneWithoutLogsInput
    comissoes?: comissoesCreateNestedOneWithoutLogsInput
    displays?: displaysCreateNestedOneWithoutLogsInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutLogsInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutLogsInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedOneWithoutLogsInput
    transacoes?: transacoesCreateNestedOneWithoutLogsInput
    users?: usersCreateNestedOneWithoutLogsInput
  }

  export type logsUncheckedCreateWithoutFranqueadosInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type logsCreateOrConnectWithoutFranqueadosInput = {
    where: logsWhereUniqueInput
    create: XOR<logsCreateWithoutFranqueadosInput, logsUncheckedCreateWithoutFranqueadosInput>
  }

  export type logsCreateManyFranqueadosInputEnvelope = {
    data: logsCreateManyFranqueadosInput | logsCreateManyFranqueadosInput[]
    skipDuplicates?: boolean
  }

  export type solicitacoes_cartaoCreateWithoutFranqueadosInput = {
    id: string
    quantidade: number
    status?: $Enums.SolicitacaoStatus
    observacoes?: string | null
    dataAprovacao?: Date | string | null
    dataEnvio?: Date | string | null
    dataEntrega?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    logs?: logsCreateNestedManyWithoutSolicitacoes_cartaoInput
    estabelecimentos: estabelecimentosCreateNestedOneWithoutSolicitacoes_cartaoInput
  }

  export type solicitacoes_cartaoUncheckedCreateWithoutFranqueadosInput = {
    id: string
    quantidade: number
    status?: $Enums.SolicitacaoStatus
    observacoes?: string | null
    dataAprovacao?: Date | string | null
    dataEnvio?: Date | string | null
    dataEntrega?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId: string
    logs?: logsUncheckedCreateNestedManyWithoutSolicitacoes_cartaoInput
  }

  export type solicitacoes_cartaoCreateOrConnectWithoutFranqueadosInput = {
    where: solicitacoes_cartaoWhereUniqueInput
    create: XOR<solicitacoes_cartaoCreateWithoutFranqueadosInput, solicitacoes_cartaoUncheckedCreateWithoutFranqueadosInput>
  }

  export type solicitacoes_cartaoCreateManyFranqueadosInputEnvelope = {
    data: solicitacoes_cartaoCreateManyFranqueadosInput | solicitacoes_cartaoCreateManyFranqueadosInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutFranqueadosInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    logs?: logsCreateNestedManyWithoutUsersInput
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutUsersInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutUsersInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutFranqueadosInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId?: string | null
    estabelecimentoId?: string | null
    logs?: logsUncheckedCreateNestedManyWithoutUsersInput
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutFranqueadosInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutFranqueadosInput, usersUncheckedCreateWithoutFranqueadosInput>
  }

  export type usersCreateManyFranqueadosInputEnvelope = {
    data: usersCreateManyFranqueadosInput | usersCreateManyFranqueadosInput[]
    skipDuplicates?: boolean
  }

  export type cartoesUpsertWithWhereUniqueWithoutFranqueadosInput = {
    where: cartoesWhereUniqueInput
    update: XOR<cartoesUpdateWithoutFranqueadosInput, cartoesUncheckedUpdateWithoutFranqueadosInput>
    create: XOR<cartoesCreateWithoutFranqueadosInput, cartoesUncheckedCreateWithoutFranqueadosInput>
  }

  export type cartoesUpdateWithWhereUniqueWithoutFranqueadosInput = {
    where: cartoesWhereUniqueInput
    data: XOR<cartoesUpdateWithoutFranqueadosInput, cartoesUncheckedUpdateWithoutFranqueadosInput>
  }

  export type cartoesUpdateManyWithWhereWithoutFranqueadosInput = {
    where: cartoesScalarWhereInput
    data: XOR<cartoesUpdateManyMutationInput, cartoesUncheckedUpdateManyWithoutFranqueadosInput>
  }

  export type comissoesUpsertWithWhereUniqueWithoutFranqueadosInput = {
    where: comissoesWhereUniqueInput
    update: XOR<comissoesUpdateWithoutFranqueadosInput, comissoesUncheckedUpdateWithoutFranqueadosInput>
    create: XOR<comissoesCreateWithoutFranqueadosInput, comissoesUncheckedCreateWithoutFranqueadosInput>
  }

  export type comissoesUpdateWithWhereUniqueWithoutFranqueadosInput = {
    where: comissoesWhereUniqueInput
    data: XOR<comissoesUpdateWithoutFranqueadosInput, comissoesUncheckedUpdateWithoutFranqueadosInput>
  }

  export type comissoesUpdateManyWithWhereWithoutFranqueadosInput = {
    where: comissoesScalarWhereInput
    data: XOR<comissoesUpdateManyMutationInput, comissoesUncheckedUpdateManyWithoutFranqueadosInput>
  }

  export type cobrancasUpsertWithWhereUniqueWithoutFranqueadoInput = {
    where: cobrancasWhereUniqueInput
    update: XOR<cobrancasUpdateWithoutFranqueadoInput, cobrancasUncheckedUpdateWithoutFranqueadoInput>
    create: XOR<cobrancasCreateWithoutFranqueadoInput, cobrancasUncheckedCreateWithoutFranqueadoInput>
  }

  export type cobrancasUpdateWithWhereUniqueWithoutFranqueadoInput = {
    where: cobrancasWhereUniqueInput
    data: XOR<cobrancasUpdateWithoutFranqueadoInput, cobrancasUncheckedUpdateWithoutFranqueadoInput>
  }

  export type cobrancasUpdateManyWithWhereWithoutFranqueadoInput = {
    where: cobrancasScalarWhereInput
    data: XOR<cobrancasUpdateManyMutationInput, cobrancasUncheckedUpdateManyWithoutFranqueadoInput>
  }

  export type displaysUpsertWithWhereUniqueWithoutFranqueadosInput = {
    where: displaysWhereUniqueInput
    update: XOR<displaysUpdateWithoutFranqueadosInput, displaysUncheckedUpdateWithoutFranqueadosInput>
    create: XOR<displaysCreateWithoutFranqueadosInput, displaysUncheckedCreateWithoutFranqueadosInput>
  }

  export type displaysUpdateWithWhereUniqueWithoutFranqueadosInput = {
    where: displaysWhereUniqueInput
    data: XOR<displaysUpdateWithoutFranqueadosInput, displaysUncheckedUpdateWithoutFranqueadosInput>
  }

  export type displaysUpdateManyWithWhereWithoutFranqueadosInput = {
    where: displaysScalarWhereInput
    data: XOR<displaysUpdateManyMutationInput, displaysUncheckedUpdateManyWithoutFranqueadosInput>
  }

  export type estabelecimentosUpsertWithWhereUniqueWithoutFranqueadosInput = {
    where: estabelecimentosWhereUniqueInput
    update: XOR<estabelecimentosUpdateWithoutFranqueadosInput, estabelecimentosUncheckedUpdateWithoutFranqueadosInput>
    create: XOR<estabelecimentosCreateWithoutFranqueadosInput, estabelecimentosUncheckedCreateWithoutFranqueadosInput>
  }

  export type estabelecimentosUpdateWithWhereUniqueWithoutFranqueadosInput = {
    where: estabelecimentosWhereUniqueInput
    data: XOR<estabelecimentosUpdateWithoutFranqueadosInput, estabelecimentosUncheckedUpdateWithoutFranqueadosInput>
  }

  export type estabelecimentosUpdateManyWithWhereWithoutFranqueadosInput = {
    where: estabelecimentosScalarWhereInput
    data: XOR<estabelecimentosUpdateManyMutationInput, estabelecimentosUncheckedUpdateManyWithoutFranqueadosInput>
  }

  export type estabelecimentosScalarWhereInput = {
    AND?: estabelecimentosScalarWhereInput | estabelecimentosScalarWhereInput[]
    OR?: estabelecimentosScalarWhereInput[]
    NOT?: estabelecimentosScalarWhereInput | estabelecimentosScalarWhereInput[]
    id?: StringFilter<"estabelecimentos"> | string
    name?: StringFilter<"estabelecimentos"> | string
    cnpj?: StringFilter<"estabelecimentos"> | string
    email?: StringFilter<"estabelecimentos"> | string
    phone?: StringFilter<"estabelecimentos"> | string
    address?: StringFilter<"estabelecimentos"> | string
    category?: StringFilter<"estabelecimentos"> | string
    status?: EnumEstabelecimentoStatusFilter<"estabelecimentos"> | $Enums.EstabelecimentoStatus
    ativadoEm?: DateTimeNullableFilter<"estabelecimentos"> | Date | string | null
    logo?: StringNullableFilter<"estabelecimentos"> | string | null
    asaasId?: StringNullableFilter<"estabelecimentos"> | string | null
    createdAt?: DateTimeFilter<"estabelecimentos"> | Date | string
    updatedAt?: DateTimeFilter<"estabelecimentos"> | Date | string
    franqueadoId?: StringFilter<"estabelecimentos"> | string
  }

  export type franqueadorasUpsertWithoutFranqueadosInput = {
    update: XOR<franqueadorasUpdateWithoutFranqueadosInput, franqueadorasUncheckedUpdateWithoutFranqueadosInput>
    create: XOR<franqueadorasCreateWithoutFranqueadosInput, franqueadorasUncheckedCreateWithoutFranqueadosInput>
    where?: franqueadorasWhereInput
  }

  export type franqueadorasUpdateToOneWithWhereWithoutFranqueadosInput = {
    where?: franqueadorasWhereInput
    data: XOR<franqueadorasUpdateWithoutFranqueadosInput, franqueadorasUncheckedUpdateWithoutFranqueadosInput>
  }

  export type franqueadorasUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    logs?: logsUpdateManyWithoutFranqueadorasNestedInput
    users?: usersUpdateManyWithoutFranqueadorasNestedInput
  }

  export type franqueadorasUncheckedUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    logs?: logsUncheckedUpdateManyWithoutFranqueadorasNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadorasNestedInput
  }

  export type logsUpsertWithWhereUniqueWithoutFranqueadosInput = {
    where: logsWhereUniqueInput
    update: XOR<logsUpdateWithoutFranqueadosInput, logsUncheckedUpdateWithoutFranqueadosInput>
    create: XOR<logsCreateWithoutFranqueadosInput, logsUncheckedCreateWithoutFranqueadosInput>
  }

  export type logsUpdateWithWhereUniqueWithoutFranqueadosInput = {
    where: logsWhereUniqueInput
    data: XOR<logsUpdateWithoutFranqueadosInput, logsUncheckedUpdateWithoutFranqueadosInput>
  }

  export type logsUpdateManyWithWhereWithoutFranqueadosInput = {
    where: logsScalarWhereInput
    data: XOR<logsUpdateManyMutationInput, logsUncheckedUpdateManyWithoutFranqueadosInput>
  }

  export type solicitacoes_cartaoUpsertWithWhereUniqueWithoutFranqueadosInput = {
    where: solicitacoes_cartaoWhereUniqueInput
    update: XOR<solicitacoes_cartaoUpdateWithoutFranqueadosInput, solicitacoes_cartaoUncheckedUpdateWithoutFranqueadosInput>
    create: XOR<solicitacoes_cartaoCreateWithoutFranqueadosInput, solicitacoes_cartaoUncheckedCreateWithoutFranqueadosInput>
  }

  export type solicitacoes_cartaoUpdateWithWhereUniqueWithoutFranqueadosInput = {
    where: solicitacoes_cartaoWhereUniqueInput
    data: XOR<solicitacoes_cartaoUpdateWithoutFranqueadosInput, solicitacoes_cartaoUncheckedUpdateWithoutFranqueadosInput>
  }

  export type solicitacoes_cartaoUpdateManyWithWhereWithoutFranqueadosInput = {
    where: solicitacoes_cartaoScalarWhereInput
    data: XOR<solicitacoes_cartaoUpdateManyMutationInput, solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosInput>
  }

  export type usersUpsertWithWhereUniqueWithoutFranqueadosInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutFranqueadosInput, usersUncheckedUpdateWithoutFranqueadosInput>
    create: XOR<usersCreateWithoutFranqueadosInput, usersUncheckedCreateWithoutFranqueadosInput>
  }

  export type usersUpdateWithWhereUniqueWithoutFranqueadosInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutFranqueadosInput, usersUncheckedUpdateWithoutFranqueadosInput>
  }

  export type usersUpdateManyWithWhereWithoutFranqueadosInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutFranqueadosInput>
  }

  export type cartoesCreateWithoutLogsInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    usuarioId?: string | null
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutCartoesInput
    franqueados: franqueadosCreateNestedOneWithoutCartoesInput
    transacoes?: transacoesCreateNestedManyWithoutCartoesInput
  }

  export type cartoesUncheckedCreateWithoutLogsInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId?: string | null
    usuarioId?: string | null
    transacoes?: transacoesUncheckedCreateNestedManyWithoutCartoesInput
  }

  export type cartoesCreateOrConnectWithoutLogsInput = {
    where: cartoesWhereUniqueInput
    create: XOR<cartoesCreateWithoutLogsInput, cartoesUncheckedCreateWithoutLogsInput>
  }

  export type comissoesCreateWithoutLogsInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentos: estabelecimentosCreateNestedOneWithoutComissoesInput
    franqueados: franqueadosCreateNestedOneWithoutComissoesInput
    transacoes: transacoesCreateNestedOneWithoutComissoesInput
  }

  export type comissoesUncheckedCreateWithoutLogsInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId: string
    transacaoId: string
  }

  export type comissoesCreateOrConnectWithoutLogsInput = {
    where: comissoesWhereUniqueInput
    create: XOR<comissoesCreateWithoutLogsInput, comissoesUncheckedCreateWithoutLogsInput>
  }

  export type displaysCreateWithoutLogsInput = {
    id: string
    tipo: $Enums.DisplayTipo
    status?: $Enums.DisplayStatus
    dataInstalacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutDisplaysInput
    franqueados: franqueadosCreateNestedOneWithoutDisplaysInput
  }

  export type displaysUncheckedCreateWithoutLogsInput = {
    id: string
    tipo: $Enums.DisplayTipo
    status?: $Enums.DisplayStatus
    dataInstalacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId?: string | null
  }

  export type displaysCreateOrConnectWithoutLogsInput = {
    where: displaysWhereUniqueInput
    create: XOR<displaysCreateWithoutLogsInput, displaysUncheckedCreateWithoutLogsInput>
  }

  export type estabelecimentosCreateWithoutLogsInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsCreateNestedOneWithoutEstabelecimentosInput
    franqueados: franqueadosCreateNestedOneWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesCreateNestedManyWithoutEstabelecimentosInput
    users?: usersCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUncheckedCreateWithoutLogsInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysUncheckedCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedCreateNestedOneWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    users?: usersUncheckedCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosCreateOrConnectWithoutLogsInput = {
    where: estabelecimentosWhereUniqueInput
    create: XOR<estabelecimentosCreateWithoutLogsInput, estabelecimentosUncheckedCreateWithoutLogsInput>
  }

  export type franqueadosCreateWithoutLogsInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasCreateNestedManyWithoutFranqueadoInput
    displays?: displaysCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosCreateNestedManyWithoutFranqueadosInput
    franqueadoras: franqueadorasCreateNestedOneWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutFranqueadosInput
    users?: usersCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosUncheckedCreateWithoutLogsInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutFranqueadoInput
    displays?: displaysUncheckedCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosUncheckedCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutFranqueadosInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosCreateOrConnectWithoutLogsInput = {
    where: franqueadosWhereUniqueInput
    create: XOR<franqueadosCreateWithoutLogsInput, franqueadosUncheckedCreateWithoutLogsInput>
  }

  export type franqueadorasCreateWithoutLogsInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    logo?: string | null
    status?: $Enums.Status
    createdAt?: Date | string
    updatedAt: Date | string
    franqueados?: franqueadosCreateNestedManyWithoutFranqueadorasInput
    users?: usersCreateNestedManyWithoutFranqueadorasInput
  }

  export type franqueadorasUncheckedCreateWithoutLogsInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    logo?: string | null
    status?: $Enums.Status
    createdAt?: Date | string
    updatedAt: Date | string
    franqueados?: franqueadosUncheckedCreateNestedManyWithoutFranqueadorasInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadorasInput
  }

  export type franqueadorasCreateOrConnectWithoutLogsInput = {
    where: franqueadorasWhereUniqueInput
    create: XOR<franqueadorasCreateWithoutLogsInput, franqueadorasUncheckedCreateWithoutLogsInput>
  }

  export type solicitacoes_cartaoCreateWithoutLogsInput = {
    id: string
    quantidade: number
    status?: $Enums.SolicitacaoStatus
    observacoes?: string | null
    dataAprovacao?: Date | string | null
    dataEnvio?: Date | string | null
    dataEntrega?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentos: estabelecimentosCreateNestedOneWithoutSolicitacoes_cartaoInput
    franqueados: franqueadosCreateNestedOneWithoutSolicitacoes_cartaoInput
  }

  export type solicitacoes_cartaoUncheckedCreateWithoutLogsInput = {
    id: string
    quantidade: number
    status?: $Enums.SolicitacaoStatus
    observacoes?: string | null
    dataAprovacao?: Date | string | null
    dataEnvio?: Date | string | null
    dataEntrega?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId: string
    franqueadoId: string
  }

  export type solicitacoes_cartaoCreateOrConnectWithoutLogsInput = {
    where: solicitacoes_cartaoWhereUniqueInput
    create: XOR<solicitacoes_cartaoCreateWithoutLogsInput, solicitacoes_cartaoUncheckedCreateWithoutLogsInput>
  }

  export type transacoesCreateWithoutLogsInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    comissoes?: comissoesCreateNestedManyWithoutTransacoesInput
    cartoes: cartoesCreateNestedOneWithoutTransacoesInput
    estabelecimentos: estabelecimentosCreateNestedOneWithoutTransacoesInput
  }

  export type transacoesUncheckedCreateWithoutLogsInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartaoId: string
    estabelecimentoId: string
    comissoes?: comissoesUncheckedCreateNestedManyWithoutTransacoesInput
  }

  export type transacoesCreateOrConnectWithoutLogsInput = {
    where: transacoesWhereUniqueInput
    create: XOR<transacoesCreateWithoutLogsInput, transacoesUncheckedCreateWithoutLogsInput>
  }

  export type usersCreateWithoutLogsInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutUsersInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutUsersInput
    franqueados?: franqueadosCreateNestedOneWithoutUsersInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutLogsInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutLogsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutLogsInput, usersUncheckedCreateWithoutLogsInput>
  }

  export type cartoesUpsertWithoutLogsInput = {
    update: XOR<cartoesUpdateWithoutLogsInput, cartoesUncheckedUpdateWithoutLogsInput>
    create: XOR<cartoesCreateWithoutLogsInput, cartoesUncheckedCreateWithoutLogsInput>
    where?: cartoesWhereInput
  }

  export type cartoesUpdateToOneWithWhereWithoutLogsInput = {
    where?: cartoesWhereInput
    data: XOR<cartoesUpdateWithoutLogsInput, cartoesUncheckedUpdateWithoutLogsInput>
  }

  export type cartoesUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentos?: estabelecimentosUpdateOneWithoutCartoesNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutCartoesNestedInput
    transacoes?: transacoesUpdateManyWithoutCartoesNestedInput
  }

  export type cartoesUncheckedUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    transacoes?: transacoesUncheckedUpdateManyWithoutCartoesNestedInput
  }

  export type comissoesUpsertWithoutLogsInput = {
    update: XOR<comissoesUpdateWithoutLogsInput, comissoesUncheckedUpdateWithoutLogsInput>
    create: XOR<comissoesCreateWithoutLogsInput, comissoesUncheckedCreateWithoutLogsInput>
    where?: comissoesWhereInput
  }

  export type comissoesUpdateToOneWithWhereWithoutLogsInput = {
    where?: comissoesWhereInput
    data: XOR<comissoesUpdateWithoutLogsInput, comissoesUncheckedUpdateWithoutLogsInput>
  }

  export type comissoesUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutComissoesNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutComissoesNestedInput
    transacoes?: transacoesUpdateOneRequiredWithoutComissoesNestedInput
  }

  export type comissoesUncheckedUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    transacaoId?: StringFieldUpdateOperationsInput | string
  }

  export type displaysUpsertWithoutLogsInput = {
    update: XOR<displaysUpdateWithoutLogsInput, displaysUncheckedUpdateWithoutLogsInput>
    create: XOR<displaysCreateWithoutLogsInput, displaysUncheckedCreateWithoutLogsInput>
    where?: displaysWhereInput
  }

  export type displaysUpdateToOneWithWhereWithoutLogsInput = {
    where?: displaysWhereInput
    data: XOR<displaysUpdateWithoutLogsInput, displaysUncheckedUpdateWithoutLogsInput>
  }

  export type displaysUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentos?: estabelecimentosUpdateOneWithoutDisplaysNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutDisplaysNestedInput
  }

  export type displaysUncheckedUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type estabelecimentosUpsertWithoutLogsInput = {
    update: XOR<estabelecimentosUpdateWithoutLogsInput, estabelecimentosUncheckedUpdateWithoutLogsInput>
    create: XOR<estabelecimentosCreateWithoutLogsInput, estabelecimentosUncheckedCreateWithoutLogsInput>
    where?: estabelecimentosWhereInput
  }

  export type estabelecimentosUpdateToOneWithWhereWithoutLogsInput = {
    where?: estabelecimentosWhereInput
    data: XOR<estabelecimentosUpdateWithoutLogsInput, estabelecimentosUncheckedUpdateWithoutLogsInput>
  }

  export type estabelecimentosUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUpdateOneWithoutEstabelecimentosNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedUpdateOneWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUncheckedUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type franqueadosUpsertWithoutLogsInput = {
    update: XOR<franqueadosUpdateWithoutLogsInput, franqueadosUncheckedUpdateWithoutLogsInput>
    create: XOR<franqueadosCreateWithoutLogsInput, franqueadosUncheckedCreateWithoutLogsInput>
    where?: franqueadosWhereInput
  }

  export type franqueadosUpdateToOneWithWhereWithoutLogsInput = {
    where?: franqueadosWhereInput
    data: XOR<franqueadosUpdateWithoutLogsInput, franqueadosUncheckedUpdateWithoutLogsInput>
  }

  export type franqueadosUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUpdateManyWithoutFranqueadosNestedInput
    franqueadoras?: franqueadorasUpdateOneRequiredWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutFranqueadosNestedInput
    users?: usersUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosUncheckedUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUncheckedUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadorasUpsertWithoutLogsInput = {
    update: XOR<franqueadorasUpdateWithoutLogsInput, franqueadorasUncheckedUpdateWithoutLogsInput>
    create: XOR<franqueadorasCreateWithoutLogsInput, franqueadorasUncheckedCreateWithoutLogsInput>
    where?: franqueadorasWhereInput
  }

  export type franqueadorasUpdateToOneWithWhereWithoutLogsInput = {
    where?: franqueadorasWhereInput
    data: XOR<franqueadorasUpdateWithoutLogsInput, franqueadorasUncheckedUpdateWithoutLogsInput>
  }

  export type franqueadorasUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueados?: franqueadosUpdateManyWithoutFranqueadorasNestedInput
    users?: usersUpdateManyWithoutFranqueadorasNestedInput
  }

  export type franqueadorasUncheckedUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueados?: franqueadosUncheckedUpdateManyWithoutFranqueadorasNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadorasNestedInput
  }

  export type solicitacoes_cartaoUpsertWithoutLogsInput = {
    update: XOR<solicitacoes_cartaoUpdateWithoutLogsInput, solicitacoes_cartaoUncheckedUpdateWithoutLogsInput>
    create: XOR<solicitacoes_cartaoCreateWithoutLogsInput, solicitacoes_cartaoUncheckedCreateWithoutLogsInput>
    where?: solicitacoes_cartaoWhereInput
  }

  export type solicitacoes_cartaoUpdateToOneWithWhereWithoutLogsInput = {
    where?: solicitacoes_cartaoWhereInput
    data: XOR<solicitacoes_cartaoUpdateWithoutLogsInput, solicitacoes_cartaoUncheckedUpdateWithoutLogsInput>
  }

  export type solicitacoes_cartaoUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutSolicitacoes_cartaoNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutSolicitacoes_cartaoNestedInput
  }

  export type solicitacoes_cartaoUncheckedUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
  }

  export type transacoesUpsertWithoutLogsInput = {
    update: XOR<transacoesUpdateWithoutLogsInput, transacoesUncheckedUpdateWithoutLogsInput>
    create: XOR<transacoesCreateWithoutLogsInput, transacoesUncheckedCreateWithoutLogsInput>
    where?: transacoesWhereInput
  }

  export type transacoesUpdateToOneWithWhereWithoutLogsInput = {
    where?: transacoesWhereInput
    data: XOR<transacoesUpdateWithoutLogsInput, transacoesUncheckedUpdateWithoutLogsInput>
  }

  export type transacoesUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comissoes?: comissoesUpdateManyWithoutTransacoesNestedInput
    cartoes?: cartoesUpdateOneRequiredWithoutTransacoesNestedInput
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutTransacoesNestedInput
  }

  export type transacoesUncheckedUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartaoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    comissoes?: comissoesUncheckedUpdateManyWithoutTransacoesNestedInput
  }

  export type usersUpsertWithoutLogsInput = {
    update: XOR<usersUpdateWithoutLogsInput, usersUncheckedUpdateWithoutLogsInput>
    create: XOR<usersCreateWithoutLogsInput, usersUncheckedCreateWithoutLogsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutLogsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutLogsInput, usersUncheckedUpdateWithoutLogsInput>
  }

  export type usersUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refresh_tokens?: refresh_tokensUpdateManyWithoutUsersNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutUsersNestedInput
    franqueados?: franqueadosUpdateOneWithoutUsersNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutRefresh_tokensInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    logs?: logsCreateNestedManyWithoutUsersInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutUsersInput
    franqueados?: franqueadosCreateNestedOneWithoutUsersInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutRefresh_tokensInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    logs?: logsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutRefresh_tokensInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutRefresh_tokensInput, usersUncheckedCreateWithoutRefresh_tokensInput>
  }

  export type usersUpsertWithoutRefresh_tokensInput = {
    update: XOR<usersUpdateWithoutRefresh_tokensInput, usersUncheckedUpdateWithoutRefresh_tokensInput>
    create: XOR<usersCreateWithoutRefresh_tokensInput, usersUncheckedCreateWithoutRefresh_tokensInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutRefresh_tokensInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutRefresh_tokensInput, usersUncheckedUpdateWithoutRefresh_tokensInput>
  }

  export type usersUpdateWithoutRefresh_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    logs?: logsUpdateManyWithoutUsersNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutUsersNestedInput
    franqueados?: franqueadosUpdateOneWithoutUsersNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutRefresh_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    logs?: logsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type logsCreateWithoutSolicitacoes_cartaoInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    cartoes?: cartoesCreateNestedOneWithoutLogsInput
    comissoes?: comissoesCreateNestedOneWithoutLogsInput
    displays?: displaysCreateNestedOneWithoutLogsInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutLogsInput
    franqueados?: franqueadosCreateNestedOneWithoutLogsInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutLogsInput
    transacoes?: transacoesCreateNestedOneWithoutLogsInput
    users?: usersCreateNestedOneWithoutLogsInput
  }

  export type logsUncheckedCreateWithoutSolicitacoes_cartaoInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    displayId?: string | null
  }

  export type logsCreateOrConnectWithoutSolicitacoes_cartaoInput = {
    where: logsWhereUniqueInput
    create: XOR<logsCreateWithoutSolicitacoes_cartaoInput, logsUncheckedCreateWithoutSolicitacoes_cartaoInput>
  }

  export type logsCreateManySolicitacoes_cartaoInputEnvelope = {
    data: logsCreateManySolicitacoes_cartaoInput | logsCreateManySolicitacoes_cartaoInput[]
    skipDuplicates?: boolean
  }

  export type estabelecimentosCreateWithoutSolicitacoes_cartaoInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsCreateNestedOneWithoutEstabelecimentosInput
    franqueados: franqueadosCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesCreateNestedManyWithoutEstabelecimentosInput
    users?: usersCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUncheckedCreateWithoutSolicitacoes_cartaoInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysUncheckedCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsUncheckedCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    users?: usersUncheckedCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosCreateOrConnectWithoutSolicitacoes_cartaoInput = {
    where: estabelecimentosWhereUniqueInput
    create: XOR<estabelecimentosCreateWithoutSolicitacoes_cartaoInput, estabelecimentosUncheckedCreateWithoutSolicitacoes_cartaoInput>
  }

  export type franqueadosCreateWithoutSolicitacoes_cartaoInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasCreateNestedManyWithoutFranqueadoInput
    displays?: displaysCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosCreateNestedManyWithoutFranqueadosInput
    franqueadoras: franqueadorasCreateNestedOneWithoutFranqueadosInput
    logs?: logsCreateNestedManyWithoutFranqueadosInput
    users?: usersCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosUncheckedCreateWithoutSolicitacoes_cartaoInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutFranqueadoInput
    displays?: displaysUncheckedCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosUncheckedCreateNestedManyWithoutFranqueadosInput
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadosInput
    users?: usersUncheckedCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosCreateOrConnectWithoutSolicitacoes_cartaoInput = {
    where: franqueadosWhereUniqueInput
    create: XOR<franqueadosCreateWithoutSolicitacoes_cartaoInput, franqueadosUncheckedCreateWithoutSolicitacoes_cartaoInput>
  }

  export type logsUpsertWithWhereUniqueWithoutSolicitacoes_cartaoInput = {
    where: logsWhereUniqueInput
    update: XOR<logsUpdateWithoutSolicitacoes_cartaoInput, logsUncheckedUpdateWithoutSolicitacoes_cartaoInput>
    create: XOR<logsCreateWithoutSolicitacoes_cartaoInput, logsUncheckedCreateWithoutSolicitacoes_cartaoInput>
  }

  export type logsUpdateWithWhereUniqueWithoutSolicitacoes_cartaoInput = {
    where: logsWhereUniqueInput
    data: XOR<logsUpdateWithoutSolicitacoes_cartaoInput, logsUncheckedUpdateWithoutSolicitacoes_cartaoInput>
  }

  export type logsUpdateManyWithWhereWithoutSolicitacoes_cartaoInput = {
    where: logsScalarWhereInput
    data: XOR<logsUpdateManyMutationInput, logsUncheckedUpdateManyWithoutSolicitacoes_cartaoInput>
  }

  export type estabelecimentosUpsertWithoutSolicitacoes_cartaoInput = {
    update: XOR<estabelecimentosUpdateWithoutSolicitacoes_cartaoInput, estabelecimentosUncheckedUpdateWithoutSolicitacoes_cartaoInput>
    create: XOR<estabelecimentosCreateWithoutSolicitacoes_cartaoInput, estabelecimentosUncheckedCreateWithoutSolicitacoes_cartaoInput>
    where?: estabelecimentosWhereInput
  }

  export type estabelecimentosUpdateToOneWithWhereWithoutSolicitacoes_cartaoInput = {
    where?: estabelecimentosWhereInput
    data: XOR<estabelecimentosUpdateWithoutSolicitacoes_cartaoInput, estabelecimentosUncheckedUpdateWithoutSolicitacoes_cartaoInput>
  }

  export type estabelecimentosUpdateWithoutSolicitacoes_cartaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUpdateOneWithoutEstabelecimentosNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutEstabelecimentosNestedInput
    logs?: logsUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateWithoutSolicitacoes_cartaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedUpdateOneWithoutEstabelecimentosNestedInput
    logs?: logsUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUncheckedUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type franqueadosUpsertWithoutSolicitacoes_cartaoInput = {
    update: XOR<franqueadosUpdateWithoutSolicitacoes_cartaoInput, franqueadosUncheckedUpdateWithoutSolicitacoes_cartaoInput>
    create: XOR<franqueadosCreateWithoutSolicitacoes_cartaoInput, franqueadosUncheckedCreateWithoutSolicitacoes_cartaoInput>
    where?: franqueadosWhereInput
  }

  export type franqueadosUpdateToOneWithWhereWithoutSolicitacoes_cartaoInput = {
    where?: franqueadosWhereInput
    data: XOR<franqueadosUpdateWithoutSolicitacoes_cartaoInput, franqueadosUncheckedUpdateWithoutSolicitacoes_cartaoInput>
  }

  export type franqueadosUpdateWithoutSolicitacoes_cartaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUpdateManyWithoutFranqueadosNestedInput
    franqueadoras?: franqueadorasUpdateOneRequiredWithoutFranqueadosNestedInput
    logs?: logsUpdateManyWithoutFranqueadosNestedInput
    users?: usersUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosUncheckedUpdateWithoutSolicitacoes_cartaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUncheckedUpdateManyWithoutFranqueadosNestedInput
    logs?: logsUncheckedUpdateManyWithoutFranqueadosNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadosNestedInput
  }

  export type comissoesCreateWithoutTransacoesInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentos: estabelecimentosCreateNestedOneWithoutComissoesInput
    franqueados: franqueadosCreateNestedOneWithoutComissoesInput
    logs?: logsCreateNestedManyWithoutComissoesInput
  }

  export type comissoesUncheckedCreateWithoutTransacoesInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId: string
    logs?: logsUncheckedCreateNestedManyWithoutComissoesInput
  }

  export type comissoesCreateOrConnectWithoutTransacoesInput = {
    where: comissoesWhereUniqueInput
    create: XOR<comissoesCreateWithoutTransacoesInput, comissoesUncheckedCreateWithoutTransacoesInput>
  }

  export type comissoesCreateManyTransacoesInputEnvelope = {
    data: comissoesCreateManyTransacoesInput | comissoesCreateManyTransacoesInput[]
    skipDuplicates?: boolean
  }

  export type logsCreateWithoutTransacoesInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    cartoes?: cartoesCreateNestedOneWithoutLogsInput
    comissoes?: comissoesCreateNestedOneWithoutLogsInput
    displays?: displaysCreateNestedOneWithoutLogsInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutLogsInput
    franqueados?: franqueadosCreateNestedOneWithoutLogsInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutLogsInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedOneWithoutLogsInput
    users?: usersCreateNestedOneWithoutLogsInput
  }

  export type logsUncheckedCreateWithoutTransacoesInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type logsCreateOrConnectWithoutTransacoesInput = {
    where: logsWhereUniqueInput
    create: XOR<logsCreateWithoutTransacoesInput, logsUncheckedCreateWithoutTransacoesInput>
  }

  export type logsCreateManyTransacoesInputEnvelope = {
    data: logsCreateManyTransacoesInput | logsCreateManyTransacoesInput[]
    skipDuplicates?: boolean
  }

  export type cartoesCreateWithoutTransacoesInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    usuarioId?: string | null
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutCartoesInput
    franqueados: franqueadosCreateNestedOneWithoutCartoesInput
    logs?: logsCreateNestedManyWithoutCartoesInput
  }

  export type cartoesUncheckedCreateWithoutTransacoesInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId?: string | null
    usuarioId?: string | null
    logs?: logsUncheckedCreateNestedManyWithoutCartoesInput
  }

  export type cartoesCreateOrConnectWithoutTransacoesInput = {
    where: cartoesWhereUniqueInput
    create: XOR<cartoesCreateWithoutTransacoesInput, cartoesUncheckedCreateWithoutTransacoesInput>
  }

  export type estabelecimentosCreateWithoutTransacoesInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsCreateNestedOneWithoutEstabelecimentosInput
    franqueados: franqueadosCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutEstabelecimentosInput
    users?: usersCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUncheckedCreateWithoutTransacoesInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysUncheckedCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsUncheckedCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutEstabelecimentosInput
    users?: usersUncheckedCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosCreateOrConnectWithoutTransacoesInput = {
    where: estabelecimentosWhereUniqueInput
    create: XOR<estabelecimentosCreateWithoutTransacoesInput, estabelecimentosUncheckedCreateWithoutTransacoesInput>
  }

  export type comissoesUpsertWithWhereUniqueWithoutTransacoesInput = {
    where: comissoesWhereUniqueInput
    update: XOR<comissoesUpdateWithoutTransacoesInput, comissoesUncheckedUpdateWithoutTransacoesInput>
    create: XOR<comissoesCreateWithoutTransacoesInput, comissoesUncheckedCreateWithoutTransacoesInput>
  }

  export type comissoesUpdateWithWhereUniqueWithoutTransacoesInput = {
    where: comissoesWhereUniqueInput
    data: XOR<comissoesUpdateWithoutTransacoesInput, comissoesUncheckedUpdateWithoutTransacoesInput>
  }

  export type comissoesUpdateManyWithWhereWithoutTransacoesInput = {
    where: comissoesScalarWhereInput
    data: XOR<comissoesUpdateManyMutationInput, comissoesUncheckedUpdateManyWithoutTransacoesInput>
  }

  export type logsUpsertWithWhereUniqueWithoutTransacoesInput = {
    where: logsWhereUniqueInput
    update: XOR<logsUpdateWithoutTransacoesInput, logsUncheckedUpdateWithoutTransacoesInput>
    create: XOR<logsCreateWithoutTransacoesInput, logsUncheckedCreateWithoutTransacoesInput>
  }

  export type logsUpdateWithWhereUniqueWithoutTransacoesInput = {
    where: logsWhereUniqueInput
    data: XOR<logsUpdateWithoutTransacoesInput, logsUncheckedUpdateWithoutTransacoesInput>
  }

  export type logsUpdateManyWithWhereWithoutTransacoesInput = {
    where: logsScalarWhereInput
    data: XOR<logsUpdateManyMutationInput, logsUncheckedUpdateManyWithoutTransacoesInput>
  }

  export type cartoesUpsertWithoutTransacoesInput = {
    update: XOR<cartoesUpdateWithoutTransacoesInput, cartoesUncheckedUpdateWithoutTransacoesInput>
    create: XOR<cartoesCreateWithoutTransacoesInput, cartoesUncheckedCreateWithoutTransacoesInput>
    where?: cartoesWhereInput
  }

  export type cartoesUpdateToOneWithWhereWithoutTransacoesInput = {
    where?: cartoesWhereInput
    data: XOR<cartoesUpdateWithoutTransacoesInput, cartoesUncheckedUpdateWithoutTransacoesInput>
  }

  export type cartoesUpdateWithoutTransacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentos?: estabelecimentosUpdateOneWithoutCartoesNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutCartoesNestedInput
    logs?: logsUpdateManyWithoutCartoesNestedInput
  }

  export type cartoesUncheckedUpdateWithoutTransacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    logs?: logsUncheckedUpdateManyWithoutCartoesNestedInput
  }

  export type estabelecimentosUpsertWithoutTransacoesInput = {
    update: XOR<estabelecimentosUpdateWithoutTransacoesInput, estabelecimentosUncheckedUpdateWithoutTransacoesInput>
    create: XOR<estabelecimentosCreateWithoutTransacoesInput, estabelecimentosUncheckedCreateWithoutTransacoesInput>
    where?: estabelecimentosWhereInput
  }

  export type estabelecimentosUpdateToOneWithWhereWithoutTransacoesInput = {
    where?: estabelecimentosWhereInput
    data: XOR<estabelecimentosUpdateWithoutTransacoesInput, estabelecimentosUncheckedUpdateWithoutTransacoesInput>
  }

  export type estabelecimentosUpdateWithoutTransacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUpdateOneWithoutEstabelecimentosNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutEstabelecimentosNestedInput
    logs?: logsUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateWithoutTransacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedUpdateOneWithoutEstabelecimentosNestedInput
    logs?: logsUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUncheckedUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type logsCreateWithoutUsersInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    cartoes?: cartoesCreateNestedOneWithoutLogsInput
    comissoes?: comissoesCreateNestedOneWithoutLogsInput
    displays?: displaysCreateNestedOneWithoutLogsInput
    estabelecimentos?: estabelecimentosCreateNestedOneWithoutLogsInput
    franqueados?: franqueadosCreateNestedOneWithoutLogsInput
    franqueadoras?: franqueadorasCreateNestedOneWithoutLogsInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedOneWithoutLogsInput
    transacoes?: transacoesCreateNestedOneWithoutLogsInput
  }

  export type logsUncheckedCreateWithoutUsersInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type logsCreateOrConnectWithoutUsersInput = {
    where: logsWhereUniqueInput
    create: XOR<logsCreateWithoutUsersInput, logsUncheckedCreateWithoutUsersInput>
  }

  export type logsCreateManyUsersInputEnvelope = {
    data: logsCreateManyUsersInput | logsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type refresh_tokensCreateWithoutUsersInput = {
    id: string
    token: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
  }

  export type refresh_tokensUncheckedCreateWithoutUsersInput = {
    id: string
    token: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
  }

  export type refresh_tokensCreateOrConnectWithoutUsersInput = {
    where: refresh_tokensWhereUniqueInput
    create: XOR<refresh_tokensCreateWithoutUsersInput, refresh_tokensUncheckedCreateWithoutUsersInput>
  }

  export type refresh_tokensCreateManyUsersInputEnvelope = {
    data: refresh_tokensCreateManyUsersInput | refresh_tokensCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type estabelecimentosCreateWithoutUsersInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsCreateNestedOneWithoutEstabelecimentosInput
    franqueados: franqueadosCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosUncheckedCreateWithoutUsersInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    displays?: displaysUncheckedCreateNestedManyWithoutEstabelecimentosInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedCreateNestedOneWithoutEstabelecimentosInput
    logs?: logsUncheckedCreateNestedManyWithoutEstabelecimentosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutEstabelecimentosInput
    transacoes?: transacoesUncheckedCreateNestedManyWithoutEstabelecimentosInput
  }

  export type estabelecimentosCreateOrConnectWithoutUsersInput = {
    where: estabelecimentosWhereUniqueInput
    create: XOR<estabelecimentosCreateWithoutUsersInput, estabelecimentosUncheckedCreateWithoutUsersInput>
  }

  export type franqueadosCreateWithoutUsersInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartoes?: cartoesCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasCreateNestedManyWithoutFranqueadoInput
    displays?: displaysCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosCreateNestedManyWithoutFranqueadosInput
    franqueadoras: franqueadorasCreateNestedOneWithoutFranqueadosInput
    logs?: logsCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosUncheckedCreateWithoutUsersInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId: string
    cartoes?: cartoesUncheckedCreateNestedManyWithoutFranqueadosInput
    comissoes?: comissoesUncheckedCreateNestedManyWithoutFranqueadosInput
    cobrancas?: cobrancasUncheckedCreateNestedManyWithoutFranqueadoInput
    displays?: displaysUncheckedCreateNestedManyWithoutFranqueadosInput
    estabelecimentos?: estabelecimentosUncheckedCreateNestedManyWithoutFranqueadosInput
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadosInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedCreateNestedManyWithoutFranqueadosInput
  }

  export type franqueadosCreateOrConnectWithoutUsersInput = {
    where: franqueadosWhereUniqueInput
    create: XOR<franqueadosCreateWithoutUsersInput, franqueadosUncheckedCreateWithoutUsersInput>
  }

  export type franqueadorasCreateWithoutUsersInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    logo?: string | null
    status?: $Enums.Status
    createdAt?: Date | string
    updatedAt: Date | string
    franqueados?: franqueadosCreateNestedManyWithoutFranqueadorasInput
    logs?: logsCreateNestedManyWithoutFranqueadorasInput
  }

  export type franqueadorasUncheckedCreateWithoutUsersInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    logo?: string | null
    status?: $Enums.Status
    createdAt?: Date | string
    updatedAt: Date | string
    franqueados?: franqueadosUncheckedCreateNestedManyWithoutFranqueadorasInput
    logs?: logsUncheckedCreateNestedManyWithoutFranqueadorasInput
  }

  export type franqueadorasCreateOrConnectWithoutUsersInput = {
    where: franqueadorasWhereUniqueInput
    create: XOR<franqueadorasCreateWithoutUsersInput, franqueadorasUncheckedCreateWithoutUsersInput>
  }

  export type logsUpsertWithWhereUniqueWithoutUsersInput = {
    where: logsWhereUniqueInput
    update: XOR<logsUpdateWithoutUsersInput, logsUncheckedUpdateWithoutUsersInput>
    create: XOR<logsCreateWithoutUsersInput, logsUncheckedCreateWithoutUsersInput>
  }

  export type logsUpdateWithWhereUniqueWithoutUsersInput = {
    where: logsWhereUniqueInput
    data: XOR<logsUpdateWithoutUsersInput, logsUncheckedUpdateWithoutUsersInput>
  }

  export type logsUpdateManyWithWhereWithoutUsersInput = {
    where: logsScalarWhereInput
    data: XOR<logsUpdateManyMutationInput, logsUncheckedUpdateManyWithoutUsersInput>
  }

  export type refresh_tokensUpsertWithWhereUniqueWithoutUsersInput = {
    where: refresh_tokensWhereUniqueInput
    update: XOR<refresh_tokensUpdateWithoutUsersInput, refresh_tokensUncheckedUpdateWithoutUsersInput>
    create: XOR<refresh_tokensCreateWithoutUsersInput, refresh_tokensUncheckedCreateWithoutUsersInput>
  }

  export type refresh_tokensUpdateWithWhereUniqueWithoutUsersInput = {
    where: refresh_tokensWhereUniqueInput
    data: XOR<refresh_tokensUpdateWithoutUsersInput, refresh_tokensUncheckedUpdateWithoutUsersInput>
  }

  export type refresh_tokensUpdateManyWithWhereWithoutUsersInput = {
    where: refresh_tokensScalarWhereInput
    data: XOR<refresh_tokensUpdateManyMutationInput, refresh_tokensUncheckedUpdateManyWithoutUsersInput>
  }

  export type refresh_tokensScalarWhereInput = {
    AND?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
    OR?: refresh_tokensScalarWhereInput[]
    NOT?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
    id?: StringFilter<"refresh_tokens"> | string
    token?: StringFilter<"refresh_tokens"> | string
    userId?: StringFilter<"refresh_tokens"> | string
    expiresAt?: DateTimeFilter<"refresh_tokens"> | Date | string
    revoked?: BoolFilter<"refresh_tokens"> | boolean
    createdAt?: DateTimeFilter<"refresh_tokens"> | Date | string
  }

  export type estabelecimentosUpsertWithoutUsersInput = {
    update: XOR<estabelecimentosUpdateWithoutUsersInput, estabelecimentosUncheckedUpdateWithoutUsersInput>
    create: XOR<estabelecimentosCreateWithoutUsersInput, estabelecimentosUncheckedCreateWithoutUsersInput>
    where?: estabelecimentosWhereInput
  }

  export type estabelecimentosUpdateToOneWithWhereWithoutUsersInput = {
    where?: estabelecimentosWhereInput
    data: XOR<estabelecimentosUpdateWithoutUsersInput, estabelecimentosUncheckedUpdateWithoutUsersInput>
  }

  export type estabelecimentosUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUpdateOneWithoutEstabelecimentosNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutEstabelecimentosNestedInput
    logs?: logsUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedUpdateOneWithoutEstabelecimentosNestedInput
    logs?: logsUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type franqueadosUpsertWithoutUsersInput = {
    update: XOR<franqueadosUpdateWithoutUsersInput, franqueadosUncheckedUpdateWithoutUsersInput>
    create: XOR<franqueadosCreateWithoutUsersInput, franqueadosUncheckedCreateWithoutUsersInput>
    where?: franqueadosWhereInput
  }

  export type franqueadosUpdateToOneWithWhereWithoutUsersInput = {
    where?: franqueadosWhereInput
    data: XOR<franqueadosUpdateWithoutUsersInput, franqueadosUncheckedUpdateWithoutUsersInput>
  }

  export type franqueadosUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUpdateManyWithoutFranqueadosNestedInput
    franqueadoras?: franqueadorasUpdateOneRequiredWithoutFranqueadosNestedInput
    logs?: logsUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: StringFieldUpdateOperationsInput | string
    cartoes?: cartoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUncheckedUpdateManyWithoutFranqueadosNestedInput
    logs?: logsUncheckedUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadorasUpsertWithoutUsersInput = {
    update: XOR<franqueadorasUpdateWithoutUsersInput, franqueadorasUncheckedUpdateWithoutUsersInput>
    create: XOR<franqueadorasCreateWithoutUsersInput, franqueadorasUncheckedCreateWithoutUsersInput>
    where?: franqueadorasWhereInput
  }

  export type franqueadorasUpdateToOneWithWhereWithoutUsersInput = {
    where?: franqueadorasWhereInput
    data: XOR<franqueadorasUpdateWithoutUsersInput, franqueadorasUncheckedUpdateWithoutUsersInput>
  }

  export type franqueadorasUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueados?: franqueadosUpdateManyWithoutFranqueadorasNestedInput
    logs?: logsUpdateManyWithoutFranqueadorasNestedInput
  }

  export type franqueadorasUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueados?: franqueadosUncheckedUpdateManyWithoutFranqueadorasNestedInput
    logs?: logsUncheckedUpdateManyWithoutFranqueadorasNestedInput
  }

  export type logsCreateManyCartoesInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type transacoesCreateManyCartoesInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId: string
  }

  export type logsUpdateWithoutCartoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comissoes?: comissoesUpdateOneWithoutLogsNestedInput
    displays?: displaysUpdateOneWithoutLogsNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutLogsNestedInput
    franqueados?: franqueadosUpdateOneWithoutLogsNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutLogsNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateOneWithoutLogsNestedInput
    transacoes?: transacoesUpdateOneWithoutLogsNestedInput
    users?: usersUpdateOneWithoutLogsNestedInput
  }

  export type logsUncheckedUpdateWithoutCartoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsUncheckedUpdateManyWithoutCartoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type transacoesUpdateWithoutCartoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comissoes?: comissoesUpdateManyWithoutTransacoesNestedInput
    logs?: logsUpdateManyWithoutTransacoesNestedInput
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutTransacoesNestedInput
  }

  export type transacoesUncheckedUpdateWithoutCartoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    comissoes?: comissoesUncheckedUpdateManyWithoutTransacoesNestedInput
    logs?: logsUncheckedUpdateManyWithoutTransacoesNestedInput
  }

  export type transacoesUncheckedUpdateManyWithoutCartoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
  }

  export type logsCreateManyComissoesInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type logsUpdateWithoutComissoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateOneWithoutLogsNestedInput
    displays?: displaysUpdateOneWithoutLogsNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutLogsNestedInput
    franqueados?: franqueadosUpdateOneWithoutLogsNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutLogsNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateOneWithoutLogsNestedInput
    transacoes?: transacoesUpdateOneWithoutLogsNestedInput
    users?: usersUpdateOneWithoutLogsNestedInput
  }

  export type logsUncheckedUpdateWithoutComissoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsUncheckedUpdateManyWithoutComissoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsCreateManyDisplaysInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
  }

  export type logsUpdateWithoutDisplaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateOneWithoutLogsNestedInput
    comissoes?: comissoesUpdateOneWithoutLogsNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutLogsNestedInput
    franqueados?: franqueadosUpdateOneWithoutLogsNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutLogsNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateOneWithoutLogsNestedInput
    transacoes?: transacoesUpdateOneWithoutLogsNestedInput
    users?: usersUpdateOneWithoutLogsNestedInput
  }

  export type logsUncheckedUpdateWithoutDisplaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsUncheckedUpdateManyWithoutDisplaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cartoesCreateManyEstabelecimentosInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    usuarioId?: string | null
  }

  export type comissoesCreateManyEstabelecimentosInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    transacaoId: string
  }

  export type cobrancasCreateManyEstabelecimentoInput = {
    id?: string
    franqueadoId: string
    asaasChargeId?: string | null
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.CobrancaStatus
    tipo: $Enums.TipoCobranca
    vencimento: Date | string
    urlPagamento?: string | null
    pixQrCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type displaysCreateManyEstabelecimentosInput = {
    id: string
    tipo: $Enums.DisplayTipo
    status?: $Enums.DisplayStatus
    dataInstalacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
  }

  export type logsCreateManyEstabelecimentosInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type solicitacoes_cartaoCreateManyEstabelecimentosInput = {
    id: string
    quantidade: number
    status?: $Enums.SolicitacaoStatus
    observacoes?: string | null
    dataAprovacao?: Date | string | null
    dataEnvio?: Date | string | null
    dataEntrega?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
  }

  export type transacoesCreateManyEstabelecimentosInput = {
    id: string
    tipo: $Enums.TransacaoTipo
    valor: number
    status?: $Enums.TransacaoStatus
    usuarioNome?: string | null
    usuarioTelefone?: string | null
    comprovante?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    cartaoId: string
  }

  export type usersCreateManyEstabelecimentosInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId?: string | null
    franqueadoId?: string | null
  }

  export type cartoesUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueados?: franqueadosUpdateOneRequiredWithoutCartoesNestedInput
    logs?: logsUpdateManyWithoutCartoesNestedInput
    transacoes?: transacoesUpdateManyWithoutCartoesNestedInput
  }

  export type cartoesUncheckedUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    logs?: logsUncheckedUpdateManyWithoutCartoesNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutCartoesNestedInput
  }

  export type cartoesUncheckedUpdateManyWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comissoesUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueados?: franqueadosUpdateOneRequiredWithoutComissoesNestedInput
    transacoes?: transacoesUpdateOneRequiredWithoutComissoesNestedInput
    logs?: logsUpdateManyWithoutComissoesNestedInput
  }

  export type comissoesUncheckedUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    transacaoId?: StringFieldUpdateOperationsInput | string
    logs?: logsUncheckedUpdateManyWithoutComissoesNestedInput
  }

  export type comissoesUncheckedUpdateManyWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    transacaoId?: StringFieldUpdateOperationsInput | string
  }

  export type cobrancasUpdateWithoutEstabelecimentoInput = {
    id?: StringFieldUpdateOperationsInput | string
    asaasChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFieldUpdateOperationsInput | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFieldUpdateOperationsInput | $Enums.TipoCobranca
    vencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    urlPagamento?: NullableStringFieldUpdateOperationsInput | string | null
    pixQrCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    franqueado?: franqueadosUpdateOneRequiredWithoutCobrancasNestedInput
  }

  export type cobrancasUncheckedUpdateWithoutEstabelecimentoInput = {
    id?: StringFieldUpdateOperationsInput | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    asaasChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFieldUpdateOperationsInput | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFieldUpdateOperationsInput | $Enums.TipoCobranca
    vencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    urlPagamento?: NullableStringFieldUpdateOperationsInput | string | null
    pixQrCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type cobrancasUncheckedUpdateManyWithoutEstabelecimentoInput = {
    id?: StringFieldUpdateOperationsInput | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    asaasChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFieldUpdateOperationsInput | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFieldUpdateOperationsInput | $Enums.TipoCobranca
    vencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    urlPagamento?: NullableStringFieldUpdateOperationsInput | string | null
    pixQrCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type displaysUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueados?: franqueadosUpdateOneRequiredWithoutDisplaysNestedInput
    logs?: logsUpdateManyWithoutDisplaysNestedInput
  }

  export type displaysUncheckedUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    logs?: logsUncheckedUpdateManyWithoutDisplaysNestedInput
  }

  export type displaysUncheckedUpdateManyWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
  }

  export type logsUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateOneWithoutLogsNestedInput
    comissoes?: comissoesUpdateOneWithoutLogsNestedInput
    displays?: displaysUpdateOneWithoutLogsNestedInput
    franqueados?: franqueadosUpdateOneWithoutLogsNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutLogsNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateOneWithoutLogsNestedInput
    transacoes?: transacoesUpdateOneWithoutLogsNestedInput
    users?: usersUpdateOneWithoutLogsNestedInput
  }

  export type logsUncheckedUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsUncheckedUpdateManyWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type solicitacoes_cartaoUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    logs?: logsUpdateManyWithoutSolicitacoes_cartaoNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutSolicitacoes_cartaoNestedInput
  }

  export type solicitacoes_cartaoUncheckedUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    logs?: logsUncheckedUpdateManyWithoutSolicitacoes_cartaoNestedInput
  }

  export type solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
  }

  export type transacoesUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comissoes?: comissoesUpdateManyWithoutTransacoesNestedInput
    logs?: logsUpdateManyWithoutTransacoesNestedInput
    cartoes?: cartoesUpdateOneRequiredWithoutTransacoesNestedInput
  }

  export type transacoesUncheckedUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartaoId?: StringFieldUpdateOperationsInput | string
    comissoes?: comissoesUncheckedUpdateManyWithoutTransacoesNestedInput
    logs?: logsUncheckedUpdateManyWithoutTransacoesNestedInput
  }

  export type transacoesUncheckedUpdateManyWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTransacaoTipoFieldUpdateOperationsInput | $Enums.TransacaoTipo
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumTransacaoStatusFieldUpdateOperationsInput | $Enums.TransacaoStatus
    usuarioNome?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioTelefone?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartaoId?: StringFieldUpdateOperationsInput | string
  }

  export type usersUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    logs?: logsUpdateManyWithoutUsersNestedInput
    refresh_tokens?: refresh_tokensUpdateManyWithoutUsersNestedInput
    franqueados?: franqueadosUpdateOneWithoutUsersNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    logs?: logsUncheckedUpdateManyWithoutUsersNestedInput
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateManyWithoutEstabelecimentosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type franqueadosCreateManyFranqueadorasInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    region: string
    comissionRate?: number
    status?: $Enums.Status
    asaasCustomerId?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type logsCreateManyFranqueadorasInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type usersCreateManyFranqueadorasInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId?: string | null
    estabelecimentoId?: string | null
  }

  export type franqueadosUpdateWithoutFranqueadorasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUpdateManyWithoutFranqueadosNestedInput
    logs?: logsUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutFranqueadosNestedInput
    users?: usersUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosUncheckedUpdateWithoutFranqueadorasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutFranqueadosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutFranqueadoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutFranqueadosNestedInput
    estabelecimentos?: estabelecimentosUncheckedUpdateManyWithoutFranqueadosNestedInput
    logs?: logsUncheckedUpdateManyWithoutFranqueadosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosNestedInput
    users?: usersUncheckedUpdateManyWithoutFranqueadosNestedInput
  }

  export type franqueadosUncheckedUpdateManyWithoutFranqueadorasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    comissionRate?: FloatFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    asaasCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type logsUpdateWithoutFranqueadorasInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateOneWithoutLogsNestedInput
    comissoes?: comissoesUpdateOneWithoutLogsNestedInput
    displays?: displaysUpdateOneWithoutLogsNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutLogsNestedInput
    franqueados?: franqueadosUpdateOneWithoutLogsNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateOneWithoutLogsNestedInput
    transacoes?: transacoesUpdateOneWithoutLogsNestedInput
    users?: usersUpdateOneWithoutLogsNestedInput
  }

  export type logsUncheckedUpdateWithoutFranqueadorasInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsUncheckedUpdateManyWithoutFranqueadorasInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUpdateWithoutFranqueadorasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    logs?: logsUpdateManyWithoutUsersNestedInput
    refresh_tokens?: refresh_tokensUpdateManyWithoutUsersNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutUsersNestedInput
    franqueados?: franqueadosUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutFranqueadorasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    logs?: logsUncheckedUpdateManyWithoutUsersNestedInput
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateManyWithoutFranqueadorasInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cartoesCreateManyFranqueadosInput = {
    id: string
    codigo: string
    qrCode: string
    valor?: number
    status?: $Enums.CartaoStatus
    dataAtivacao?: Date | string | null
    dataUtilizacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId?: string | null
    usuarioId?: string | null
  }

  export type comissoesCreateManyFranqueadosInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId: string
    transacaoId: string
  }

  export type cobrancasCreateManyFranqueadoInput = {
    id?: string
    estabelecimentoId: string
    asaasChargeId?: string | null
    valor: Decimal | DecimalJsLike | number | string
    status?: $Enums.CobrancaStatus
    tipo: $Enums.TipoCobranca
    vencimento: Date | string
    urlPagamento?: string | null
    pixQrCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type displaysCreateManyFranqueadosInput = {
    id: string
    tipo: $Enums.DisplayTipo
    status?: $Enums.DisplayStatus
    dataInstalacao?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId?: string | null
  }

  export type estabelecimentosCreateManyFranqueadosInput = {
    id: string
    name: string
    cnpj: string
    email: string
    phone: string
    address: string
    category: string
    status?: $Enums.EstabelecimentoStatus
    ativadoEm?: Date | string | null
    logo?: string | null
    asaasId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type logsCreateManyFranqueadosInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type solicitacoes_cartaoCreateManyFranqueadosInput = {
    id: string
    quantidade: number
    status?: $Enums.SolicitacaoStatus
    observacoes?: string | null
    dataAprovacao?: Date | string | null
    dataEnvio?: Date | string | null
    dataEntrega?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    estabelecimentoId: string
  }

  export type usersCreateManyFranqueadosInput = {
    id: string
    name: string
    email: string
    password: string
    type: $Enums.UserType
    status?: $Enums.Status
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoraId?: string | null
    estabelecimentoId?: string | null
  }

  export type cartoesUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentos?: estabelecimentosUpdateOneWithoutCartoesNestedInput
    logs?: logsUpdateManyWithoutCartoesNestedInput
    transacoes?: transacoesUpdateManyWithoutCartoesNestedInput
  }

  export type cartoesUncheckedUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
    logs?: logsUncheckedUpdateManyWithoutCartoesNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutCartoesNestedInput
  }

  export type cartoesUncheckedUpdateManyWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    status?: EnumCartaoStatusFieldUpdateOperationsInput | $Enums.CartaoStatus
    dataAtivacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataUtilizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comissoesUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutComissoesNestedInput
    transacoes?: transacoesUpdateOneRequiredWithoutComissoesNestedInput
    logs?: logsUpdateManyWithoutComissoesNestedInput
  }

  export type comissoesUncheckedUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    transacaoId?: StringFieldUpdateOperationsInput | string
    logs?: logsUncheckedUpdateManyWithoutComissoesNestedInput
  }

  export type comissoesUncheckedUpdateManyWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    transacaoId?: StringFieldUpdateOperationsInput | string
  }

  export type cobrancasUpdateWithoutFranqueadoInput = {
    id?: StringFieldUpdateOperationsInput | string
    asaasChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFieldUpdateOperationsInput | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFieldUpdateOperationsInput | $Enums.TipoCobranca
    vencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    urlPagamento?: NullableStringFieldUpdateOperationsInput | string | null
    pixQrCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estabelecimento?: estabelecimentosUpdateOneRequiredWithoutCobrancasNestedInput
  }

  export type cobrancasUncheckedUpdateWithoutFranqueadoInput = {
    id?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    asaasChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFieldUpdateOperationsInput | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFieldUpdateOperationsInput | $Enums.TipoCobranca
    vencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    urlPagamento?: NullableStringFieldUpdateOperationsInput | string | null
    pixQrCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type cobrancasUncheckedUpdateManyWithoutFranqueadoInput = {
    id?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    asaasChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumCobrancaStatusFieldUpdateOperationsInput | $Enums.CobrancaStatus
    tipo?: EnumTipoCobrancaFieldUpdateOperationsInput | $Enums.TipoCobranca
    vencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    urlPagamento?: NullableStringFieldUpdateOperationsInput | string | null
    pixQrCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type displaysUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentos?: estabelecimentosUpdateOneWithoutDisplaysNestedInput
    logs?: logsUpdateManyWithoutDisplaysNestedInput
  }

  export type displaysUncheckedUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    logs?: logsUncheckedUpdateManyWithoutDisplaysNestedInput
  }

  export type displaysUncheckedUpdateManyWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipo?: EnumDisplayTipoFieldUpdateOperationsInput | $Enums.DisplayTipo
    status?: EnumDisplayStatusFieldUpdateOperationsInput | $Enums.DisplayStatus
    dataInstalacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type estabelecimentosUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUpdateOneWithoutEstabelecimentosNestedInput
    logs?: logsUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    comissoes?: comissoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    cobrancas?: cobrancasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    displays?: displaysUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    estabelecimento_coords?: estabelecimento_coordsUncheckedUpdateOneWithoutEstabelecimentosNestedInput
    logs?: logsUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    transacoes?: transacoesUncheckedUpdateManyWithoutEstabelecimentosNestedInput
    users?: usersUncheckedUpdateManyWithoutEstabelecimentosNestedInput
  }

  export type estabelecimentosUncheckedUpdateManyWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    status?: EnumEstabelecimentoStatusFieldUpdateOperationsInput | $Enums.EstabelecimentoStatus
    ativadoEm?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    asaasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type logsUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateOneWithoutLogsNestedInput
    comissoes?: comissoesUpdateOneWithoutLogsNestedInput
    displays?: displaysUpdateOneWithoutLogsNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutLogsNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutLogsNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateOneWithoutLogsNestedInput
    transacoes?: transacoesUpdateOneWithoutLogsNestedInput
    users?: usersUpdateOneWithoutLogsNestedInput
  }

  export type logsUncheckedUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsUncheckedUpdateManyWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type solicitacoes_cartaoUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    logs?: logsUpdateManyWithoutSolicitacoes_cartaoNestedInput
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutSolicitacoes_cartaoNestedInput
  }

  export type solicitacoes_cartaoUncheckedUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    logs?: logsUncheckedUpdateManyWithoutSolicitacoes_cartaoNestedInput
  }

  export type solicitacoes_cartaoUncheckedUpdateManyWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantidade?: IntFieldUpdateOperationsInput | number
    status?: EnumSolicitacaoStatusFieldUpdateOperationsInput | $Enums.SolicitacaoStatus
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    dataAprovacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEnvio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataEntrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
  }

  export type usersUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    logs?: logsUpdateManyWithoutUsersNestedInput
    refresh_tokens?: refresh_tokensUpdateManyWithoutUsersNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutUsersNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    logs?: logsUncheckedUpdateManyWithoutUsersNestedInput
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateManyWithoutFranqueadosInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsCreateManySolicitacoes_cartaoInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    displayId?: string | null
  }

  export type logsUpdateWithoutSolicitacoes_cartaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateOneWithoutLogsNestedInput
    comissoes?: comissoesUpdateOneWithoutLogsNestedInput
    displays?: displaysUpdateOneWithoutLogsNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutLogsNestedInput
    franqueados?: franqueadosUpdateOneWithoutLogsNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutLogsNestedInput
    transacoes?: transacoesUpdateOneWithoutLogsNestedInput
    users?: usersUpdateOneWithoutLogsNestedInput
  }

  export type logsUncheckedUpdateWithoutSolicitacoes_cartaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsUncheckedUpdateManyWithoutSolicitacoes_cartaoInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type comissoesCreateManyTransacoesInput = {
    id: string
    valor: number
    percentual: number
    status?: $Enums.ComissaoStatus
    createdAt?: Date | string
    updatedAt: Date | string
    franqueadoId: string
    estabelecimentoId: string
  }

  export type logsCreateManyTransacoesInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    userId?: string | null
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type comissoesUpdateWithoutTransacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    estabelecimentos?: estabelecimentosUpdateOneRequiredWithoutComissoesNestedInput
    franqueados?: franqueadosUpdateOneRequiredWithoutComissoesNestedInput
    logs?: logsUpdateManyWithoutComissoesNestedInput
  }

  export type comissoesUncheckedUpdateWithoutTransacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
    logs?: logsUncheckedUpdateManyWithoutComissoesNestedInput
  }

  export type comissoesUncheckedUpdateManyWithoutTransacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    percentual?: FloatFieldUpdateOperationsInput | number
    status?: EnumComissaoStatusFieldUpdateOperationsInput | $Enums.ComissaoStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoId?: StringFieldUpdateOperationsInput | string
    estabelecimentoId?: StringFieldUpdateOperationsInput | string
  }

  export type logsUpdateWithoutTransacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateOneWithoutLogsNestedInput
    comissoes?: comissoesUpdateOneWithoutLogsNestedInput
    displays?: displaysUpdateOneWithoutLogsNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutLogsNestedInput
    franqueados?: franqueadosUpdateOneWithoutLogsNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutLogsNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateOneWithoutLogsNestedInput
    users?: usersUpdateOneWithoutLogsNestedInput
  }

  export type logsUncheckedUpdateWithoutTransacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsUncheckedUpdateManyWithoutTransacoesInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsCreateManyUsersInput = {
    id: string
    acao: string
    entidade: string
    entidadeId: string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip: string
    userAgent: string
    createdAt?: Date | string
    franqueadoraId?: string | null
    franqueadoId?: string | null
    estabelecimentoId?: string | null
    cartaoId?: string | null
    transacaoId?: string | null
    comissaoId?: string | null
    solicitacaoId?: string | null
    displayId?: string | null
  }

  export type refresh_tokensCreateManyUsersInput = {
    id: string
    token: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
  }

  export type logsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartoes?: cartoesUpdateOneWithoutLogsNestedInput
    comissoes?: comissoesUpdateOneWithoutLogsNestedInput
    displays?: displaysUpdateOneWithoutLogsNestedInput
    estabelecimentos?: estabelecimentosUpdateOneWithoutLogsNestedInput
    franqueados?: franqueadosUpdateOneWithoutLogsNestedInput
    franqueadoras?: franqueadorasUpdateOneWithoutLogsNestedInput
    solicitacoes_cartao?: solicitacoes_cartaoUpdateOneWithoutLogsNestedInput
    transacoes?: transacoesUpdateOneWithoutLogsNestedInput
  }

  export type logsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type logsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    entidade?: StringFieldUpdateOperationsInput | string
    entidadeId?: StringFieldUpdateOperationsInput | string
    dadosAnteriores?: NullableJsonNullValueInput | InputJsonValue
    dadosNovos?: NullableJsonNullValueInput | InputJsonValue
    ip?: StringFieldUpdateOperationsInput | string
    userAgent?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    franqueadoraId?: NullableStringFieldUpdateOperationsInput | string | null
    franqueadoId?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoId?: NullableStringFieldUpdateOperationsInput | string | null
    cartaoId?: NullableStringFieldUpdateOperationsInput | string | null
    transacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    comissaoId?: NullableStringFieldUpdateOperationsInput | string | null
    solicitacaoId?: NullableStringFieldUpdateOperationsInput | string | null
    displayId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type refresh_tokensUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type refresh_tokensUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}